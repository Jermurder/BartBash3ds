         w __cxa_pure_virtual
         w __deregister_frame_info
         w __gnu_Unwind_Find_exidx
         w __register_frame_info
         w pthread_cancel
         w pthread_cond_broadcast
         w pthread_cond_wait
         w pthread_getspecific
         w pthread_key_create
         w pthread_key_delete
         w pthread_mutex_lock
         w pthread_mutex_unlock
         w pthread_once
         w pthread_setspecific
         w userAppExit
         w userAppInit
00000000 00000802 B __ctru_dev_utf16_buf
00000000 A __sync_synchronize
00000000 b _TLS_MODULE_BASE_
00000000 a shift
00000000 a shift
00000804 00000401 B __ctru_dev_path_buf
00100000 A __start__
00100000 T _start
00100008 T __service_ptr
0010000c T __apt_appid
00100010 T __heap_size
00100014 T __linear_heap_size
00100018 T __system_arglist
0010001c T __system_runflags
00100020 t startup
00100058 t ClearMem
0010006c t ClrLoop
00100094 T _init
001000ac t .udivsi3_skip_div0_test
001000ac T __aeabi_uidiv
001000ac 000001ec T __udivsi3
00100298 00000020 T __aeabi_uidivmod
001002b8 T __aeabi_idiv
001002b8 00000220 T __divsi3
001002c0 t .divsi3_skip_div0_test
001004d8 00000020 T __aeabi_idivmod
001004f8 00000004 W __aeabi_idiv0
001004f8 00000004 W __aeabi_ldiv0
001004fc T __aeabi_drsub
00100504 000002b0 T __aeabi_dsub
00100504 000002b0 T __subdf3
00100508 000002ac T __adddf3
00100508 000002ac T __aeabi_dadd
001007b4 00000024 T __aeabi_ui2d
001007b4 00000024 T __floatunsidf
001007d8 00000028 T __aeabi_i2d
001007d8 00000028 T __floatsidf
00100800 00000048 T __aeabi_f2d
00100800 00000048 T __extendsfdf2
00100848 00000074 T __aeabi_ul2d
00100848 00000074 T __floatundidf
0010085c 00000060 T __aeabi_l2d
0010085c 00000060 T __floatdidf
001008bc 0000019c T __aeabi_frsub
001008c4 00000194 T __aeabi_fsub
001008c4 00000194 T __subsf3
001008c8 00000190 T __addsf3
001008c8 00000190 T __aeabi_fadd
00100a58 00000028 T __aeabi_ui2f
00100a58 00000028 T __floatunsisf
00100a60 00000020 T __aeabi_i2f
00100a60 00000020 T __floatsisf
00100a80 0000008c T __aeabi_ul2f
00100a80 0000008c T __floatundisf
00100a90 0000007c T __aeabi_l2f
00100a90 0000007c T __floatdisf
00100b0c T __aeabi_ldivmod
00100be0 T __aeabi_uldivmod
00100c1c 00000014 T __restore_core_regs
00100c1c 00000014 T restore_core_regs
00100c30 T __gnu_Unwind_Restore_VFP
00100c38 T __gnu_Unwind_Save_VFP
00100c40 T __gnu_Unwind_Restore_VFP_D
00100c48 T __gnu_Unwind_Save_VFP_D
00100c50 T __gnu_Unwind_Restore_VFP_D_16_to_31
00100c58 T __gnu_Unwind_Save_VFP_D_16_to_31
00100c60 T __gnu_Unwind_Restore_WMMXD
00100ca4 T __gnu_Unwind_Save_WMMXD
00100ce8 T __gnu_Unwind_Restore_WMMXC
00100cfc T __gnu_Unwind_Save_WMMXC
00100d10 00000024 T ___Unwind_RaiseException
00100d10 00000024 T _Unwind_RaiseException
00100d34 00000024 T ___Unwind_Resume
00100d34 00000024 T _Unwind_Resume
00100d58 00000024 T ___Unwind_Resume_or_Rethrow
00100d58 00000024 T _Unwind_Resume_or_Rethrow
00100d7c 00000024 T ___Unwind_ForcedUnwind
00100d7c 00000024 T _Unwind_ForcedUnwind
00100da0 00000024 T ___Unwind_Backtrace
00100da0 00000024 T _Unwind_Backtrace
00100de8 00000390 T strcmp
00101170 t __do_global_dtors_aux
001011c0 t frame_dummy
001011ec 0000007c t fillBuffer(tag_ndspWaveBuf*)
00101268 00000080 t audioThreadFunc(void*)
001012e8 0000001c t audioNDSPCallback(void*)
00101304 0000004c t audioManagerStop() [clone .part.0]
00101350 00000110 T audioManagerInit()
00101460 0000003c T audioManagerExit()
0010149c 0000012c T audioManagerPlay(char const*)
001015c8 00000018 T audioManagerStop()
001015e0 0000000c t __tcf_ZZ17getRandomBartTypevE2rd
001015ec 000000bc t void std::vector<double, std::allocator<double> >::_M_realloc_append<double const&>(double const&) [clone .isra.0]
001016a8 0000005c t __tcf_ZZ17getRandomBartTypevE4dist
00101704 000000f4 T drawBarts()
001017f8 00000278 T initBarts(SpriteManager*)
00101a70 00000060 T addBart(float, float, BartType)
00101ad0 00000150 T updateBartsAfterPhysics()
00101c20 000001b4 W std::discrete_distribution<int>::param_type::_M_initialize()
00101dd4 000000d0 W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::_M_gen_rand()
00101ea8 00000310 T getRandomBartType()
001021b8 0000008c T spawnBarts()
00102244 00000028 t _GLOBAL__sub_I_barts
0010226c 00000004 W b2ContactListener::EndContact(b2Contact*)
00102270 00000004 W b2ContactListener::PreSolve(b2Contact*, b2Manifold const*)
00102274 00000004 W b2ContactListener::PostSolve(b2Contact*, b2ContactImpulse const*)
00102278 00000004 W CollisionListener::~CollisionListener()
00102278 00000004 W CollisionListener::~CollisionListener()
0010227c 0000008c T CollisionListener::BeginContact(b2Contact*)
00102308 00000020 W CollisionListener::~CollisionListener()
00102328 00000010 T DeltaTime_Get()
00102338 00000044 T DeltaTime_Update()
0010237c 0000003c T onStartButtonClick()
001023b8 00000094 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
0010244c 0000011c t drawTransition() [clone .part.0]
00102568 00000074 T initSOC()
001025dc 00000150 T texts()
0010272c 000000cc T loadUI()
001027f8 00000194 T loadSprites()
0010298c 0000015c T drawTop(C3D_RenderTarget_tag*)
00102ae8 000001f8 T drawBottom(C3D_RenderTarget_tag*)
00102ce0 000002a0 T main
00102f80 00000048 t _GLOBAL__sub_I_gamestate
00102fc8 00000010 T PixelsToMeters(float)
00102fd8 00000010 T MetersToPixels(float)
00102fe8 00000234 T PhysicsManager_Init()
0010321c 00000018 T PhysicsManager_Update(float)
00103234 000001c4 T PhysicsManager_SpawnPlayer(float, float)
001033f8 00000010 T PhysicsManager_GetPlayer()
00103408 00000010 T PhysicsManager_GetWorld()
00103418 00000030 T changeScene(SceneManager*, int)
00103448 0000000c T SpriteManager_Init(SpriteManager*)
00103454 00000060 T SpriteManager_Load(SpriteManager*, char const*, char const*)
001034b4 00000054 T SpriteManager_GetSheet(SpriteManager*, char const*)
00103508 00000040 T SpriteManager_Free(SpriteManager*)
00103548 00000040 T UIButton_Init(UIButton*, C2D_SpriteSheet_s*, int, float, float, float, float)
00103588 00000010 T UIButton_SetHoverSprite(UIButton*, int)
00103598 00000010 T UIButton_SetPressedSprite(UIButton*, int)
001035a8 000000c4 T UIButton_Update(UIButton*, touchPosition)
0010366c 000000f0 T UIButton_Draw(UIButton*)
0010375c 0000009c T UIText::Init(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, C2D_Font_s*, float, float, float, unsigned long)
001037f8 00000040 T UIText::Draw() const
00103838 00000034 T UIText::Free()
0010386c 00000044 t C2Di_FrameEndHook
001038b0 0000036c T C2D_Init
00103c1c 0000004c T C2D_Fini
00103c68 000000b8 T C2D_Prepare
00103d20 00000048 T C2D_Flush
00103d68 00000104 T C2D_SceneSize
00103e6c 00000058 T C2D_CreateScreenTarget
00103ec4 00000064 T C2D_TargetClear
00103f28 0000013c T C2Di_CalcQuad
00104064 00000058 T C2Di_AppendQuad
001040bc 00000040 T C2Di_AppendVtx
001040fc 00000550 T C2Di_Update
0010464c 000002b0 T C2D_DrawImage
001048fc 00000158 T C2D_DrawRectangle
00104a54 00000018 t C2Di_GlyphComp
00104a6c 00000140 t C2Di_CalcLineWidths
00104bac 000001dc T C2D_TextBufNew
00104d88 00000004 T C2D_TextBufDelete
00104d8c 000001c8 T C2D_TextFontParseLine
00104f54 000000a8 T C2D_TextFontParse
00104ffc 00000014 T C2D_TextParse
00105010 00000030 T C2D_TextOptimize
00105040 00000f6c T C2D_DrawText
00105fac 0000006c T C2D_SpriteSheetLoadFromHandle
00106018 00000048 T C2D_SpriteSheetLoad
00106060 00000028 T C2D_SpriteSheetFree
00106088 0000002c T C2D_SpriteSheetGetImage
001060b4 00000028 T C2D_FontFree
001060dc 000000e8 t C2Di_PostLoadFont
001061c4 000000b4 T C2D_FontLoadFromHandle
00106278 00000034 T C2D_FontLoad
001062ac 00000044 T C2D_FontGlyphIndexFromCodePoint
001062f0 00000078 T C2D_FontCalcGlyphPos
00106368 00000028 T AttrInfo_Init
00106390 00000094 T AttrInfo_AddLoader
00106424 00000054 T C3D_SetAttrInfo
00106478 00000080 T C3Di_AttrInfoBind
001064f8 00000004 W C3Di_LightEnvUpdate
001064fc 00000004 W C3Di_LightEnvDirty
00106500 000000b4 t C3Di_AptEventHook
001065b4 00000004 W C3Di_GasUpdate
001065b8 000001d0 T C3D_Init
00106788 00000098 T C3D_SetViewport
00106820 000004e8 T C3Di_UpdateContext
00106d08 000000e0 T C3Di_SplitFrame
00106de8 00000044 T C3D_Fini
00106e2c 00000194 T C3D_BindProgram
00106fc0 00000024 T BufInfo_Init
00106fe4 00000080 T BufInfo_Add
00107064 0000003c T C3D_SetBufInfo
001070a0 00000048 T C3Di_BufInfoBind
001070e8 0000021c T C3D_DrawElements
00107304 00000040 T C3D_DepthMap
00107344 0000001c T C3D_CullFace
00107360 00000040 T C3D_StencilTest
001073a0 00000024 T C3D_StencilOp
001073c4 0000001c T C3D_BlendingColor
001073e0 00000024 T C3D_EarlyDepthTest
00107404 0000002c T C3D_DepthTest
00107430 0000002c T C3D_AlphaTest
0010745c 00000050 T C3D_AlphaBlend
001074ac 00000030 T C3D_FragOpMode
001074dc 00000044 T C3D_FragOpShadow
00107520 000001ac T C3Di_EffectBind
001076cc 0000001c T C3D_CalcColorBufSize
001076e8 0000001c T C3D_CalcDepthBufSize
00107704 00000044 T C3D_SetFrameBuf
00107748 0000016c T C3Di_FrameBufBind
001078b4 000000c8 T C3D_FrameBufClear
0010797c 00000044 T C3D_FrameBufTransfer
001079c0 000000a8 T C3D_ImmSendAttrib
00107a68 00000070 T C3D_ProcTexInit
00107ad8 00000054 T C3D_ProcTexBind
00107b2c 0000005c T C3D_ProcTexLutBind
00107b88 000000a4 T ProcTexLut_FromArray
00107c2c 00000178 T C3Di_ProcTexUpdate
00107da4 00000068 T C3Di_ProcTexDirty
00107e0c 0000004c t onVBlank0
00107e58 0000004c t onVBlank1
00107ea4 00000080 t C3Di_RenderTargetDestroy
00107f24 000000f4 t onQueueFinish
00108018 00000038 T C3Di_RenderQueueEnableVBlank
00108050 00000030 T C3Di_RenderQueueDisableVBlank
00108080 00000060 T C3Di_RenderQueueInit
001080e0 000000b4 T C3Di_RenderQueueExit
00108194 00000034 T C3Di_RenderQueueWaitDone
001081c8 000000e8 T C3D_FrameBegin
001082b0 00000048 T C3D_FrameDrawOn
001082f8 00000058 T C3D_FrameSplit
00108350 000001d0 T C3D_FrameEnd
00108520 0000001c T C3D_FrameEndHook
0010853c 00000170 T C3D_RenderTargetCreate
001086ac 000000a8 T C3D_RenderTargetSetOutput
00108754 000000fc T C3D_SyncTextureCopy
00108850 000003d8 t Tex3DSi_ImportCommon
00108c28 00000038 T Tex3DS_TextureImportStdio
00108c60 0000001c T Tex3DS_GetSubTexture
00108c7c 00000004 T Tex3DS_TextureFree
00108c80 00000034 T C3D_GetTexEnv
00108cb4 00000024 T C3Di_TexEnvBind
00108cd8 00000290 T C3D_TexInitWithParams
00108f68 000000c8 T C3D_TexLoadImage
00109030 00000044 T C3D_TexBind
00109074 00000074 T C3D_TexDelete
001090e8 0000014c T C3Di_SetTex
00109234 00000290 T C3D_UpdateUniforms
001094c4 000000c0 T C3Di_DirtyUniforms
00109584 000000d8 T C3Di_LoadShaderUniforms
0010965c 00000028 T C3Di_ClearShaderUniforms
00109684 000000cc T Mtx_Ortho
00109750 000000cc T Mtx_OrthoTilt
0010981c 00000024 t addrMapNodeComparator(rbtree_node const*, rbtree_node const*)
00109840 00000004 t addrMapNodeDestructor(rbtree_node*)
00109844 0000012c T linearMemAlign
00109970 00000008 T linearAlloc
00109978 0000005c T linearFree
001099d4 00000088 T MemPool::CoalesceRight(MemBlock*)
00109a5c 00000178 T MemPool::Allocate(MemChunk&, unsigned long, int)
00109bd4 00000118 T MemPool::Deallocate(MemChunk const&)
00109cec 00000030 T MemPool::GetFreeSpace()
00109d1c 00000024 t addrMapNodeComparator(rbtree_node const*, rbtree_node const*)
00109d40 00000004 t addrMapNodeDestructor(rbtree_node*)
00109d44 00000248 T vramMemAlignAt
00109f8c 0000000c T vramAlloc
00109f98 0000000c T vramAllocAt
00109fa4 00000094 T vramFree
0010a038 000000d8 T link3dsConnectToHost
0010a110 0000009c T fontEnsureMapped
0010a1ac 0000007c T fontFixPointers
0010a228 00000100 T fontGlyphIndexFromCodePoint
0010a328 00000214 T fontCalcGlyphPos
0010a53c 000000cc t gfxPresentFramebuffer
0010a608 0000001c T gfxIsWide
0010a624 000000f8 T gfxSetScreenFormat
0010a71c 000000d8 T gfxInit
0010a7f4 00000010 T gfxInitDefault
0010a804 000000b8 T gfxExit
0010a8bc 000000a0 T gfxGetFramebuffer
0010a95c 00000028 T gfxScreenSwapBuffers
0010a984 00000074 T osConvertVirtToPhys
0010a9f8 00000054 T osGetTimeRef
0010aa4c 000000ec T osGetTime
0010ab38 00000034 T __ctru_speedup_config
0010ab6c 00000008 t romfs_close
0010ab74 000000ac t romfs_seek
0010ac20 00000024 t romfs_dirreset
0010ac44 000000c0 t fill_dir
0010ad04 000002ac t romfs_dirnext
0010afb0 00000074 t romfs_free
0010b024 000000d0 t searchForFile.constprop.0
0010b0f4 000000d4 t searchForDir.constprop.0
0010b1c8 000001c0 t navigateToDir.constprop.0
0010b388 00000114 t romfs_open
0010b49c 0000004c t romfs_chdir
0010b4e8 00000068 t romfs_diropen
0010b550 00000178 t romfs_stat
0010b6c8 00000008 t romfs_dirclose
0010b6d0 0000007c t romfs_fstat
0010b74c 000000d0 t romfs_read
0010b81c 0000028c T romfsMountFromFile
0010baa8 00000098 T romfsMountFromCurrentProcess
0010bb40 00000258 T romfsMountSelf
0010bd98 000000a0 T romfsUnmount
0010be38 0000000c T __sync_init
0010be44 00000018 T __sync_fini
0010be5c 00000028 T syncArbitrateAddress
0010be84 0000001c T LightLock_Init
0010bea0 000000ac T LightLock_Lock
0010bf4c 00000040 T LightLock_Unlock
0010bf8c 00000054 T RecursiveLock_Lock
0010bfe0 00000054 T RecursiveLock_Unlock
0010c034 00000044 T LightEvent_Init
0010c078 000000b8 T LightEvent_Clear
0010c130 000000dc T LightEvent_Signal
0010c20c 00000050 T LightEvent_TryWait
0010c25c 000000ac T LightEvent_Wait
0010c308 000001fc T threadCreate
0010c504 00000038 T threadFree
0010c53c 00000024 T threadJoin
0010c560 00000030 T threadGetCurrent
0010c590 00000040 T threadExit
0010c5d0 00000020 t _thread_begin
0010c5f0 0000013c T GPUCMD_Add
0010c72c 000000b0 T GPUCMD_Split
0010c7dc 00000034 T f32tof16
0010c810 00000034 T f32tof24
0010c844 00000038 T f32tof31
0010c87c 00000010 T GX_BindQueue
0010c88c 0000007c T GX_ProcessCommandList
0010c908 00000074 T GX_MemoryFill
0010c97c 00000074 T GX_DisplayTransfer
0010c9f0 00000078 T GX_TextureCopy
0010ca68 00000064 t gxCmdQueueDoCommands.part.0
0010cacc 000000e4 T gxCmdQueueInterrupt
0010cbb0 00000068 T gxCmdQueueClear
0010cc18 00000108 T gxCmdQueueAdd
0010cd20 00000080 T gxCmdQueueRun
0010cda0 00000064 T gxCmdQueueStop
0010ce04 0000008c T gxCmdQueueWait
0010ce90 000001e0 T shaderInstanceInit
0010d070 00000018 T shaderInstanceGetUniformLocation
0010d088 0000001c T shaderProgramInit
0010d0a4 00000074 T shaderProgramFree
0010d118 00000094 T shaderProgramSetVsh
0010d1ac 000008d0 T shaderProgramConfigure
0010da7c 000001dc t DVLE_GenerateOutmap.part.0
0010dc58 000001ac T DVLB_ParseFile
0010de04 00000050 T DVLB_Free
0010de54 00000074 T DVLE_GetUniformRegister
0010dec8 00000158 t ndspUpdateMaster
0010e020 00000108 t ndspFinalize
0010e128 00000254 t ndspInitialize.part.0
0010e37c 00000108 t ndspHookCallback
0010e488 00000318 t ndspThreadMain
0010e7a0 000003f0 T ndspInit
0010eb90 000000d8 T ndspExit
0010ec68 0000003c T ndspSetMasterVol
0010eca4 00000034 T ndspSetOutputMode
0010ecd8 00000010 T ndspSetCallback
0010ece8 000000e0 T ndspChnReset
0010edc8 00000018 T ndspChnSetFormat
0010ede0 00000050 T ndspChnSetInterp
0010ee30 00000060 T ndspChnSetRate
0010ee90 00000080 T ndspChnSetMix
0010ef10 000000c8 T ndspChnWaveBufAdd
0010efd8 00000040 T ndspiInitChn
0010f018 0000002c T ndspiDirtyChn
0010f044 0000043c T ndspiUpdateChn
0010f480 00000180 T ndspiReadChnState
0010f600 00000180 t aptConvertScreenForCapture
0010f780 00000138 T aptSendCommand
0010f8b8 00000044 t aptExitProcess
0010f8fc 00000394 T aptExit
0010fc90 000000d8 T aptHandleSleep
0010fd68 00000034 T aptHook
0010fd9c 00000030 T aptUnhook
0010fdcc 00000084 T APT_SleepIfShellClosed
0010fe50 00000078 T aptSetSleepAllowed
0010fec8 00000084 T APT_UnlockTransition
0010ff50 00000470 t aptEventHandler
001103c0 000000bc T APT_ReceiveParameter
0011047c 000000b0 t aptReceiveParameter.constprop.0
00110530 00000294 t aptScreenTransfer
001107c4 000002d0 t aptWaitForWakeUp.isra.0
00110a94 000000f4 T aptJumpToHomeMenu
00110b88 00000058 T aptMainLoop
00110be0 00000240 T aptInit
00110e20 00000090 T APT_CheckNew3DS
00110eb0 00000048 T APT_GetSharedFont
00110ef8 000000a8 T cfguInit
00110fa0 0000003c T cfguExit
00110fdc 0000004c T CFGU_GetConfigInfoBlk2
00111028 000000a4 t DSP_LoadComponent.part.0
001110cc 000000fc T dspInit
001111c8 0000008c T dspExit
00111254 00000024 T dspHook
00111278 00000030 T dspUnhook
001112a8 000000b4 T aptDspSleep
0011135c 000000b4 T aptDspWakeup
00111410 00000044 T aptDspCancel
00111454 00000050 T DSP_FlushDataCache
001114a4 00000034 T DSP_SetSemaphore
001114d8 00000034 T DSP_SetSemaphoreMask
0011150c 00000038 T DSP_GetSemaphoreHandle
00111544 0000003c T DSP_LoadComponent
00111580 00000044 T DSP_RegisterInterruptEvents
001115c4 00000078 T DSP_ReadPipeIfPossible
0011163c 0000004c T DSP_WriteProcessPipe
00111688 00000044 T DSP_ConvertProcessAddressFromDspDram
001116cc 00000044 T DSP_RecvData
00111710 00000050 T DSP_RecvDataIsReady
00111760 00000104 T fsInit
00111864 0000003c T fsExit
001118a0 00000068 T fsExemptFromSession
00111908 00000050 T fsUnexemptFromSession
00111958 000000cc T FSUSER_OpenFile
00111a24 000000cc T FSUSER_OpenFileDirectly
00111af0 000000b8 T FSUSER_DeleteFile
00111ba8 000000f4 T FSUSER_RenameFile
00111c9c 000000b8 T FSUSER_DeleteDirectory
00111d54 000000d0 T FSUSER_CreateFile
00111e24 000000c0 T FSUSER_CreateDirectory
00111ee4 000000f4 T FSUSER_RenameDirectory
00111fd8 000000b4 T FSUSER_OpenDirectory
0011208c 00000090 T FSUSER_OpenArchive
0011211c 0000008c T FSUSER_CloseArchive
001121a8 00000074 T FSUSER_GetSdmcArchiveResource
0011221c 00000064 T FSUSER_IsSdmcWritable
00112280 00000064 T FSFILE_Read
001122e4 0000006c T FSFILE_Write
00112350 00000044 T FSFILE_GetSize
00112394 00000028 T FSFILE_SetSize
001123bc 0000003c T FSFILE_Close
001123f8 00000024 T FSFILE_Flush
0011241c 00000060 T FSDIR_Read
0011247c 0000003c T FSDIR_Close
001124b8 00000c70 t gspHardwareInit
00113128 00000280 T gspInit
001133a8 00000110 T gspExit
001134b8 00000010 T gspHasGpuRight
001134c8 000000a4 T gspPresentBuffer
0011356c 00000030 T gspSetEventCallback
0011359c 00000050 T gspWaitForEvent
001135ec 0000004c T gspWaitForAnyEvent
00113638 00000154 t gspEventThreadMain
0011378c 0000012c T gspSubmitGxCommand
001138b8 00000050 T GSPGPU_FlushDataCache
00113908 00000034 T GSPGPU_SetLcdForceBlack
0011393c 00000080 T GSPGPU_AcquireRight
001139bc 0000005c T GSPGPU_ReleaseRight
00113a18 0000007c T GSPGPU_ImportDisplayCaptureInfo
00113a94 0000002c T GSPGPU_SaveVramSysArea
00113ac0 0000002c T GSPGPU_RestoreVramSysArea
00113aec 00000024 W hidShouldUseIrrst
00113b10 000001cc T hidInit
00113cdc 000000e8 T hidExit
00113dc4 000002a0 T hidScanInput
00114064 00000010 T hidKeysDown
00114074 00000010 T hidKeysUp
00114084 00000018 T hidTouchRead
0011409c 000001a4 T irrstInit
00114240 000000dc T irrstExit
0011431c 000000b4 T irrstScanInput
001143d0 00000024 T irrstKeysHeld
001143f4 00000078 T ptmSysmInit
0011446c 0000003c T ptmSysmExit
001144a8 00000034 T PTMSYSM_ConfigureNew3DSCPU
001144dc 00000174 T connect
00114650 00000014 t soc_open
00114664 00000034 t soc_read
00114698 00000034 t soc_write
001146cc 000000b0 t soc_close
0011477c 00000190 T socInit
0011490c 00000088 T socExit
00114994 00000148 T socuipc_cmd7
00114adc 00000168 T socuipc_cmd8
00114c44 00000010 T soc_recvfrom
00114c54 0000015c T socuipc_cmd9
00114db0 00000160 T socuipc_cmda
00114f10 00000010 T soc_sendto
00114f20 0000016c T socket
0011508c 000000e0 t buffer_read
0011516c 000000cc t iov_read
00115238 00000164 t iov_memmove
0011539c 000001e0 t decompress_rle
0011557c 00000264 t decompress_lzss
001157e0 00000418 t decompress_lz11
00115bf8 0000031c t decompress_huff.isra.0
00115f14 00000010 T decompressCallback_Stdio
00115f24 000000e4 T decompressHeader
00116008 0000021c T decompressV
00116224 00000074 T rbtree_find
00116298 00000010 T rbtree_init
001162a8 00000198 t do_insert
00116440 00000008 T rbtree_insert
00116448 00000310 T rbtree_remove
00116758 00000090 T rbtree_rotate
001167e8 00000140 T decode_utf8
00116928 000000e8 T utf16_to_utf8
00116a10 000000c0 T utf8_to_utf16
00116ad0 000001e8 W __system_allocateHeaps
00116cb8 00000038 W __libctru_init
00116cf0 0000016c W __system_initArgv
00116e5c 00000030 T __syscall_getreent
00116e8c 00000064 T __syscall_gettod_r
00116ef0 00000004 T __syscall_lock_acquire
00116ef4 00000004 T __syscall_lock_release
00116ef8 00000004 T __syscall_lock_acquire_recursive
00116efc 00000004 T __syscall_lock_release_recursive
00116f00 00000004 T __syscall_exit
00116f04 00000054 T initThreadVars
00116f58 00000080 T __system_initSyscalls
00116fd8 T svcControlMemory
00116ff8 T svcQueryMemory
00117028 T svcExitProcess
00117030 T svcCreateThread
00117050 T svcExitThread
00117058 T svcSleepThread
00117060 T svcGetThreadPriority
00117074 T svcReleaseMutex
0011707c T svcCreateEvent
00117090 T svcSignalEvent
00117098 T svcClearEvent
001170a0 T svcCreateMemoryBlock
001170b8 T svcMapMemoryBlock
001170c0 T svcUnmapMemoryBlock
001170c8 T svcCreateAddressArbiter
001170dc T svcArbitrateAddressNoTimeout
001170e4 T svcCloseHandle
001170ec T svcWaitSynchronization
001170f4 T svcWaitSynchronizationN
0011711c T svcDuplicateHandle
00117130 T svcGetSystemTick
00117138 T svcConnectToPort
0011714c T svcSendSyncRequest
00117154 T svcGetResourceLimit
00117168 T svcGetResourceLimitLimitValues
00117170 T svcGetResourceLimitCurrentValues
00117178 T svcBreak
00117180 T __aeabi_read_tp
0011718c W initSystem
001171dc W __ctru_exit
001171f0 0000008c W envGetHandle
0011727c 00000050 W envDestroyHandles
001172cc 00000164 T srvInit
00117430 00000064 T srvExit
00117494 00000060 T srvEnableNotification
001174f4 000000a0 T srvGetServiceHandleDirect
00117594 00000048 T srvGetServiceHandle
001175dc 00000034 T srvSubscribe
00117610 00000060 T srvReceiveNotification
00117670 00000038 T srvPublishToSubscriber
001176a8 00000090 t mappableFindAddressWithin
00117738 00000028 T mappableInit
00117760 0000007c T mappableAlloc
001177dc 00000004 T mappableFree
001177e0 0000000c T srvPmGetSessionHandle
001177ec 0000003c T _net_convert_error
00117828 00000060 T rbtree_node_next
00117888 00000054 T decode_utf16
001178dc 00000054 T encode_utf16
00117930 000000e0 T encode_utf8
00117a10 00000030 W __appExit
00117a40 00000030 W __appInit
00117a70 00000090 W __libctru_exit
00117b00 00000014 t archive_link
00117b14 00000014 t archive_dirreset
00117b28 00000014 t archive_chmod
00117b3c 00000024 t error_cmp
00117b60 00000050 t archive_translate_error
00117bb0 000000c0 t archive_seek
00117c70 00000078 t _archiveInit.part.0
00117ce8 000000d4 t archiveFindDevice.part.0
00117dbc 00000298 t archive_utf16path
00118054 00000098 t _archiveUnmountDeviceStruct.part.0
001180ec 00000014 t archive_statvfs
00118100 00000014 t archive_fchmod
00118114 00000178 t _archiveMountDevice
0011828c 000000f8 t archive_diropen
00118384 000000ac t archive_fstat
00118430 00000074 t archive_fsync
001184a4 00000074 t archive_close
00118518 00000078 t archive_dirclose
00118590 000000ec t sdmc_statvfs
0011867c 000000f8 t archive_chdir
00118774 0000008c t archive_ftruncate
00118800 000000bc t archive_read
001188bc 000000a8 t archive_unlink
00118964 000000c0 t archive_rmdir
00118a24 000000d8 t archive_mkdir
00118afc 000001a0 t archive_stat
00118c9c 00000164 t archive_dirnext
00118e00 0000013c t archive_write
00118f40 00000254 t archive_open
00119194 00000270 t archive_rename
00119404 000001c8 T archiveMountSdmc
001195cc 00000054 T archiveUnmountAll
00119620 00000104 t op_granpos_add
00119724 000000fc t op_stereo_filter
00119820 00000178 t op_get_next_page
00119998 000002e4 t op_fetch_headers_impl
00119c7c 000000a8 t op_fetch_headers
00119d24 00000038 t op_get_packet_duration
00119d5c 00000098 t op_collect_audio_packets
00119df4 000000d4 t op_clear
00119ec8 0000006c t op_seek_helper
00119f34 00000438 t op_float2short_filter
0011a36c 000000a4 t op_decode
0011a410 000000e4 t op_rescale64.part.0
0011a4f4 000000e4 t op_granpos_diff
0011a5d8 00000394 t op_find_initial_pcm_offset
0011a96c 00000308 t op_find_final_pcm_offset
0011ac74 000000cc t op_update_gain.part.7
0011ad40 00000140 t op_make_decode_ready.part.8
0011ae80 000008fc t op_fetch_and_process_page
0011b77c 000000b4 t op_float2short_stereo_filter
0011b830 00000408 t op_read_native.part.10
0011bc38 000000b8 t op_filter_read_native
0011bcf0 00000ea4 t op_open_seekable2
0011cb94 00000064 t op_open2
0011cbf8 00000244 T op_test_callbacks
0011ce3c 0000004c T op_open_callbacks
0011ce88 00000064 t op_open_close_on_failure
0011ceec 00000034 T op_open_file
0011cf20 00000020 T op_free
0011cf40 00000024 T op_read_stereo
0011cf64 00000004 t op_ftell
0011cf68 00000004 t op_fseek
0011cf6c 00000044 t op_fread
0011cfb0 00000034 T op_fopen
0011cfe4 00000050 t op_strdup_with_len
0011d034 0000009c t op_tags_ensure_capacity
0011d0d0 000001f4 t opus_tags_parse_impl
0011d2c4 000000f4 t opus_tags_get_gain.isra.0.constprop.1
0011d3b8 00000204 T opus_head_parse
0011d5bc 00000060 T opus_tags_clear
0011d61c 00000074 T opus_tags_parse
0011d690 0000001c T opus_tags_get_album_gain
0011d6ac 0000001c T opus_tags_get_track_gain
0011d6c8 00000058 T op_strncasecmp
0011d720 00000264 T sinf
0011d984 00000050 T sqrtf
0011d9d4 00000024 t with_errnof
0011d9f8 0000001c T __math_invalidf
0011da14 000000b8 T lrintf
0011dacc 000000c0 T ceilf
0011db90 0000025c T cosf
0011ddec 00000008 T __ieee754_sqrtf
0011ddf4 00000100 t _os_update_crc
0011def4 0000012c t _packetout
0011e020 00000010 T ogg_page_bos
0011e030 00000044 T ogg_page_granulepos
0011e074 0000000c T ogg_page_serialno
0011e080 00000054 T ogg_stream_clear
0011e0d4 00000098 T ogg_stream_init
0011e16c 00000078 t _os_body_expand
0011e1e4 0000008c t _os_lacing_expand
0011e270 00000078 T ogg_page_checksum_set
0011e2e8 00000030 T ogg_sync_init
0011e318 00000044 T ogg_sync_clear
0011e35c 000000c8 T ogg_sync_buffer
0011e424 00000034 T ogg_sync_wrote
0011e458 000001d8 T ogg_sync_pageseek
0011e630 00000380 T ogg_stream_pagein
0011e9b0 00000030 T ogg_sync_reset
0011e9e0 00000068 T ogg_stream_reset_serialno
0011ea48 00000024 T ogg_stream_packetout
0011ea6c 00000380 T opus_pcm_soft_clip
0011edec 000000a4 T opus_packet_get_samples_per_frame
0011ee90 00000480 T opus_packet_parse_impl
0011f310 000000b4 t smooth_fade
0011f3c8 00000e24 t opus_decode_frame
001201ec 0000004c t opus_decoder_get_size.part.2
00120238 00000018 T opus_decoder_get_size
00120250 00000140 T opus_decoder_init
00120390 00000604 T opus_decode_native
00120994 000002e0 T opus_decoder_ctl
00120c74 00000050 T opus_packet_get_nb_frames
00120cc4 00000074 T opus_packet_get_nb_samples
00120d38 00000078 t opus_copy_channel_out_float
00120db0 00000044 t opus_multistream_decoder_get_size.part.2
00120df4 00000128 T opus_multistream_decoder_init
00120f1c 000000e4 T opus_multistream_decoder_create
00121000 000002bc T opus_multistream_decoder_ctl_va_list
001212bc 00000030 T opus_multistream_decoder_ctl
001212ec 00000478 T opus_multistream_decode_native
00121764 0000003c T opus_multistream_decode_float
001217a0 00000004 T opus_multistream_decoder_destroy
001217a4 00000038 T celt_fatal
001217dc 00000088 T resampling_factor
00121864 000002c0 T comb_filter
00121b24 0000006c T init_caps
00121b90 00000224 t deemphasis
00121db4 00000498 t celt_synthesis
00122250 00000eb0 t celt_decode_lost
00123100 000002d0 T validate_celt_decoder
001233d0 00000040 T celt_decoder_get_size
00123410 000011f0 T celt_decode_with_ec
00124600 00000304 T opus_custom_decoder_ctl
00124904 000000e8 T celt_decoder_init
001249ec 00000048 T ec_tell_frac
00124a34 0000007c t ec_dec_normalize
00124ab0 00000060 T ec_dec_init
00124b10 0000003c T ec_decode
00124b4c 00000040 T ec_decode_bin
00124b8c 0000003c T ec_dec_update
00124bc8 00000034 T ec_dec_bit_logp
00124bfc 00000050 T ec_dec_icdf
00124c4c 00000074 T ec_dec_bits
00124cc0 00000114 T ec_dec_uint
00124dd4 00000214 T clt_mdct_backward_c
00124fe8 000000ac T opus_custom_mode_create
00125094 00000120 t find_best_pitch
001251b4 00000254 T pitch_downsample
00125408 00000298 T celt_pitch_xcorr_c
001256a0 000002b0 T pitch_search
00125950 00000124 T _celt_lpc
00125a74 000002d8 T celt_fir_c
00125d4c 000003e4 T celt_iir
00126130 00000168 T _celt_autocorr
00126298 00000200 T unquant_coarse_energy
00126498 000000dc T unquant_fine_energy
00126574 00000160 T unquant_energy_finalise
001266d4 00000df0 T clt_compute_allocation
001274c4 0000009c t exp_rotation1
00127560 00000080 t normalise_residual
001275e0 0000018c t exp_rotation.part.0
0012776c 0000030c T op_pvq_search_c
00127a78 000001e0 T alg_quant
00127c58 00000140 T alg_unquant
00127d98 000000b4 T renormalise_vector
00127e50 00000274 T stereo_itheta
001280c4 00000014 T silk_Get_Decoder_Size
001280d8 00000038 T silk_InitDecoder
00128110 00000bc0 T silk_Decode
00128cd0 00000294 T silk_stereo_MS_to_LR
00128f64 000003c0 T silk_resampler_init
00129324 00000184 T silk_resampler
001294a8 000009b8 T silk_resampler_private_down_FIR
00129e60 000001e4 T silk_resampler_private_IIR_FIR
0012a044 00000218 T silk_resampler_private_up2_HQ
0012a25c 00000004 T silk_resampler_private_up2_HQ_wrapper
0012a260 00000134 T silk_stereo_decode_pred
0012a394 00000020 T silk_stereo_decode_mid_only
0012a3b4 0000007c T validate_layout
0012a430 00000074 T get_left_channel
0012a4a4 00000078 T get_right_channel
0012a51c 00000078 T get_mono_channel
0012a594 000000a8 t intensity_stereo.isra.0
0012a63c 0000011c t deinterleave_hadamard
0012a758 00000078 t special_hybrid_folding.isra.1
0012a7d0 00000104 t quant_band_n1.isra.3
0012a8d4 00000018 T celt_lcg_rand
0012a8ec 0000007c T bitexact_log2tan
0012a968 000008e0 t compute_theta
0012b248 000005f8 t quant_partition
0012b840 000001fc T denormalise_bands
0012ba40 00000358 T anti_collapse
0012bd98 00000080 T haar1
0012be18 000005b0 t quant_band
0012c3c8 000005dc t quant_band_stereo
0012c9a4 00000fd8 T quant_all_bands
0012d97c 0000012c T encode_pulses
0012daa8 000002d4 T decode_pulses
0012dd7c 000000a8 t ec_enc_carry_out.part.0
0012de24 000000cc T ec_encode
0012def0 0000008c T ec_enc_bit_logp
0012df7c 00000098 T ec_enc_bits
0012e014 00000080 T ec_enc_uint
0012e094 00000960 T opus_fft_impl
0012e9f4 00000174 T ec_laplace_decode
0012eb68 00000040 T isqrt32
0012eba8 00000040 T silk_init_decoder
0012ebe8 00000224 T silk_decode_frame
0012ee0c 0000024c T silk_decode_parameters
0012f058 0000041c T silk_decode_indices
0012f474 00000248 T silk_decode_pulses
0012f6bc 00000244 T silk_decoder_set_fs
0012f900 000000b4 T silk_gains_dequant
0012f9b4 00000150 T silk_NLSF_decode
0012fb04 00000030 T silk_PLC_Reset
0012fb34 00000e28 T silk_PLC
0013095c 000001e0 T silk_PLC_glue_frames
00130b3c 000003fc T silk_shell_decoder
00130f38 000000a0 T silk_NLSF_unpack
00130fd8 00000070 T silk_bwexpander
00131048 00000104 T silk_decode_pitch
0013114c 00000068 T silk_log2lin
001311b4 0000017c T silk_LPC_analysis_filter
00131330 00000628 T silk_LPC_inverse_pred_gain_c
00131958 00000360 T silk_NLSF2A
00131cb8 000002e4 T silk_NLSF_stabilize
00131f9c 00000070 T silk_resampler_private_AR2
0013200c 00000074 T silk_insertion_sort_increasing_all_values_int16
00132080 00000114 T silk_sum_sqr_shift
00132194 000001cc T silk_LPC_fit
00132360 00000064 T silk_CNG_Reset
001323c4 000009b0 T silk_CNG
00132d74 000000d4 T silk_decode_signs
00132e48 00000cb8 T silk_decode_core
00133b00 0000009c T silk_bwexpander_32
00133b9c 00000024 t with_errno
00133bc0 00000028 t xflow
00133be8 00000010 T __math_uflow
00133bf8 00000010 T __math_oflow
00133c08 00000014 T __math_check_uflow
00133c20 00000028 T __math_check_oflow
00133c48 00000058 T sqrt
00133ca0 000000a8 T cos
00133d48 00000008 T __ieee754_sqrt
00133d50 00000144 T floor
00133e98 00000214 T exp
001340b0 00000150 T __kernel_cos
00134200 00000310 T __ieee754_rem_pio2
00134510 000008b0 T __kernel_rem_pio2
00134dc0 00000140 T scalbn
00134f00 000000c0 T __kernel_sin
00134fc0 00000014 T fabs
00134fd4 00000008 T b2CircleShape::GetChildCount() const
00134fdc 00000064 T b2CircleShape::TestPoint(b2Transform const&, b2Vec2 const&) const
00135040 00000058 T b2CircleShape::ComputeAABB(b2AABB*, b2Transform const&, int) const
00135098 00000060 T b2CircleShape::ComputeMass(b2MassData*, float) const
001350f8 00000004 W b2CircleShape::~b2CircleShape()
001350f8 00000004 W b2CircleShape::~b2CircleShape()
001350fc 00000068 T b2CircleShape::Clone(b2BlockAllocator*) const
00135164 00000014 W b2CircleShape::~b2CircleShape()
00135178 00000178 T b2CircleShape::RayCast(b2RayCastOutput*, b2RayCastInput const&, b2Transform const&, int) const
001352f0 00000008 T b2PolygonShape::GetChildCount() const
001352f8 00000090 T b2PolygonShape::TestPoint(b2Transform const&, b2Vec2 const&) const
00135388 00000004 W b2PolygonShape::~b2PolygonShape()
00135388 00000004 W b2PolygonShape::~b2PolygonShape()
0013538c 000000d0 T b2PolygonShape::Clone(b2BlockAllocator*) const
0013545c 00000190 T b2PolygonShape::ComputeMass(b2MassData*, float) const
001355ec 000001bc T b2PolygonShape::RayCast(b2RayCastOutput*, b2RayCastInput const&, b2Transform const&, int) const
001357a8 00000014 W b2PolygonShape::~b2PolygonShape()
001357bc 000000e0 T b2PolygonShape::ComputeAABB(b2AABB*, b2Transform const&, int) const
0013589c 0000006c T b2PolygonShape::SetAsBox(float, float)
00135908 00000048 T b2BlockAllocator::b2BlockAllocator()
00135908 00000048 T b2BlockAllocator::b2BlockAllocator()
00135950 00000048 T b2BlockAllocator::~b2BlockAllocator()
00135950 00000048 T b2BlockAllocator::~b2BlockAllocator()
00135998 000001a0 T b2BlockAllocator::Allocate(int)
00135b38 00000088 T b2BlockAllocator::Free(void*, int)
00135bc0 00000078 t _GLOBAL__sub_I__ZN16b2BlockAllocatorC2Ev
00135c38 00000018 t _GLOBAL__sub_I_b2Vec2_zero
00135c50 00000004 T b2Alloc_Default(int)
00135c54 00000004 T b2Free_Default(void*)
00135c58 000002a8 T b2Body::b2Body(b2BodyDef const*, b2World*)
00135c58 000002a8 T b2Body::b2Body(b2BodyDef const*, b2World*)
00135f00 00000004 T b2Body::~b2Body()
00135f00 00000004 T b2Body::~b2Body()
00135f04 0000022c T b2Body::ResetMassData()
00136130 000000d8 T b2Body::CreateFixture(b2FixtureDef const*)
00136208 00000058 T b2Body::CreateFixture(b2Shape const*, float)
00136260 0000018c T b2Body::DestroyFixture(b2Fixture*)
001363ec 0000006c T b2Body::ShouldCollide(b2Body const*) const
00136458 000000ec T b2Body::SynchronizeFixtures()
00136544 00000160 T b2Body::SetType(b2BodyType)
001366a4 00000004 W b2ContactListener::~b2ContactListener()
001366a4 00000004 W b2ContactListener::~b2ContactListener()
001366a8 00000004 W b2ContactListener::BeginContact(b2Contact*)
001366ac 00000014 W b2ContactListener::~b2ContactListener()
001366c0 0000003c T b2ContactManager::b2ContactManager()
001366c0 0000003c T b2ContactManager::b2ContactManager()
001366fc 000000ec T b2ContactManager::Destroy(b2Contact*)
001367e8 000001d0 T b2ContactManager::Collide()
001369b8 00000184 T b2ContactManager::AddPair(void*, void*)
00136b3c 00000208 W void b2DynamicTree::Query<b2BroadPhase>(b2BroadPhase*, b2AABB const&) const
00136d44 000001ac W void b2BroadPhase::UpdatePairs<b2ContactManager>(b2ContactManager*)
00136ef0 00000010 T b2ContactManager::FindNewContacts()
00136f00 00000038 T b2Fixture::b2Fixture()
00136f00 00000038 T b2Fixture::b2Fixture()
00136f38 000000d0 T b2Fixture::Create(b2BlockAllocator*, b2Body*, b2FixtureDef const*)
00137008 00000138 T b2Fixture::Destroy(b2BlockAllocator*)
00137140 000000b0 T b2Fixture::CreateProxies(b2BroadPhase*, b2Transform const&)
001371f0 0000005c T b2Fixture::DestroyProxies(b2BroadPhase*)
0013724c 00000150 T b2Fixture::Synchronize(b2BroadPhase*, b2Transform const&, b2Transform const&)
0013739c 000000b0 T b2World::b2World(b2Vec2 const&)
0013739c 000000b0 T b2World::b2World(b2Vec2 const&)
0013744c 0000000c T b2World::SetContactListener(b2ContactListener*)
00137458 00000080 T b2World::CreateBody(b2BodyDef const*)
001374d8 0000018c T b2World::DestroyJoint(b2Joint*)
00137664 000001b4 T b2World::DestroyBody(b2Body*)
00137818 000004b0 T b2World::Solve(b2TimeStep const&)
00137cc8 00000c34 T b2World::SolveTOI(b2TimeStep const&)
001388fc 00000198 T b2World::Step(float, int, int)
00138a94 00000004 W b2ContactFilter::~b2ContactFilter()
00138a94 00000004 W b2ContactFilter::~b2ContactFilter()
00138a98 0000005c T b2ContactFilter::ShouldCollide(b2Fixture*, b2Fixture*)
00138af4 00000014 W b2ContactFilter::~b2ContactFilter()
00138b08 00000058 T b2BroadPhase::b2BroadPhase()
00138b08 00000058 T b2BroadPhase::b2BroadPhase()
00138b60 00000080 T b2BroadPhase::CreateProxy(b2AABB const&, void*)
00138be0 00000050 T b2BroadPhase::DestroyProxy(int)
00138c30 0000006c T b2BroadPhase::TouchProxy(int)
00138c9c 0000006c T b2BroadPhase::BufferMove(int)
00138d08 00000028 T b2BroadPhase::MoveProxy(int, b2AABB const&, b2Vec2 const&)
00138d30 000000f4 T b2BroadPhase::QueryCallback(int)
00138e24 00000024 t b2DistanceProxy::GetVertex(int) const [clone .part.0]
00138e48 0000010c T b2DistanceProxy::Set(b2Shape const*, int)
00138f54 000002fc W b2Simplex::ReadCache(b2SimplexCache const*, b2DistanceProxy const*, b2Transform const&, b2DistanceProxy const*, b2Transform const&)
00139250 000000b8 T b2Simplex::Solve2()
00139308 00000264 T b2Simplex::Solve3()
0013956c 00000738 T b2Distance(b2DistanceOutput*, b2SimplexCache*, b2DistanceInput const*)
00139ca4 000000a4 T b2DynamicTree::b2DynamicTree()
00139ca4 000000a4 T b2DynamicTree::b2DynamicTree()
00139d48 00000018 T b2DynamicTree::~b2DynamicTree()
00139d48 00000018 T b2DynamicTree::~b2DynamicTree()
00139d60 0000012c T b2DynamicTree::AllocateNode()
00139e8c 00000088 T b2DynamicTree::FreeNode(int)
00139f14 00000658 T b2DynamicTree::Balance(int)
0013a56c 000004b4 T b2DynamicTree::InsertLeaf(int)
0013aa20 00000084 T b2DynamicTree::CreateProxy(b2AABB const&, void*)
0013aaa4 00000150 T b2DynamicTree::RemoveLeaf(int)
0013abf4 000000e4 T b2DynamicTree::DestroyProxy(int)
0013acd8 000001ac T b2DynamicTree::MoveProxy(int, b2AABB const&, b2Vec2 const&)
0013ae84 00000024 t b2DistanceProxy::GetVertex(int) const [clone .part.0]
0013aea8 000004bc W b2SeparationFunction::FindMinSeparation(int*, int*, float) const
0013b364 00000304 W b2SeparationFunction::Evaluate(int, int, float) const
0013b668 00000af0 T b2TimeOfImpact(b2TOIOutput*, b2TOIInput const*)
0013c158 0000001c T b2StackAllocator::b2StackAllocator()
0013c158 0000001c T b2StackAllocator::b2StackAllocator()
0013c174 00000058 T b2StackAllocator::~b2StackAllocator()
0013c174 00000058 T b2StackAllocator::~b2StackAllocator()
0013c1cc 000000b0 T b2StackAllocator::Allocate(int)
0013c27c 000000b0 T b2StackAllocator::Free(void*)
0013c32c 00000004 T b2Timer::b2Timer()
0013c32c 00000004 T b2Timer::b2Timer()
0013c330 00000004 T b2Timer::Reset()
0013c334 0000000c T b2Timer::GetMilliseconds() const
0013c340 00000118 T b2Contact::InitializeRegisters()
0013c458 0000010c T b2Contact::Create(b2Fixture*, int, b2Fixture*, int, b2BlockAllocator*)
0013c564 00000120 T b2Contact::Destroy(b2Contact*, b2BlockAllocator*)
0013c684 000000d8 T b2Contact::b2Contact(b2Fixture*, int, b2Fixture*, int)
0013c684 000000d8 T b2Contact::b2Contact(b2Fixture*, int, b2Fixture*, int)
0013c75c 00000280 T b2Contact::Update(b2ContactListener*)
0013c9dc 00000004 W b2EdgeAndCircleContact::~b2EdgeAndCircleContact()
0013c9dc 00000004 W b2EdgeAndCircleContact::~b2EdgeAndCircleContact()
0013c9e0 00000014 W b2EdgeAndCircleContact::~b2EdgeAndCircleContact()
0013c9f4 00000034 T b2EdgeAndCircleContact::Evaluate(b2Manifold*, b2Transform const&, b2Transform const&)
0013ca28 00000040 T b2EdgeAndCircleContact::Destroy(b2Contact*, b2BlockAllocator*)
0013ca68 00000094 T b2EdgeAndCircleContact::b2EdgeAndCircleContact(b2Fixture*, b2Fixture*)
0013ca68 00000094 T b2EdgeAndCircleContact::b2EdgeAndCircleContact(b2Fixture*, b2Fixture*)
0013cafc 00000038 T b2EdgeAndCircleContact::Create(b2Fixture*, int, b2Fixture*, int, b2BlockAllocator*)
0013cb34 00000004 W b2EdgeAndPolygonContact::~b2EdgeAndPolygonContact()
0013cb34 00000004 W b2EdgeAndPolygonContact::~b2EdgeAndPolygonContact()
0013cb38 00000014 W b2EdgeAndPolygonContact::~b2EdgeAndPolygonContact()
0013cb4c 00000034 T b2EdgeAndPolygonContact::Evaluate(b2Manifold*, b2Transform const&, b2Transform const&)
0013cb80 00000040 T b2EdgeAndPolygonContact::Destroy(b2Contact*, b2BlockAllocator*)
0013cbc0 00000094 T b2EdgeAndPolygonContact::b2EdgeAndPolygonContact(b2Fixture*, b2Fixture*)
0013cbc0 00000094 T b2EdgeAndPolygonContact::b2EdgeAndPolygonContact(b2Fixture*, b2Fixture*)
0013cc54 00000038 T b2EdgeAndPolygonContact::Create(b2Fixture*, int, b2Fixture*, int, b2BlockAllocator*)
0013cc8c 000000a8 t b2Island::Report(b2ContactVelocityConstraint const*) [clone .part.0]
0013cd34 000000b0 T b2Island::b2Island(int, int, int, b2StackAllocator*, b2ContactListener*)
0013cd34 000000b0 T b2Island::b2Island(int, int, int, b2StackAllocator*, b2ContactListener*)
0013cde4 0000004c T b2Island::~b2Island()
0013cde4 0000004c T b2Island::~b2Island()
0013ce30 00000634 T b2Island::Solve(b2Profile*, b2TimeStep const&, b2Vec2 const&, bool)
0013d464 00000360 T b2Island::SolveTOI(b2TimeStep const&, int, int)
0013d7c4 00000140 T b2Joint::Destroy(b2Joint*, b2BlockAllocator*)
0013d904 00000004 W b2PolygonAndCircleContact::~b2PolygonAndCircleContact()
0013d904 00000004 W b2PolygonAndCircleContact::~b2PolygonAndCircleContact()
0013d908 00000014 W b2PolygonAndCircleContact::~b2PolygonAndCircleContact()
0013d91c 00000034 T b2PolygonAndCircleContact::Evaluate(b2Manifold*, b2Transform const&, b2Transform const&)
0013d950 00000040 T b2PolygonAndCircleContact::Destroy(b2Contact*, b2BlockAllocator*)
0013d990 00000094 T b2PolygonAndCircleContact::b2PolygonAndCircleContact(b2Fixture*, b2Fixture*)
0013d990 00000094 T b2PolygonAndCircleContact::b2PolygonAndCircleContact(b2Fixture*, b2Fixture*)
0013da24 00000038 T b2PolygonAndCircleContact::Create(b2Fixture*, int, b2Fixture*, int, b2BlockAllocator*)
0013da5c 00000004 W b2PolygonContact::~b2PolygonContact()
0013da5c 00000004 W b2PolygonContact::~b2PolygonContact()
0013da60 00000014 W b2PolygonContact::~b2PolygonContact()
0013da74 00000034 T b2PolygonContact::Evaluate(b2Manifold*, b2Transform const&, b2Transform const&)
0013daa8 00000040 T b2PolygonContact::Destroy(b2Contact*, b2BlockAllocator*)
0013dae8 00000094 T b2PolygonContact::b2PolygonContact(b2Fixture*, b2Fixture*)
0013dae8 00000094 T b2PolygonContact::b2PolygonContact(b2Fixture*, b2Fixture*)
0013db7c 00000038 T b2PolygonContact::Create(b2Fixture*, int, b2Fixture*, int, b2BlockAllocator*)
0013dbb4 000000dc T b2CollideCircles(b2Manifold*, b2CircleShape const*, b2Transform const&, b2CircleShape const*, b2Transform const&)
0013dc90 0000039c T b2CollidePolygonAndCircle(b2Manifold*, b2PolygonShape const*, b2Transform const&, b2CircleShape const*, b2Transform const&)
0013e02c 00000310 T b2CollideEdgeAndCircle(b2Manifold*, b2EdgeShape const*, b2Transform const&, b2CircleShape const*, b2Transform const&)
0013e33c 00000840 T b2CollideEdgeAndPolygon(b2Manifold*, b2EdgeShape const*, b2Transform const&, b2PolygonShape const*, b2Transform const&)
0013eb7c 00000130 t b2FindMaxSeparation(int*, b2PolygonShape const*, b2Transform const&, b2PolygonShape const*, b2Transform const&) [clone .constprop.0]
0013ecac 000004c8 T b2CollidePolygons(b2Manifold*, b2PolygonShape const*, b2Transform const&, b2PolygonShape const*, b2Transform const&)
0013f174 000003e8 T b2WorldManifold::Initialize(b2Manifold const*, b2Transform const&, float, b2Transform const&, float)
0013f55c 00000108 T b2ClipSegmentToLine(b2ClipVertex*, b2ClipVertex const*, b2Vec2 const&, float, int)
0013f664 000000b8 T b2TestOverlap(b2Shape const*, int, b2Shape const*, int, b2Transform const&, b2Transform const&)
0013f71c 00000004 W b2ChainAndCircleContact::~b2ChainAndCircleContact()
0013f71c 00000004 W b2ChainAndCircleContact::~b2ChainAndCircleContact()
0013f720 00000014 W b2ChainAndCircleContact::~b2ChainAndCircleContact()
0013f734 0000008c T b2ChainAndCircleContact::Evaluate(b2Manifold*, b2Transform const&, b2Transform const&)
0013f7c0 000000b8 T b2ChainAndCircleContact::Create(b2Fixture*, int, b2Fixture*, int, b2BlockAllocator*)
0013f878 00000040 T b2ChainAndCircleContact::Destroy(b2Contact*, b2BlockAllocator*)
0013f8b8 00000004 W b2ChainAndPolygonContact::~b2ChainAndPolygonContact()
0013f8b8 00000004 W b2ChainAndPolygonContact::~b2ChainAndPolygonContact()
0013f8bc 00000014 W b2ChainAndPolygonContact::~b2ChainAndPolygonContact()
0013f8d0 0000008c T b2ChainAndPolygonContact::Evaluate(b2Manifold*, b2Transform const&, b2Transform const&)
0013f95c 000000b8 T b2ChainAndPolygonContact::Create(b2Fixture*, int, b2Fixture*, int, b2BlockAllocator*)
0013fa14 00000040 T b2ChainAndPolygonContact::Destroy(b2Contact*, b2BlockAllocator*)
0013fa54 00000004 W b2CircleContact::~b2CircleContact()
0013fa54 00000004 W b2CircleContact::~b2CircleContact()
0013fa58 00000014 W b2CircleContact::~b2CircleContact()
0013fa6c 00000034 T b2CircleContact::Evaluate(b2Manifold*, b2Transform const&, b2Transform const&)
0013faa0 00000040 T b2CircleContact::Destroy(b2Contact*, b2BlockAllocator*)
0013fae0 00000094 T b2CircleContact::b2CircleContact(b2Fixture*, b2Fixture*)
0013fae0 00000094 T b2CircleContact::b2CircleContact(b2Fixture*, b2Fixture*)
0013fb74 00000038 T b2CircleContact::Create(b2Fixture*, int, b2Fixture*, int, b2BlockAllocator*)
0013fbac 000002b0 T b2ContactSolver::b2ContactSolver(b2ContactSolverDef*)
0013fbac 000002b0 T b2ContactSolver::b2ContactSolver(b2ContactSolverDef*)
0013fe5c 00000024 T b2ContactSolver::~b2ContactSolver()
0013fe5c 00000024 T b2ContactSolver::~b2ContactSolver()
0013fe80 00000444 T b2ContactSolver::InitializeVelocityConstraints()
001402c4 00000114 T b2ContactSolver::WarmStart()
001403d8 00000570 T b2ContactSolver::SolveVelocityConstraints()
00140948 00000068 T b2ContactSolver::StoreImpulses()
001409b0 00000304 W b2PositionSolverManifold::Initialize(b2ContactPositionConstraint*, b2Transform const&, b2Transform const&, int)
00140cb4 000002a4 T b2ContactSolver::SolvePositionConstraints()
00140f58 000002d8 T b2ContactSolver::SolveTOIPositionConstraints(int, int)
00141230 000000b8 T b2ChainShape::GetChildEdge(b2EdgeShape*, int) const
001412e8 00000008 T b2EdgeShape::GetChildCount() const
001412f0 00000008 T b2EdgeShape::TestPoint(b2Transform const&, b2Vec2 const&) const
001412f8 00000040 T b2EdgeShape::ComputeMass(b2MassData*, float) const
00141338 00000004 W b2EdgeShape::~b2EdgeShape()
00141338 00000004 W b2EdgeShape::~b2EdgeShape()
0014133c 000000b8 T b2EdgeShape::Clone(b2BlockAllocator*) const
001413f4 00000014 W b2EdgeShape::~b2EdgeShape()
00141408 000001cc T b2EdgeShape::RayCast(b2RayCastOutput*, b2RayCastInput const&, b2Transform const&, int) const
001415d4 000000b0 T b2EdgeShape::ComputeAABB(b2AABB*, b2Transform const&, int) const
00141684 0000005c T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const
001416e0 00000014 T __cxxabiv1::__class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
001416f4 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
001416f4 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
00141714 0000002c T __cxxabiv1::__class_type_info::~__class_type_info()
00141740 00000070 T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
001417b0 00000090 T __cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const
00141840 000000f8 T __cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
00141938 00000004 T operator delete(void*)
0014193c 00000004 T operator delete(void*, unsigned int)
00141940 T __cxa_end_cleanup
00141950 00000138 T __cxa_type_match
00141a88 000000b4 T __cxa_begin_cleanup
00141b3c 000000b4 T __gnu_end_cleanup
00141bf0 00000004 T std::exception::~exception()
00141bf0 00000004 T std::exception::~exception()
00141bf4 00000004 T std::bad_exception::~bad_exception()
00141bf4 00000004 T std::bad_exception::~bad_exception()
00141bf8 0000000c T transaction clone for std::exception::what() const
00141bf8 0000000c T std::exception::what() const
00141c04 0000000c T transaction clone for std::bad_exception::what() const
00141c04 0000000c T std::bad_exception::what() const
00141c10 00000020 T std::bad_exception::~bad_exception()
00141c30 00000038 t eh_globals_dtor(void*)
00141c68 00000038 T __cxa_get_globals_fast
00141ca0 00000090 T __cxa_get_globals
00141d30 00000040 t _GLOBAL__sub_I__ZN17__eh_globals_init7_S_initE
00141d70 00000034 t _GLOBAL__sub_D__ZN17__eh_globals_init7_S_initE
00141da4 00000150 t read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)
00141ef4 0000005c t base_of_encoded_value(unsigned char, _Unwind_Context*)
00141f50 000000f0 t parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)
00142040 000006c8 T __gxx_personality_v0
00142708 00000014 T __cxxabiv1::__terminate(void (*)())
0014271c 00000018 T std::terminate()
00142734 0000000c T __cxxabiv1::__unexpected(void (*)())
00142740 00000018 T std::unexpected()
00142758 00000014 T std::get_terminate()
0014276c 00000014 T std::get_unexpected()
00142780 0000000c W __gnu_cxx::__concurrence_lock_error::what() const
0014278c 0000000c W __gnu_cxx::__concurrence_unlock_error::what() const
00142798 0000000c W __gnu_cxx::__concurrence_broadcast_error::what() const
001427a4 0000000c W __gnu_cxx::__concurrence_wait_error::what() const
001427b0 00000038 t (anonymous namespace)::init()
001427e8 00000024 t (anonymous namespace)::init_static_cond()
0014280c 00000020 W __gnu_cxx::__concurrence_lock_error::~__concurrence_lock_error()
0014280c 00000020 W __gnu_cxx::__concurrence_lock_error::~__concurrence_lock_error()
0014282c 0000002c W __gnu_cxx::__concurrence_lock_error::~__concurrence_lock_error()
00142858 00000020 W __gnu_cxx::__concurrence_wait_error::~__concurrence_wait_error()
00142858 00000020 W __gnu_cxx::__concurrence_wait_error::~__concurrence_wait_error()
00142878 0000002c W __gnu_cxx::__concurrence_wait_error::~__concurrence_wait_error()
001428a4 00000020 W __gnu_cxx::__concurrence_unlock_error::~__concurrence_unlock_error()
001428a4 00000020 W __gnu_cxx::__concurrence_unlock_error::~__concurrence_unlock_error()
001428c4 0000002c W __gnu_cxx::__concurrence_unlock_error::~__concurrence_unlock_error()
001428f0 00000020 W __gnu_cxx::__concurrence_broadcast_error::~__concurrence_broadcast_error()
001428f0 00000020 W __gnu_cxx::__concurrence_broadcast_error::~__concurrence_broadcast_error()
00142910 0000002c W __gnu_cxx::__concurrence_broadcast_error::~__concurrence_broadcast_error()
0014293c 0000002c W __gnu_cxx::__throw_concurrence_lock_error()
00142968 0000002c W __gnu_cxx::__throw_concurrence_unlock_error()
00142994 0000002c W __gnu_cxx::__throw_concurrence_broadcast_error()
001429c0 000001b0 T __cxa_guard_acquire
00142b70 000000f0 T __cxa_guard_release
00142c60 00000020 T __gnu_cxx::recursive_init_error::~recursive_init_error()
00142c60 00000020 T __gnu_cxx::recursive_init_error::~recursive_init_error()
00142c80 0000002c T __gnu_cxx::recursive_init_error::~recursive_init_error()
00142cac 00000010 T __gnu_cxx::recursive_init_error::recursive_init_error()
00142cac 00000010 T __gnu_cxx::recursive_init_error::recursive_init_error()
00142cbc 0000005c T operator new(unsigned int)
00142d18 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
00142d18 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
00142d38 0000002c T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
00142d64 00000140 T __cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
00142ea4 00000088 T __cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
00142f2c 00000044 T __cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
00142f70 00000004 T std::type_info::~type_info()
00142f70 00000004 T std::type_info::~type_info()
00142f74 00000008 T std::type_info::__is_pointer_p() const
00142f74 00000008 T std::type_info::__is_function_p() const
00142f7c 00000040 T std::__throw_logic_error(char const*)
00142fbc 00000040 T std::__throw_length_error(char const*)
00142ffc 000001c0 W std::system_error::system_error(std::error_code, char const*)
00142ffc 000001c0 W std::system_error::system_error(std::error_code, char const*)
001431bc 00000004 T std::random_device::_M_fini()
001431c0 00000034 W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::seed(unsigned int)
001431f4 00000144 T std::random_device::_M_init_pretr1(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00143338 00000004 T std::random_device::_M_init(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0014333c 00000058 W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::operator()()
00143394 0000000c T std::random_device::_M_getval()
001433a0 00000054 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int)
001433f4 00000014 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose()
00143408 000000c8 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
001434d0 00000104 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned int, unsigned int, char const*, unsigned int)
001435d4 00000098 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reserve(unsigned int)
0014366c 00000140 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace_cold(char*, unsigned int, char const*, unsigned int, unsigned int)
001437ac 00000130 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned int, unsigned int, char const*, unsigned int)
001438dc 0000000c t (anonymous namespace)::generic_error_category::name() const
001438e8 00000020 t (anonymous namespace)::generic_error_category::equivalent(int, std::error_condition const&) const
00143908 00000004 t (anonymous namespace)::generic_error_category::~generic_error_category()
00143908 00000004 t (anonymous namespace)::generic_error_category::~generic_error_category()
0014390c 0000000c T std::_V2::error_category::default_error_condition(int) const
00143918 00000020 T std::_V2::error_category::equivalent(std::error_code const&, int) const
00143938 000000f4 t (anonymous namespace)::system_error_category::message[abi:cxx11](int) const
00143938 000000f4 t (anonymous namespace)::generic_error_category::message[abi:cxx11](int) const
00143a2c 0000001c t (anonymous namespace)::generic_error_category::~generic_error_category()
00143a48 00000020 T std::system_error::~system_error()
00143a48 00000020 T std::system_error::~system_error()
00143a68 00000028 T std::system_error::~system_error()
00143a90 00000054 T std::_V2::error_category::_M_message[abi:cxx11](int) const
00143ae4 0000000c T std::_V2::generic_category()
00143af0 0000000c T std::bad_alloc::what() const
00143afc 00000020 T std::bad_alloc::~bad_alloc()
00143afc 00000020 T std::bad_alloc::~bad_alloc()
00143b1c 0000002c T std::bad_alloc::~bad_alloc()
00143b48 0000012c t (anonymous namespace)::pool::free(void*) [clone .constprop.0]
00143c74 000000f0 t (anonymous namespace)::pool::allocate(unsigned int) [clone .constprop.0]
00143d64 00000044 T __cxa_allocate_exception
00143da8 00000028 T __cxa_free_exception
00143dd0 000001a4 t _GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv
00143f74 00000070 t __cxxabiv1::__is_gxx_exception_class(char*)
00143fe4 0000002c T __cxa_call_terminate
00144010 00000148 T __cxa_call_unexpected
00144158 000000e0 T __cxa_begin_catch
00144238 000000e0 T __cxa_end_catch
00144318 00000070 t __gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Control_Block*)
00144388 00000054 T __cxa_init_primary_exception
001443dc 00000054 T __cxa_throw
00144430 000000b0 T __cxa_rethrow
001444e0 00000014 T std::get_new_handler()
001444f4 00000008 T std::logic_error::what() const
001444f4 00000008 T std::runtime_error::what() const
001444fc 00000098 T std::logic_error::~logic_error()
001444fc 00000098 T std::logic_error::~logic_error()
00144594 00000098 T std::runtime_error::~runtime_error()
00144594 00000098 T std::runtime_error::~runtime_error()
0014462c 000000a0 T std::runtime_error::~runtime_error()
001446cc 00000098 T std::length_error::~length_error()
001446cc 00000098 T std::length_error::~length_error()
00144764 000000a0 T std::logic_error::~logic_error()
00144804 000000a0 T std::length_error::~length_error()
001448a4 000000d8 T std::logic_error::logic_error(char const*)
001448a4 000000d8 T std::logic_error::logic_error(char const*)
0014497c 00000020 T std::length_error::length_error(char const*)
0014497c 00000020 T std::length_error::length_error(char const*)
0014499c 000000c8 T std::__cow_string::__cow_string(char const*, unsigned int)
0014499c 000000c8 T std::__cow_string::__cow_string(char const*, unsigned int)
00144a64 00000088 W std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator<char> const&)
00144aec 00000004 W std::string::_Rep::_M_destroy(std::allocator<char> const&)
00144af0 00000030 T std::runtime_error::runtime_error(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00144af0 00000030 T std::runtime_error::runtime_error(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00144b20 000000c0 T floorf
00144be0 00000130 T __udivmoddi4
00144d10 00000018 t selfrel_offset31
00144d28 00000090 t search_EIT_table
00144db8 00000040 t __gnu_unwind_get_pr_addr
00144df8 00000110 t get_eit_entry
00144f08 00000088 t restore_non_core_regs
00144f90 00000014 t _Unwind_decode_typeinfo_ptr.constprop.0
00144fa4 00000004 t _Unwind_DebugHook
00144fa8 00000064 t unwind_phase2
0014500c 0000013c t unwind_phase2_forced
00145148 000000a4 T __gnu_Unwind_RaiseException
001451ec 00000020 T __gnu_Unwind_ForcedUnwind
0014520c 00000074 T __gnu_Unwind_Resume
00145280 00000020 T __gnu_Unwind_Resume_or_Rethrow
001452a0 00000004 T _Unwind_Complete
001452a4 00000018 T _Unwind_DeleteException
001452bc 00000064 T _Unwind_VRS_Get
00145320 0000002c t _Unwind_GetGR
0014534c 00000064 T _Unwind_VRS_Set
001453b0 0000002c t _Unwind_SetGR
001453dc 000000c0 T __gnu_Unwind_Backtrace
0014549c 0000040c t __gnu_unwind_pr_common
001458a8 00000008 T __aeabi_unwind_cpp_pr0
001458b0 00000008 W __aeabi_unwind_cpp_pr1
001458b8 00000008 W __aeabi_unwind_cpp_pr2
001458c0 00000458 T _Unwind_VRS_Pop
00145d18 00000064 t next_unwind_byte
00145d7c 0000002c t _Unwind_GetGR.constprop.0
00145da8 00000004 t unwind_UCB_from_context
00145dac 00000464 T __gnu_unwind_execute
00146210 00000048 T __gnu_unwind_frame
00146258 00000010 T _Unwind_GetRegionStart
00146268 0000001c T _Unwind_GetLanguageSpecificData
00146284 00000008 T _Unwind_GetDataRelBase
0014628c 00000008 T _Unwind_GetTextRelBase
00146294 000000d8 T strncmp
0014636c 00000140 T strchr
001464ac 00000044 T rand
001464f0 00000024 T getenv
00146514 0000016c T memmove
00146680 0000005c T __assert_func
001466dc 00000144 T _fclose_r
00146820 00000020 T fclose
00146840 0000003c T fprintf
0014687c 0000008c T strlen
00146908 0000003c T fiprintf
00146944 000000d8 T memcmp
00146a1c 0000001c t stdio_exit_handler
00146a38 0000005c t cleanup_stdio
00146a94 00000154 t global_stdio_init.part.0
00146be8 00000138 T __sfp
00146d20 0000005c T __sinit
00146d7c 0000000c T __sfp_lock_acquire
00146d88 0000000c T __sfp_lock_release
00146d94 000001ec t _strtoul_l.isra.0
00146f80 0000003c T strtoul
00146fbc 00000084 T __libc_init_array
00147040 00000588 T _fseeko_r
001475c8 00000030 T fseeko
001475f8 0000009c T strncat
00147694 00000070 T _fwalk_sglue
00147704 00000078 T bsearch
0014777c 0000000c T __errno
00147788 00000028 T calloc
001477b0 000008e8 T qsort
00148098 00000014 T abort
001480ac 000000e0 T _puts_r
0014818c 00000020 T puts
001481ac 000005e0 t get_arg
00148790 00003554 T _vfprintf_r
0014bce4 000000b4 t __sbprintf
0014bd98 000000d8 T _calloc_r
0014be70 00000028 T realloc
0014be98 0000001c T _fseek_r
0014beb4 00000028 T memalign
0014bedc 0000082c T _malloc_r
0014c708 000000e8 T memchr
0014c7f0 000001c0 t quorem
0014c9b0 000013f0 T _dtoa_r
0014dda0 000000a0 T _wcrtomb_r
0014de40 00000114 T _malloc_trim_r
0014df54 00000314 T _free_r
0014e268 00000034 T printf
0014e29c 000000b8 T __sflags
0014e354 0000003c T __memcpy_chk
0014e390 0000003c T strnlen
0014e3cc 00000040 T malloc
0014e40c 00000020 T free
0014e42c 000000a0 T __xpg_strerror_r
0014e4cc 0000022c T __sflush_r
0014e6f8 000000c4 T _fflush_r
0014e7bc 00000044 T fflush
0014e800 00000048 T time
0014e848 00000038 t lflush
0014e880 000001a8 T __srefill_r
0014ea28 00000164 T __smakebuf_r
0014eb8c 00000090 T __swhatbuf_r
0014ec1c 000000dc T _findenv_r
0014ecf8 000000e4 T memset
0014eddc 000004f0 T _realloc_r
0014f2cc 00000334 T _fread_r
0014f600 00000038 T fread
0014f638 0000000c T __malloc_lock
0014f644 0000000c T __malloc_unlock
0014f650 000001c4 T _ftello_r
0014f814 00000020 T ftello
0014f834 00000030 T exit
0014f864 00000294 T setvbuf
0014faf8 00000134 T _fopen_r
0014fc2c 00000028 T fopen
0014fc54 00000014 T atexit
0014fc68 00000020 T close
0014fc88 000000d4 T strncpy
0014fd5c 0000012c T memcpy
0014fe88 00000028 T _wcsrtombs_r
0014feb0 00000140 T __swsetup_r
0014fff0 00000088 T frexp
00150078 000004a4 T __sfvwrite_r
0015051c 00000044 T __sread
00150560 00000068 T __swrite
001505c8 00000040 T __sseek
00150608 00000008 T __sclose
00150610 0000009c T _raise_r
001506ac 00000020 T raise
001506cc 0000000c T __env_lock
001506d8 0000000c T __env_unlock
001506e4 00000410 T _strerror_r
00150af4 00000088 T _Balloc
00150b7c 0000001c T _Bfree
00150b98 000000f4 T __multadd
00150c8c 00000080 T __hi0bits
00150d0c 000000f0 T __lo0bits
00150dfc 000000a4 T __i2b
00150ea0 00000230 T __multiply
001510d0 00000130 T __pow5mult
00151200 00000138 T __lshift
00151338 00000058 T __mcmp
00151390 00000218 T __mdiff
001515a8 00000120 T __d2b
001516c8 00000008 T _user_strerror
001516d0 00000024 T __locale_mb_cur_max
001516f4 00000058 T __chk_fail
0015174c 000005e0 t get_arg
00151d2c 000022f8 T _vfiprintf_r
00154024 000000b4 t __sbprintf
001540d8 0000016c T _memalign_r
00154244 0000015c T _wcsnrtombs_l
001543a0 00000064 T _wcsnrtombs_r
00154404 00000340 T __utf8_mbtowc
00154744 00000030 T __sprint_r
00154774 00000024 T _localeconv_r
00154798 000000f0 T strcpy
00154888 000000bc T __register_exitproc
00154944 000000f8 T __utf8_wctomb
00154a3c 00000030 T write
00154a6c 00000134 T __call_exitprocs
00154ba0 00000020 T _exit
00154bc0 00000140 T chdir
00154d00 000001c8 T _concatenate_path
00154ec8 0000009c T _fstat_r
00154f64 00000014 T _getpid_r
00154f78 0000002c T __getreent
00154fa4 00000030 T _gettimeofday_r
00154fd4 000000a0 T __release_handle
00155074 000000b0 T __alloc_handle
00155124 00000058 T __get_handle
0015517c 0000016c T dup2
001552e8 00000110 T _close_r
001553f8 00000008 t null_write
00155400 00000018 T setDefaultDevice
00155418 000000c4 T FindDevice
001554dc 00000028 T RemoveDevice
00155504 00000098 T AddDevice
0015559c 00000020 T GetDeviceOpTab
001555bc 00000008 T _isatty_r
001555c4 00000014 T _kill_r
001555d8 00000094 T _lseek_r
0015566c 000000c0 T _open_r
0015572c 00000094 T _read_r
001557c0 00000078 W _sbrk_r
00155838 0000001c T __libc_lock_acquire
00155854 0000001c T __libc_lock_release
00155870 0000001c T __libc_lock_acquire_recursive
0015588c 0000001c T __libc_lock_release_recursive
001558a8 00000094 T _write_r
0015593c 00000048 T strrchr
00155984 T _fini
00156008 00000018 r CSWTCH.31
00156020 00000024 r getRandomBartType()::weights
00156044 00000024 r getRandomBartType()::types
00156068 00000020 R vtable for CollisionListener
001562b4 r .LC7
001562f8 r .LC6
00156300 r .LC7
00157124 r .LC2
0015ab8c 00000008 r s_defaultTint.0
0015ab94 R render2d_shbin
0015ad20 R render2d_shbin_end
0015ad20 R render2d_shbin_size
0015ad24 00000004 r depthFmtSizes
0015ad28 00000005 r colorFmtSizes
0015ad30 00000010 r CSWTCH.11
0015ad40 00000038 r CSWTCH.19
0015ad78 00000080 r romFS_devoptab
0015ae04 00000011 r dsp_filename.0
0015ae34 00000008 r morton_y.2
0015ae3c 00000008 r morton_x.3
0015ae44 00000008 r s_sleepWakeEvents.4
0015ae4c 0000000c r serviceNameTable.5
0015ae7c 0000004d r _net_error_code_map
0015aecc 00000030 r error_table
0015aefc 00000080 r archive_devoptab
0015af7c 00000010 r OP_FCOEF_A
0015af8c 00000010 r OP_FCOEF_B
0015af9c 00000180 r OP_STEREO_DOWNMIX
0015b11c 00000010 r OP_FILE_CALLBACKS
0015b12c 00000060 R __inv_pio4
0015b190 000000e0 R __sincosf_table
0015b270 00000008 r TWO23
0015b278 00002000 r crc_lookup
0015d278 00000014 r CSWTCH.81
0015d28c 00000024 r gains.8759
0015d2b0 00000020 R tf_select_table
0015d2d0 00000004 r spread_icdf
0015d2d4 00000003 r tapset_icdf
0015d2d8 0000000b r trim_icdf
0015d2e4 00000020 r correction.6326
0015d304 000000e7 r band_allocation
0015d3ec 00000188 r cache_bits50
0015d574 000000a8 r cache_caps50
0015d61c 000000d2 r cache_index50
0015d6f0 0000002c r eband5ms
0015d71c 000000f0 r fft_bitrev120
0015d80c 000001e0 r fft_bitrev240
0015d9ec 000003c0 r fft_bitrev480
0015ddac 00000078 r fft_bitrev60
0015de24 00000038 r fft_state48000_960_0
0015de5c 00000038 r fft_state48000_960_1
0015de94 00000038 r fft_state48000_960_2
0015decc 00000038 r fft_state48000_960_3
0015df04 00000f00 r fft_twiddles48000_960
0015ee04 0000002a r logN400
0015ee30 00001c20 r mdct_twiddles960
00160a50 0000006c r mode48000_960_120
00160abc 000001e0 r window120
00160c9c 00000010 r beta_coef
00160cac 00000064 R eMeans
00160d10 00000150 r e_prob_model
00160e60 00000010 r pred_coef
00160e70 00000003 r small_energy_icdf
00160e74 00000018 r LOG2_FRAC_TABLE
00160e8c 0000000c r SPREAD_FACTOR.8617
00160e98 00000003 r silk_LBRR_flags_2_iCDF
00160e9c 00000007 r silk_LBRR_flags_3_iCDF
00160ea4 00000008 R silk_LBRR_flags_iCDF_ptr
00160eac 00000006 R silk_LTPScales_table_Q14
00160eb4 00000003 R silk_LTPscale_iCDF
00160eb8 00000007 R silk_NLSF_EXT_iCDF
00160ec0 00000005 R silk_NLSF_interpolation_factor_iCDF
00160ec8 00000008 R silk_Quantization_Offsets_Q10
00160ed0 00000002 R silk_lsb_iCDF
00160ed4 00000002 R silk_stereo_only_code_mid_iCDF
00160ed8 00000019 R silk_stereo_pred_joint_iCDF
00160ef4 00000020 R silk_stereo_pred_quant_Q13
00160f14 00000004 R silk_type_offset_VAD_iCDF
00160f18 00000002 R silk_type_offset_no_VAD_iCDF
00160f1c 00000003 R silk_uniform3_iCDF
00160f20 00000004 R silk_uniform4_iCDF
00160f24 00000005 R silk_uniform5_iCDF
00160f2c 00000006 R silk_uniform6_iCDF
00160f34 00000008 R silk_uniform8_iCDF
00160f3c 0000000f r delay_matrix_dec
00160f4c 0000000f r delay_matrix_enc
00160f5c 0000001c R silk_Resampler_1_2_COEFS
00160f78 00000028 R silk_Resampler_1_3_COEFS
00160fa0 00000028 R silk_Resampler_1_4_COEFS
00160fc8 00000028 R silk_Resampler_1_6_COEFS
00160ff0 00000028 R silk_Resampler_2_3_COEFS
00161018 0000003a R silk_Resampler_3_4_COEFS
00161054 00000060 R silk_resampler_frac_FIR_12
001610b4 00000010 r bit_deinterleave_table.9138
001610c4 00000010 r bit_interleave_table.9128
001610d4 00000010 r exp2_table8.8969
001610e4 00000078 r ordery_table
0016115c 000013e0 r CELT_PVQ_U_DATA
0016253c 0000003c r CELT_PVQ_U_ROW
00162578 00000004 r HARM_ATT_Q15
0016257c 00000004 r PLC_RAND_ATTENUATE_UV_Q15
00162580 00000004 r PLC_RAND_ATTENUATE_V_Q15
00162584 00000029 R silk_delta_gain_iCDF
001625b0 00000018 R silk_gain_iCDF
001625c8 00000008 r silk_LTP_gain_iCDF_0
001625d0 00000010 r silk_LTP_gain_iCDF_1
001625e0 00000020 r silk_LTP_gain_iCDF_2
00162600 0000000c R silk_LTP_gain_iCDF_ptrs
0016260c 00000028 r silk_LTP_gain_vq_0
00162634 00000050 r silk_LTP_gain_vq_1
00162684 000000a0 r silk_LTP_gain_vq_2
00162724 00000003 R silk_LTP_per_index_iCDF
00162728 0000000c R silk_LTP_vq_ptrs_Q7
00162734 00000140 r silk_NLSF_CB1_NB_MB_Q8
00162874 00000280 r silk_NLSF_CB1_Wght_Q9
00162af4 00000040 r silk_NLSF_CB1_iCDF_NB_MB
00162b34 00000048 r silk_NLSF_CB2_BITS_NB_MB_Q5
00162b7c 000000a0 r silk_NLSF_CB2_SELECT_NB_MB
00162c1c 00000048 r silk_NLSF_CB2_iCDF_NB_MB
00162c64 00000028 R silk_NLSF_CB_NB_MB
00162c8c 00000016 r silk_NLSF_DELTA_MIN_NB_MB_Q15
00162ca4 00000012 r silk_NLSF_PRED_NB_MB_Q8
00162cb8 00000200 r silk_NLSF_CB1_WB_Q8
00162eb8 00000400 r silk_NLSF_CB1_WB_Wght_Q9
001632b8 00000040 r silk_NLSF_CB1_iCDF_WB
001632f8 00000048 r silk_NLSF_CB2_BITS_WB_Q5
00163340 00000100 r silk_NLSF_CB2_SELECT_WB
00163440 00000048 r silk_NLSF_CB2_iCDF_WB
00163488 00000028 R silk_NLSF_CB_WB
001634b0 00000022 r silk_NLSF_DELTA_MIN_WB_Q15
001634d4 0000001e r silk_NLSF_PRED_WB_Q8
001634f4 00000003 R silk_pitch_contour_10_ms_NB_iCDF
001634f8 0000000c R silk_pitch_contour_10_ms_iCDF
00163504 0000000b R silk_pitch_contour_NB_iCDF
00163510 00000022 R silk_pitch_contour_iCDF
00163534 00000015 R silk_pitch_delta_iCDF
0016354c 00000020 R silk_pitch_lag_iCDF
0016356c 000000b4 R silk_pulses_per_block_iCDF
00163620 00000012 R silk_rate_levels_iCDF
00163634 00000098 R silk_shell_code_table0
001636cc 00000098 R silk_shell_code_table1
00163764 00000098 R silk_shell_code_table2
001637fc 00000098 R silk_shell_code_table3
00163894 00000011 R silk_shell_code_table_offsets
001638a8 0000002a R silk_sign_iCDF
001638d4 0000000a r ordering10.8179
001638e0 00000010 r ordering16.8178
001638f0 0000002c R silk_CB_lags_stage2
0016391c 00000006 R silk_CB_lags_stage2_10_ms
00163924 00000088 R silk_CB_lags_stage3
001639ac 00000018 R silk_CB_lags_stage3_10_ms
001639c4 00000102 R silk_LSFCosTab_FIX_Q12
00163ac8 00000080 r npio2_hw
00163b48 00000108 r two_over_pi
00163c50 00000040 r PIo2
00163c90 00000010 r init_jk
00163ca0 00000870 R __exp_data
00164510 00000009 V typeinfo name for b2Shape
0016451c 00000008 V typeinfo for b2Shape
00164524 0000000c R typeinfo for b2CircleShape
00164530 00000010 R typeinfo name for b2CircleShape
00164540 00000028 R vtable for b2CircleShape
00164568 0000000c R typeinfo for b2PolygonShape
00164574 00000011 R typeinfo name for b2PolygonShape
00164588 00000028 R vtable for b2PolygonShape
001645b0 00000038 r b2_blockSizes
001645e8 00000014 V typeinfo name for b2ContactListener
001645fc 00000008 V typeinfo for b2ContactListener
00164604 00000020 V vtable for b2ContactListener
00164624 00000008 R typeinfo for b2ContactFilter
0016462c 00000012 R typeinfo name for b2ContactFilter
00164640 00000014 R vtable for b2ContactFilter
00164654 0000000b V typeinfo name for b2Contact
00164660 00000008 V typeinfo for b2Contact
00164668 00000014 V vtable for b2Contact
0016467c 0000000c R typeinfo for b2EdgeAndCircleContact
00164688 00000019 R typeinfo name for b2EdgeAndCircleContact
001646a4 00000014 R vtable for b2EdgeAndCircleContact
001646b8 0000000c R typeinfo for b2EdgeAndPolygonContact
001646c4 0000001a R typeinfo name for b2EdgeAndPolygonContact
001646e0 00000014 R vtable for b2EdgeAndPolygonContact
001646f4 0000000c R typeinfo for b2PolygonAndCircleContact
00164700 0000001c R typeinfo name for b2PolygonAndCircleContact
0016471c 00000014 R vtable for b2PolygonAndCircleContact
00164730 0000000c R typeinfo for b2PolygonContact
0016473c 00000013 R typeinfo name for b2PolygonContact
00164750 00000014 R vtable for b2PolygonContact
00164764 0000000c R typeinfo for b2ChainAndCircleContact
00164770 0000001a R typeinfo name for b2ChainAndCircleContact
0016478c 00000014 R vtable for b2ChainAndCircleContact
001647a0 0000000c R typeinfo for b2ChainAndPolygonContact
001647ac 0000001b R typeinfo name for b2ChainAndPolygonContact
001647c8 00000014 R vtable for b2ChainAndPolygonContact
001647dc 0000000c R typeinfo for b2CircleContact
001647e8 00000012 R typeinfo name for b2CircleContact
001647fc 00000014 R vtable for b2CircleContact
00164810 0000000c R typeinfo for b2EdgeShape
0016481c 0000000e R typeinfo name for b2EdgeShape
0016482c 00000028 R vtable for b2EdgeShape
00164854 00000022 R typeinfo name for __cxxabiv1::__class_type_info
00164878 0000000c R typeinfo for __cxxabiv1::__class_type_info
00164884 0000002c R vtable for __cxxabiv1::__class_type_info
001648b0 0000000d R typeinfo name for std::exception
001648c0 00000008 R typeinfo for std::exception
001648c8 00000012 R typeinfo name for std::bad_exception
001648dc 0000000c R typeinfo for std::bad_exception
001648e8 00000020 R typeinfo name for __cxxabiv1::__forced_unwind
00164908 00000008 R typeinfo for __cxxabiv1::__forced_unwind
00164910 00000024 R typeinfo name for __cxxabiv1::__foreign_exception
00164934 00000008 R typeinfo for __cxxabiv1::__foreign_exception
0016493c 00000014 R vtable for std::bad_exception
00164964 00000027 V typeinfo name for __gnu_cxx::__concurrence_lock_error
0016498c 0000000c V typeinfo for __gnu_cxx::__concurrence_lock_error
00164998 00000029 V typeinfo name for __gnu_cxx::__concurrence_unlock_error
001649c4 0000000c V typeinfo for __gnu_cxx::__concurrence_unlock_error
001649d0 0000002c V typeinfo name for __gnu_cxx::__concurrence_broadcast_error
001649fc 0000000c V typeinfo for __gnu_cxx::__concurrence_broadcast_error
00164a08 00000027 V typeinfo name for __gnu_cxx::__concurrence_wait_error
00164a30 0000000c V typeinfo for __gnu_cxx::__concurrence_wait_error
00164a3c 00000014 V vtable for __gnu_cxx::__concurrence_lock_error
00164a50 00000014 V vtable for __gnu_cxx::__concurrence_unlock_error
00164a64 00000014 V vtable for __gnu_cxx::__concurrence_broadcast_error
00164a78 00000014 V vtable for __gnu_cxx::__concurrence_wait_error
00164a8c 00000023 R typeinfo name for __gnu_cxx::recursive_init_error
00164ab0 0000000c R typeinfo for __gnu_cxx::recursive_init_error
00164abc 00000014 R vtable for __gnu_cxx::recursive_init_error
00164ad0 00000025 R typeinfo name for __cxxabiv1::__si_class_type_info
00164af8 0000000c R typeinfo for __cxxabiv1::__si_class_type_info
00164b04 0000002c R vtable for __cxxabiv1::__si_class_type_info
00164b30 0000000d R typeinfo name for std::type_info
00164b40 00000008 R typeinfo for std::type_info
00164b48 00000019 R typeinfo name for std::_V2::error_category
00164b64 00000008 R typeinfo for std::_V2::error_category
00164b6c 00000011 R typeinfo name for std::system_error
00164b80 0000000c R typeinfo for std::system_error
00164b8c 0000000c r typeinfo for (anonymous namespace)::generic_error_category
00164b98 0000002a r typeinfo name for (anonymous namespace)::generic_error_category
00164bc4 00000014 R vtable for std::system_error
00164bd8 00000028 r vtable for (anonymous namespace)::generic_error_category
00164c00 0000000d R typeinfo name for std::bad_alloc
00164c10 0000000c R typeinfo for std::bad_alloc
00164c1c 00000014 R vtable for std::bad_alloc
00164c30 00000010 R typeinfo name for std::logic_error
00164c40 0000000c R typeinfo for std::logic_error
00164c4c 00000011 R typeinfo name for std::length_error
00164c60 0000000c R typeinfo for std::length_error
00164c6c 00000012 R typeinfo name for std::runtime_error
00164c80 0000000c R typeinfo for std::runtime_error
00164c8c 00000014 R vtable for std::logic_error
00164ca0 00000014 R vtable for std::length_error
00164cb4 00000014 R vtable for std::runtime_error
00164e08 00000010 r zeroes.0
00164e18 00000010 r blanks.1
00164e30 00000101 R _ctype_
00164f34 0000006c R __action_table
00164fa0 0000006c R __state_table
0016500c 00000100 R __chclass
0016519c 0000000c r p05.0
001651a8 00000028 R __mprec_bigtens
001651d0 000000c8 R __mprec_tens
00165384 00000010 r zeroes.0
00165394 00000010 r blanks.1
001653a4 00000080 R dotab_stdnull
00165424 R __tdata_align
00165428 r __EH_FRAME_BEGIN__
001657a8 R __exidx_start
00165e18 R __exidx_end
00166000 00000001 D redrawTop
00166001 00000001 D redrawBottom
00166004 00000004 D bartphase
00166008 00000004 d collisionListener
0016600c 00000008 d framerateCounter
00166014 00000004 d framerate
00166018 00000004 d sock
0016601c 00000004 d queueLock
00166020 00000004 d aptChainloadDeliverArgSize
00166024 00000004 d kCount
00166028 00000004 d kInterval
0016602c 00000004 d kDelay
00166030 00000080 d soc_devoptab
001660b0 W __stacksize__
001660b4 00000004 D b2_defaultFilter
001660b8 00000004 D b2_defaultListener
001660bc 00000001 D g_blockSolve
001660c0 00000004 D __cxxabiv1::__unexpected_handler
001660c4 00000004 d (anonymous namespace)::generic_category_instance
001660c8 00000004 D __cxxabiv1::__terminate_handler
001660cc 0000000c D __sglue
001660d8 00000004 D __malloc_sbrk_base
001660dc 00000004 D __malloc_trim_threshold
001660e0 00000408 D __malloc_av_
001664e8 00000004 D _impure_ptr
001664f0 00000140 D _impure_data
00166630 0000016c D __global_locale
0016679c 00000004 D environ
001667a0 00000400 d _current_working_directory
00166ba0 00001000 d handles
00167ba0 0000000c d __stderr_handle
00167bac 0000000c d __stdout_handle
00167bb8 0000000c d __stdin_handle
00167bc4 0000008c D devoptab_list
00167c50 00000004 d defaultDevice
00167c5c d _GLOBAL_OFFSET_TABLE_
00167c68 d __frame_dummy_init_array_entry
00167c68 D __init_array_start
00167c68 B __preinit_array_end
00167c68 B __preinit_array_start
00167c68 D __tdata_lma
00167c68 D __tdata_lma_end
00167c84 d __do_global_dtors_aux_fini_array_entry
00167c84 D __fini_array_start
00167c84 D __init_array_end
00167c8c D __bss_start__
00167c8c D __fini_array_end
00167c8c 00000004 b opusFile
00167c90 00000001 b quit
00167c94 00000008 b audioEvent
00167c9c 00000048 b waveBufs
00167ce4 00000004 b audioThreadId
00167ce8 00000004 b audioBuf
00167cec 000009c4 b getRandomBartType()::rd
001686b0 00000018 b getRandomBartType()::dist
001686c8 00000960 B barts
00169028 00000004 b guard variable for getRandomBartType()::rd
0016902c 00000004 b guard variable for getRandomBartType()::gen
00169030 000009c4 b getRandomBartType()::gen
001699f4 00000004 b guard variable for getRandomBartType()::dist
001699f8 00000008 b lastTime
00169a00 00000004 b deltaTime
00169a08 00000020 B scenemanager
00169a28 00000004 b SOC_buffer
00169a2c 00000004 b font
00169a30 0000002c B startButton
00169a5c 0000002c B howtoplayButton
00169a88 00000044 b spriteManager
00169ad0 00000078 B mainmenuSprites
00169b48 00000004 B touch
00169b4c 00000004 B gamestate
00169b50 00000004 b world
00169b54 00000004 b playerBody
00169b58 00000001 B isFrozen
00169b59 b completed.1
00169b5c b object.0
00169b78 000005a8 B __C2Di_Context
0016a120 00000040 b s_projBot
0016a160 00000040 b s_projTop
0016a1a0 00000004 b uLoc_mdlvMtx
0016a1a4 00000004 b uLoc_projMtx
0016a1a8 00000004 b s_glyphSheets
0016a1ac 00000004 b s_textScale
0016a1b0 0000000c b hookCookie
0016a1c0 000002d0 B __C3D_Context
0016a490 00000004 b frameEndCbData
0016a494 00000004 b frameEndCb
0016a498 00000008 b frameCounter
0016a4a0 00000001 b isTopStereo
0016a4a1 00000001 b needSwapBot
0016a4a2 00000001 b needSwapTop
0016a4a3 00000001 b measureGpuTime
0016a4a4 00000001 b inSafeTransfer
0016a4a5 00000001 b inFrame
0016a4a8 00000010 b cpuTime
0016a4b8 00000010 b gpuTime
0016a4c8 0000000c b linkedTarget
0016a4d4 00000004 b lastTarget
0016a4d8 00000004 b firstTarget
0016a4dc 00000008 b C3Di_IVUnifEverDirty
0016a4e4 000000c0 b C3Di_FVUnifEverDirty
0016a5a4 00000018 b C3Di_ShaderFVecData
0016a5bc 00000002 B C3D_BoolUnifsDirty
0016a5c0 00000008 B C3D_IVUnifDirty
0016a5c8 000000c0 B C3D_FVUnifDirty
0016a688 00000004 B C3D_BoolUnifs
0016a68c 00000020 B C3D_IVUnif
0016a6ac 00000c00 B C3D_FVUnif
0016b2b0 00000008 b sLinearPool
0016b2b8 0000000c b sAddrMap
0016b2c8 00000008 b sVramPoolB
0016b2d0 00000008 b sVramPoolA
0016b2d8 0000000c b sAddrMap
0016b2e4 00000004 B __3dslink_host
0016b2e8 00000004 b sharedFontAddr
0016b2ec 00000004 B g_sharedFont
0016b2f0 00000004 b screenAlloc
0016b2f4 00000004 b screenFree
0016b2f8 00000002 b gfxIsDoubleBuf
0016b2fc 00000002 b gfxCurBuf
0016b2fe 00000001 b gfxIsVram
0016b2ff 00000001 b gfxTopMode
0016b300 00000002 b gfxFramebufferFormats
0016b304 00000004 b gfxBottomFramebufferMaxSize
0016b308 00000004 b gfxTopFramebufferMaxSize
0016b310 00000008 b gfxBottomFramebuffers
0016b318 00000008 b gfxTopFramebuffers
0016b320 00000001 V __ctru_speedup
0016b324 00000004 b romfs_mount_list
0016b328 00000004 V __romfs_path
0016b32c 00000004 b arbiter
0016b330 00000004 B gpuCmdBufOffset
0016b334 00000004 B gpuCmdBufSize
0016b338 00000004 B gpuCmdBuf
0016b33c 00000004 b boundQueue
0016b340 00000001 b shouldStop
0016b341 00000001 b isRunning
0016b342 00000001 b isActive
0016b344 00000004 b curQueue
0016b348 00000004 b ndspRefCount
0016b34c 00000048 b ndspMaster
0016b394 00000004 b ndspThread
0016b398 00000001 b ndspThreadRun
0016b39c 00001080 b dspVar5Backup
0016c41c 00000004 b ndspMutex
0016c420 00000008 b sleepEvent
0016c428 00000004 b dspSem
0016c42c 00000004 b irqEvent
0016c430 00000008 b ndspHookCookie
0016c438 00000001 b componentFree
0016c43a 00000002 b componentDataMask
0016c43c 00000002 b componentProgMask
0016c440 00000004 b componentSize
0016c444 00000004 b componentBin
0016c448 00000004 b frameCount
0016c44c 00000004 b droppedFrames
0016c450 00000001 b bCancelReceived
0016c451 00000001 b bSleeping
0016c452 00000001 b bEnteringSleep
0016c453 00000001 b bDspReady
0016c454 00000080 B ndspVars
0016c4d4 00000002 B ndspBufferId
0016c4d6 00000002 B ndspBufferCurId
0016c4d8 00000002 B ndspFrameId
0016c4e0 00000c60 b ndspChn
0016d140 00000001 b flagValue.0
0016d141 00000001 b flagInit.1
0016d144 00000004 b serviceName.6
0016d148 00000001 b aptChainloadFlags
0016d149 00000001 b aptChainloadMediatype
0016d14c 00000020 b aptChainloadHmac
0016d16c 00000300 b aptChainloadDeliverArg
0016d470 00000008 b aptChainloadTid
0016d478 00001000 b aptParameters
0016e478 00000004 b aptFlags
0016e47c 00000001 b aptHomeButtonState
0016e480 00000004 b aptMessageFuncData
0016e484 00000004 b aptMessageFunc
0016e488 0000000c b aptFirstHook
0016e494 00000001 b aptEventHandlerThreadQuit
0016e498 00000004 b aptEventHandlerThread
0016e49c 00000008 b aptSleepEvent
0016e4a4 00000008 b aptReceiveEvent
0016e4ac 00000008 b aptEvents
0016e4b4 00000004 b aptLockHandle
0016e4b8 00000004 b aptRefCount
0016e4bc 00000004 b cfguRefCount
0016e4c0 00000004 b cfguHandle
0016e4c4 00000002 b dspSavedCompDataMask
0016e4c6 00000002 b dspSavedCompProgMask
0016e4c8 00000004 b dspSavedCompSize
0016e4cc 00000004 b dspSavedCompBin
0016e4d0 00000001 b dspSleeping
0016e4d1 00000001 b dspComponentLoaded
0016e4d4 00000008 b dspFirstHook
0016e4dc 00000004 b dspRefCount
0016e4e0 00000004 b dspHandle
0016e4e8 00000080 b fsExemptArchives
0016e568 00000004 b fsuRefCount
0016e56c 00000004 b fsuHandle
0016e570 00000007 b gspEventCbOneShot
0016e578 0000001c b gspEventCbData
0016e594 0000001c b gspEventCb
0016e5b0 00000038 b gspEvents
0016e5e8 00000004 b gspLastEvent
0016e5ec 00000001 b gspRunEvents
0016e5f0 00000004 b gspEventThread
0016e5f4 00000004 b gspEvent
0016e5f8 00000001 b gspGpuRight
0016e5f9 00000001 b gspThreadId
0016e5fc 00000004 b gspSharedMem
0016e600 00000004 b gspSharedMemHandle
0016e604 00000004 b gspRefCount
0016e608 00000004 b gspGpuHandle
0016e60c 00000001 b usingIrrst
0016e610 00000004 b hidRefCount
0016e614 00000006 b gRate
0016e61c 00000006 b aVec
0016e624 00000004 b cPos
0016e628 00000004 b tPos
0016e62c 00000004 b kRepeat
0016e630 00000004 b kUp
0016e634 00000004 b kDown
0016e638 00000004 b kHeld
0016e63c 00000004 b kOld
0016e640 00000004 B hidSharedMem
0016e644 00000014 B hidEvents
0016e658 00000004 B hidMemHandle
0016e65c 00000004 B hidHandle
0016e660 00000004 b irrstRefCount
0016e664 00000004 b csPos
0016e668 00000004 b kHeld
0016e66c 00000004 B irrstSharedMem
0016e670 00000004 B irrstEvent
0016e674 00000004 B irrstMemHandle
0016e678 00000004 B irrstHandle
0016e67c 00000004 b ptmSysmRefCount
0016e680 00000004 b ptmSysmHandle
0016e684 00000004 V __ctru_linear_heap_size
0016e688 00000004 V __ctru_heap_size
0016e68c 00000004 B __ctru_linear_heap
0016e690 00000004 B __ctru_heap
0016e694 00000004 B __system_retAddr
0016e698 00000004 B __system_argv
0016e69c 00000004 B __system_argc
0016e6a0 b saved_stack
0016e6a8 00000004 b srvRefCount
0016e6ac 00000004 b srvHandle
0016e6b0 00000004 b currentAddr
0016e6b4 00000004 b maxAddr
0016e6b8 00000004 b minAddr
0016e6bc 00000004 b srvPmHandle
0016e6c0 00000004 B socMemhandle
0016e6c4 00000004 B SOCU_handle
0016e6c8 000005c0 b archive_devices
0016ec88 00000004 b archive_device_cwd
0016ec8c 00000001 b archive_initialized
0016ec90 00000281 b b2_sizeMap
0016ef14 00000008 B b2Vec2_zero
0016ef1c 00000004 B b2_gjkCalls
0016ef20 00000004 B b2_gjkIters
0016ef24 00000004 B b2_gjkMaxIters
0016ef28 00000004 B b2_toiCalls
0016ef2c 00000004 B b2_toiIters
0016ef30 00000004 B b2_toiMaxIters
0016ef34 00000004 B b2_toiMaxRootIters
0016ef38 00000004 B b2_toiMaxTime
0016ef3c 00000004 B b2_toiRootIters
0016ef40 00000004 B b2_toiTime
0016ef44 000000c0 B b2Contact::s_registers
0016f004 00000001 B b2Contact::s_initialized
0016f008 00000004 b init
0016f00c 00000001 B __eh_globals_init::_S_init
0016f010 0000000c b (anonymous namespace)::eh_globals
0016f01c 00000004 b (anonymous namespace)::get_static_cond()::once
0016f020 00000008 b (anonymous namespace)::fake_cond
0016f028 00000004 b (anonymous namespace)::static_cond
0016f02c 00000004 b (anonymous namespace)::get_static_mutex()::once
0016f030 00000010 b (anonymous namespace)::fake_mutex
0016f040 00000004 b (anonymous namespace)::static_mutex
0016f048 0000001c b (anonymous namespace)::emergency_pool
0016f064 00000004 b (anonymous namespace)::__new_handler
0016f068 00000010 V std::string::_Rep::_S_empty_rep_storage
0016f078 0000000c b __sfp_recursive_mutex
0016f088 00000168 B __sf
0016f1f0 00000004 B __stdio_exit_handler
0016f1f4 00000028 B __malloc_current_mallinfo
0016f21c 00000004 B __malloc_max_total_mem
0016f220 00000004 B __malloc_max_sbrked_mem
0016f224 00000004 B __malloc_top_pad
0016f228 0000000c b __malloc_recursive_mutex
0016f234 0000000c b __env_recursive_mutex
0016f240 00000004 b initial_env
0016f244 00000190 B __atexit0
0016f3d4 00000004 B __atexit
0016f3d8 0000000c B __atexit_recursive_mutex
0016f3e4 00000400 b temp_cwd
0016f7e4 00000004 b __hndl_lock
0016f7e8 00000004 B fake_heap_start
0016f7ec 00000004 B fake_heap_end
0016f7f0 00000004 b heap_start.0
0016f7f4 B __tls_start
001703fc B __bss_end__
001703fc A __end__
001703fc B __tls_end
