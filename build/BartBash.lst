         w __cxa_pure_virtual
         w __deregister_frame_info
         w __gnu_Unwind_Find_exidx
         w __register_frame_info
         w pthread_cancel
         w pthread_getspecific
         w pthread_key_create
         w pthread_key_delete
         w pthread_mutex_lock
         w pthread_mutex_unlock
         w pthread_setspecific
         w userAppExit
         w userAppInit
00000000 00000802 B __ctru_dev_utf16_buf
00000000 A __sync_synchronize
00000000 b _TLS_MODULE_BASE_
00000000 a shift
00000000 a shift
00000804 00000401 B __ctru_dev_path_buf
00100000 A __start__
00100000 T _start
00100008 T __service_ptr
0010000c T __apt_appid
00100010 T __heap_size
00100014 T __linear_heap_size
00100018 T __system_arglist
0010001c T __system_runflags
00100020 t startup
00100058 t ClearMem
0010006c t ClrLoop
00100094 T _init
001000ac t .udivsi3_skip_div0_test
001000ac T __aeabi_uidiv
001000ac 000001ec T __udivsi3
00100298 00000020 T __aeabi_uidivmod
001002b8 T __aeabi_idiv
001002b8 00000220 T __divsi3
001002c0 t .divsi3_skip_div0_test
001004d8 00000020 T __aeabi_idivmod
001004f8 00000004 W __aeabi_idiv0
001004f8 00000004 W __aeabi_ldiv0
001004fc T __aeabi_drsub
00100504 000002b0 T __aeabi_dsub
00100504 000002b0 T __subdf3
00100508 000002ac T __adddf3
00100508 000002ac T __aeabi_dadd
001007b4 00000024 T __aeabi_ui2d
001007b4 00000024 T __floatunsidf
001007d8 00000028 T __aeabi_i2d
001007d8 00000028 T __floatsidf
00100800 00000048 T __aeabi_f2d
00100800 00000048 T __extendsfdf2
00100848 00000074 T __aeabi_ul2d
00100848 00000074 T __floatundidf
0010085c 00000060 T __aeabi_l2d
0010085c 00000060 T __floatdidf
001008bc 0000019c T __aeabi_frsub
001008c4 00000194 T __aeabi_fsub
001008c4 00000194 T __subsf3
001008c8 00000190 T __addsf3
001008c8 00000190 T __aeabi_fadd
00100a58 00000028 T __aeabi_ui2f
00100a58 00000028 T __floatunsisf
00100a60 00000020 T __aeabi_i2f
00100a60 00000020 T __floatsisf
00100a80 0000008c T __aeabi_ul2f
00100a80 0000008c T __floatundisf
00100a90 0000007c T __aeabi_l2f
00100a90 0000007c T __floatdisf
00100b0c T __aeabi_ldivmod
00100be0 T __aeabi_uldivmod
00100c1c 00000014 T __restore_core_regs
00100c1c 00000014 T restore_core_regs
00100c30 T __gnu_Unwind_Restore_VFP
00100c38 T __gnu_Unwind_Save_VFP
00100c40 T __gnu_Unwind_Restore_VFP_D
00100c48 T __gnu_Unwind_Save_VFP_D
00100c50 T __gnu_Unwind_Restore_VFP_D_16_to_31
00100c58 T __gnu_Unwind_Save_VFP_D_16_to_31
00100c60 T __gnu_Unwind_Restore_WMMXD
00100ca4 T __gnu_Unwind_Save_WMMXD
00100ce8 T __gnu_Unwind_Restore_WMMXC
00100cfc T __gnu_Unwind_Save_WMMXC
00100d10 00000024 T ___Unwind_RaiseException
00100d10 00000024 T _Unwind_RaiseException
00100d34 00000024 T ___Unwind_Resume
00100d34 00000024 T _Unwind_Resume
00100d58 00000024 T ___Unwind_Resume_or_Rethrow
00100d58 00000024 T _Unwind_Resume_or_Rethrow
00100d7c 00000024 T ___Unwind_ForcedUnwind
00100d7c 00000024 T _Unwind_ForcedUnwind
00100da0 00000024 T ___Unwind_Backtrace
00100da0 00000024 T _Unwind_Backtrace
00100de8 00000390 T strcmp
00101170 t __do_global_dtors_aux
001011c0 t frame_dummy
001011ec 0000007c t fillBuffer(tag_ndspWaveBuf*)
00101268 00000080 t audioThreadFunc(void*)
001012e8 0000001c t audioNDSPCallback(void*)
00101304 0000004c t audioManagerStop() [clone .part.0]
00101350 00000110 T audioManagerInit()
00101460 0000003c T audioManagerExit()
0010149c 0000012c T audioManagerPlay(char const*)
001015c8 00000018 T audioManagerStop()
001015e0 00000010 T DeltaTime_Get()
001015f0 00000044 T DeltaTime_Update()
00101634 0000003c T onStartButtonClick()
00101670 00000094 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
00101704 0000011c t drawTransition() [clone .part.0]
00101820 00000074 T initSOC()
00101894 00000150 T texts()
001019e4 000000cc T loadUI()
00101ab0 00000194 T loadSprites()
00101c44 00000074 T drawTop(C3D_RenderTarget_tag*)
00101cb8 000001e4 T drawBottom(C3D_RenderTarget_tag*)
00101e9c 00000278 T main
00102114 00000048 t _GLOBAL__sub_I_gamestate
0010215c 00000010 T MetersToPixels(float)
0010216c 00000110 T PhysicsManager_Init()
0010227c 00000018 T PhysicsManager_Update(float)
00102294 0000013c T PhysicsManager_SpawnPlayer(float, float)
001023d0 00000010 T PhysicsManager_GetPlayer()
001023e0 00000030 T changeScene(SceneManager*, int)
00102410 0000000c T SpriteManager_Init(SpriteManager*)
0010241c 00000060 T SpriteManager_Load(SpriteManager*, char const*, char const*)
0010247c 00000054 T SpriteManager_GetSheet(SpriteManager*, char const*)
001024d0 00000040 T SpriteManager_Free(SpriteManager*)
00102510 00000040 T UIButton_Init(UIButton*, C2D_SpriteSheet_s*, int, float, float, float, float)
00102550 00000010 T UIButton_SetHoverSprite(UIButton*, int)
00102560 00000010 T UIButton_SetPressedSprite(UIButton*, int)
00102570 000000c4 T UIButton_Update(UIButton*, touchPosition)
00102634 000000f0 T UIButton_Draw(UIButton*)
00102724 0000009c T UIText::Init(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, C2D_Font_s*, float, float, float, unsigned long)
001027c0 00000040 T UIText::Draw() const
00102800 00000034 T UIText::Free()
00102834 00000044 t C2Di_FrameEndHook
00102878 0000036c T C2D_Init
00102be4 0000004c T C2D_Fini
00102c30 000000b8 T C2D_Prepare
00102ce8 00000048 T C2D_Flush
00102d30 00000104 T C2D_SceneSize
00102e34 00000058 T C2D_CreateScreenTarget
00102e8c 00000064 T C2D_TargetClear
00102ef0 0000013c T C2Di_CalcQuad
0010302c 00000058 T C2Di_AppendQuad
00103084 00000040 T C2Di_AppendVtx
001030c4 00000550 T C2Di_Update
00103614 000002b0 T C2D_DrawImage
001038c4 00000158 T C2D_DrawRectangle
00103a1c 00000018 t C2Di_GlyphComp
00103a34 00000140 t C2Di_CalcLineWidths
00103b74 000001dc T C2D_TextBufNew
00103d50 00000004 T C2D_TextBufDelete
00103d54 000001c8 T C2D_TextFontParseLine
00103f1c 000000a8 T C2D_TextFontParse
00103fc4 00000014 T C2D_TextParse
00103fd8 00000030 T C2D_TextOptimize
00104008 00000f6c T C2D_DrawText
00104f74 0000006c T C2D_SpriteSheetLoadFromHandle
00104fe0 00000048 T C2D_SpriteSheetLoad
00105028 00000028 T C2D_SpriteSheetFree
00105050 0000002c T C2D_SpriteSheetGetImage
0010507c 00000028 T C2D_FontFree
001050a4 000000e8 t C2Di_PostLoadFont
0010518c 000000b4 T C2D_FontLoadFromHandle
00105240 00000034 T C2D_FontLoad
00105274 00000044 T C2D_FontGlyphIndexFromCodePoint
001052b8 00000078 T C2D_FontCalcGlyphPos
00105330 00000028 T AttrInfo_Init
00105358 00000094 T AttrInfo_AddLoader
001053ec 00000054 T C3D_SetAttrInfo
00105440 00000080 T C3Di_AttrInfoBind
001054c0 00000004 W C3Di_LightEnvUpdate
001054c4 00000004 W C3Di_LightEnvDirty
001054c8 000000b4 t C3Di_AptEventHook
0010557c 00000004 W C3Di_GasUpdate
00105580 000001d0 T C3D_Init
00105750 00000098 T C3D_SetViewport
001057e8 000004e8 T C3Di_UpdateContext
00105cd0 000000e0 T C3Di_SplitFrame
00105db0 00000044 T C3D_Fini
00105df4 00000194 T C3D_BindProgram
00105f88 00000024 T BufInfo_Init
00105fac 00000080 T BufInfo_Add
0010602c 0000003c T C3D_SetBufInfo
00106068 00000048 T C3Di_BufInfoBind
001060b0 0000021c T C3D_DrawElements
001062cc 00000040 T C3D_DepthMap
0010630c 0000001c T C3D_CullFace
00106328 00000040 T C3D_StencilTest
00106368 00000024 T C3D_StencilOp
0010638c 0000001c T C3D_BlendingColor
001063a8 00000024 T C3D_EarlyDepthTest
001063cc 0000002c T C3D_DepthTest
001063f8 0000002c T C3D_AlphaTest
00106424 00000050 T C3D_AlphaBlend
00106474 00000030 T C3D_FragOpMode
001064a4 00000044 T C3D_FragOpShadow
001064e8 000001ac T C3Di_EffectBind
00106694 0000001c T C3D_CalcColorBufSize
001066b0 0000001c T C3D_CalcDepthBufSize
001066cc 00000044 T C3D_SetFrameBuf
00106710 0000016c T C3Di_FrameBufBind
0010687c 000000c8 T C3D_FrameBufClear
00106944 00000044 T C3D_FrameBufTransfer
00106988 000000a8 T C3D_ImmSendAttrib
00106a30 00000070 T C3D_ProcTexInit
00106aa0 00000054 T C3D_ProcTexBind
00106af4 0000005c T C3D_ProcTexLutBind
00106b50 000000a4 T ProcTexLut_FromArray
00106bf4 00000178 T C3Di_ProcTexUpdate
00106d6c 00000068 T C3Di_ProcTexDirty
00106dd4 0000004c t onVBlank0
00106e20 0000004c t onVBlank1
00106e6c 00000080 t C3Di_RenderTargetDestroy
00106eec 000000f4 t onQueueFinish
00106fe0 00000038 T C3Di_RenderQueueEnableVBlank
00107018 00000030 T C3Di_RenderQueueDisableVBlank
00107048 00000060 T C3Di_RenderQueueInit
001070a8 000000b4 T C3Di_RenderQueueExit
0010715c 00000034 T C3Di_RenderQueueWaitDone
00107190 000000e8 T C3D_FrameBegin
00107278 00000048 T C3D_FrameDrawOn
001072c0 00000058 T C3D_FrameSplit
00107318 000001d0 T C3D_FrameEnd
001074e8 0000001c T C3D_FrameEndHook
00107504 00000170 T C3D_RenderTargetCreate
00107674 000000a8 T C3D_RenderTargetSetOutput
0010771c 000000fc T C3D_SyncTextureCopy
00107818 000003d8 t Tex3DSi_ImportCommon
00107bf0 00000038 T Tex3DS_TextureImportStdio
00107c28 0000001c T Tex3DS_GetSubTexture
00107c44 00000004 T Tex3DS_TextureFree
00107c48 00000034 T C3D_GetTexEnv
00107c7c 00000024 T C3Di_TexEnvBind
00107ca0 00000290 T C3D_TexInitWithParams
00107f30 000000c8 T C3D_TexLoadImage
00107ff8 00000044 T C3D_TexBind
0010803c 00000074 T C3D_TexDelete
001080b0 0000014c T C3Di_SetTex
001081fc 00000290 T C3D_UpdateUniforms
0010848c 000000c0 T C3Di_DirtyUniforms
0010854c 000000d8 T C3Di_LoadShaderUniforms
00108624 00000028 T C3Di_ClearShaderUniforms
0010864c 000000cc T Mtx_Ortho
00108718 000000cc T Mtx_OrthoTilt
001087e4 00000024 t addrMapNodeComparator(rbtree_node const*, rbtree_node const*)
00108808 00000004 t addrMapNodeDestructor(rbtree_node*)
0010880c 0000012c T linearMemAlign
00108938 00000008 T linearAlloc
00108940 0000005c T linearFree
0010899c 00000088 T MemPool::CoalesceRight(MemBlock*)
00108a24 00000178 T MemPool::Allocate(MemChunk&, unsigned long, int)
00108b9c 00000118 T MemPool::Deallocate(MemChunk const&)
00108cb4 00000030 T MemPool::GetFreeSpace()
00108ce4 00000024 t addrMapNodeComparator(rbtree_node const*, rbtree_node const*)
00108d08 00000004 t addrMapNodeDestructor(rbtree_node*)
00108d0c 00000248 T vramMemAlignAt
00108f54 0000000c T vramAlloc
00108f60 0000000c T vramAllocAt
00108f6c 00000094 T vramFree
00109000 000000d8 T link3dsConnectToHost
001090d8 0000009c T fontEnsureMapped
00109174 0000007c T fontFixPointers
001091f0 00000100 T fontGlyphIndexFromCodePoint
001092f0 00000214 T fontCalcGlyphPos
00109504 000000cc t gfxPresentFramebuffer
001095d0 0000001c T gfxIsWide
001095ec 000000f8 T gfxSetScreenFormat
001096e4 000000d8 T gfxInit
001097bc 00000010 T gfxInitDefault
001097cc 000000b8 T gfxExit
00109884 000000a0 T gfxGetFramebuffer
00109924 00000028 T gfxScreenSwapBuffers
0010994c 00000074 T osConvertVirtToPhys
001099c0 00000054 T osGetTimeRef
00109a14 000000ec T osGetTime
00109b00 00000034 T __ctru_speedup_config
00109b34 00000008 t romfs_close
00109b3c 000000ac t romfs_seek
00109be8 00000024 t romfs_dirreset
00109c0c 000000c0 t fill_dir
00109ccc 000002ac t romfs_dirnext
00109f78 00000074 t romfs_free
00109fec 000000d0 t searchForFile.constprop.0
0010a0bc 000000d4 t searchForDir.constprop.0
0010a190 000001c0 t navigateToDir.constprop.0
0010a350 00000114 t romfs_open
0010a464 0000004c t romfs_chdir
0010a4b0 00000068 t romfs_diropen
0010a518 00000178 t romfs_stat
0010a690 00000008 t romfs_dirclose
0010a698 0000007c t romfs_fstat
0010a714 000000d0 t romfs_read
0010a7e4 0000028c T romfsMountFromFile
0010aa70 00000098 T romfsMountFromCurrentProcess
0010ab08 00000258 T romfsMountSelf
0010ad60 000000a0 T romfsUnmount
0010ae00 0000000c T __sync_init
0010ae0c 00000018 T __sync_fini
0010ae24 00000028 T syncArbitrateAddress
0010ae4c 0000001c T LightLock_Init
0010ae68 000000ac T LightLock_Lock
0010af14 00000040 T LightLock_Unlock
0010af54 00000054 T RecursiveLock_Lock
0010afa8 00000054 T RecursiveLock_Unlock
0010affc 00000044 T LightEvent_Init
0010b040 000000b8 T LightEvent_Clear
0010b0f8 000000dc T LightEvent_Signal
0010b1d4 00000050 T LightEvent_TryWait
0010b224 000000ac T LightEvent_Wait
0010b2d0 000001fc T threadCreate
0010b4cc 00000038 T threadFree
0010b504 00000024 T threadJoin
0010b528 00000030 T threadGetCurrent
0010b558 00000040 T threadExit
0010b598 00000020 t _thread_begin
0010b5b8 0000013c T GPUCMD_Add
0010b6f4 000000b0 T GPUCMD_Split
0010b7a4 00000034 T f32tof16
0010b7d8 00000034 T f32tof24
0010b80c 00000038 T f32tof31
0010b844 00000010 T GX_BindQueue
0010b854 0000007c T GX_ProcessCommandList
0010b8d0 00000074 T GX_MemoryFill
0010b944 00000074 T GX_DisplayTransfer
0010b9b8 00000078 T GX_TextureCopy
0010ba30 00000064 t gxCmdQueueDoCommands.part.0
0010ba94 000000e4 T gxCmdQueueInterrupt
0010bb78 00000068 T gxCmdQueueClear
0010bbe0 00000108 T gxCmdQueueAdd
0010bce8 00000080 T gxCmdQueueRun
0010bd68 00000064 T gxCmdQueueStop
0010bdcc 0000008c T gxCmdQueueWait
0010be58 000001e0 T shaderInstanceInit
0010c038 00000018 T shaderInstanceGetUniformLocation
0010c050 0000001c T shaderProgramInit
0010c06c 00000074 T shaderProgramFree
0010c0e0 00000094 T shaderProgramSetVsh
0010c174 000008d0 T shaderProgramConfigure
0010ca44 000001dc t DVLE_GenerateOutmap.part.0
0010cc20 000001ac T DVLB_ParseFile
0010cdcc 00000050 T DVLB_Free
0010ce1c 00000074 T DVLE_GetUniformRegister
0010ce90 00000158 t ndspUpdateMaster
0010cfe8 00000108 t ndspFinalize
0010d0f0 00000254 t ndspInitialize.part.0
0010d344 00000108 t ndspHookCallback
0010d450 00000318 t ndspThreadMain
0010d768 000003f0 T ndspInit
0010db58 000000d8 T ndspExit
0010dc30 0000003c T ndspSetMasterVol
0010dc6c 00000034 T ndspSetOutputMode
0010dca0 00000010 T ndspSetCallback
0010dcb0 000000e0 T ndspChnReset
0010dd90 00000018 T ndspChnSetFormat
0010dda8 00000050 T ndspChnSetInterp
0010ddf8 00000060 T ndspChnSetRate
0010de58 00000080 T ndspChnSetMix
0010ded8 000000c8 T ndspChnWaveBufAdd
0010dfa0 00000040 T ndspiInitChn
0010dfe0 0000002c T ndspiDirtyChn
0010e00c 0000043c T ndspiUpdateChn
0010e448 00000180 T ndspiReadChnState
0010e5c8 00000180 t aptConvertScreenForCapture
0010e748 00000138 T aptSendCommand
0010e880 00000044 t aptExitProcess
0010e8c4 00000394 T aptExit
0010ec58 000000d8 T aptHandleSleep
0010ed30 00000034 T aptHook
0010ed64 00000030 T aptUnhook
0010ed94 00000084 T APT_SleepIfShellClosed
0010ee18 00000078 T aptSetSleepAllowed
0010ee90 00000084 T APT_UnlockTransition
0010ef18 00000470 t aptEventHandler
0010f388 000000bc T APT_ReceiveParameter
0010f444 000000b0 t aptReceiveParameter.constprop.0
0010f4f8 00000294 t aptScreenTransfer
0010f78c 000002d0 t aptWaitForWakeUp.isra.0
0010fa5c 000000f4 T aptJumpToHomeMenu
0010fb50 00000058 T aptMainLoop
0010fba8 00000240 T aptInit
0010fde8 00000090 T APT_CheckNew3DS
0010fe78 00000048 T APT_GetSharedFont
0010fec0 000000a8 T cfguInit
0010ff68 0000003c T cfguExit
0010ffa4 0000004c T CFGU_GetConfigInfoBlk2
0010fff0 000000a4 t DSP_LoadComponent.part.0
00110094 000000fc T dspInit
00110190 0000008c T dspExit
0011021c 00000024 T dspHook
00110240 00000030 T dspUnhook
00110270 000000b4 T aptDspSleep
00110324 000000b4 T aptDspWakeup
001103d8 00000044 T aptDspCancel
0011041c 00000050 T DSP_FlushDataCache
0011046c 00000034 T DSP_SetSemaphore
001104a0 00000034 T DSP_SetSemaphoreMask
001104d4 00000038 T DSP_GetSemaphoreHandle
0011050c 0000003c T DSP_LoadComponent
00110548 00000044 T DSP_RegisterInterruptEvents
0011058c 00000078 T DSP_ReadPipeIfPossible
00110604 0000004c T DSP_WriteProcessPipe
00110650 00000044 T DSP_ConvertProcessAddressFromDspDram
00110694 00000044 T DSP_RecvData
001106d8 00000050 T DSP_RecvDataIsReady
00110728 00000104 T fsInit
0011082c 0000003c T fsExit
00110868 00000068 T fsExemptFromSession
001108d0 00000050 T fsUnexemptFromSession
00110920 000000cc T FSUSER_OpenFile
001109ec 000000cc T FSUSER_OpenFileDirectly
00110ab8 000000b8 T FSUSER_DeleteFile
00110b70 000000f4 T FSUSER_RenameFile
00110c64 000000b8 T FSUSER_DeleteDirectory
00110d1c 000000d0 T FSUSER_CreateFile
00110dec 000000c0 T FSUSER_CreateDirectory
00110eac 000000f4 T FSUSER_RenameDirectory
00110fa0 000000b4 T FSUSER_OpenDirectory
00111054 00000090 T FSUSER_OpenArchive
001110e4 0000008c T FSUSER_CloseArchive
00111170 00000074 T FSUSER_GetSdmcArchiveResource
001111e4 00000064 T FSUSER_IsSdmcWritable
00111248 00000064 T FSFILE_Read
001112ac 0000006c T FSFILE_Write
00111318 00000044 T FSFILE_GetSize
0011135c 00000028 T FSFILE_SetSize
00111384 0000003c T FSFILE_Close
001113c0 00000024 T FSFILE_Flush
001113e4 00000060 T FSDIR_Read
00111444 0000003c T FSDIR_Close
00111480 00000c70 t gspHardwareInit
001120f0 00000280 T gspInit
00112370 00000110 T gspExit
00112480 00000010 T gspHasGpuRight
00112490 000000a4 T gspPresentBuffer
00112534 00000030 T gspSetEventCallback
00112564 00000050 T gspWaitForEvent
001125b4 0000004c T gspWaitForAnyEvent
00112600 00000154 t gspEventThreadMain
00112754 0000012c T gspSubmitGxCommand
00112880 00000050 T GSPGPU_FlushDataCache
001128d0 00000034 T GSPGPU_SetLcdForceBlack
00112904 00000080 T GSPGPU_AcquireRight
00112984 0000005c T GSPGPU_ReleaseRight
001129e0 0000007c T GSPGPU_ImportDisplayCaptureInfo
00112a5c 0000002c T GSPGPU_SaveVramSysArea
00112a88 0000002c T GSPGPU_RestoreVramSysArea
00112ab4 00000024 W hidShouldUseIrrst
00112ad8 000001cc T hidInit
00112ca4 000000e8 T hidExit
00112d8c 000002a0 T hidScanInput
0011302c 00000010 T hidKeysDown
0011303c 00000010 T hidKeysUp
0011304c 00000018 T hidTouchRead
00113064 000001a4 T irrstInit
00113208 000000dc T irrstExit
001132e4 000000b4 T irrstScanInput
00113398 00000024 T irrstKeysHeld
001133bc 00000078 T ptmSysmInit
00113434 0000003c T ptmSysmExit
00113470 00000034 T PTMSYSM_ConfigureNew3DSCPU
001134a4 00000174 T connect
00113618 00000014 t soc_open
0011362c 00000034 t soc_read
00113660 00000034 t soc_write
00113694 000000b0 t soc_close
00113744 00000190 T socInit
001138d4 00000088 T socExit
0011395c 00000148 T socuipc_cmd7
00113aa4 00000168 T socuipc_cmd8
00113c0c 00000010 T soc_recvfrom
00113c1c 0000015c T socuipc_cmd9
00113d78 00000160 T socuipc_cmda
00113ed8 00000010 T soc_sendto
00113ee8 0000016c T socket
00114054 000000e0 t buffer_read
00114134 000000cc t iov_read
00114200 00000164 t iov_memmove
00114364 000001e0 t decompress_rle
00114544 00000264 t decompress_lzss
001147a8 00000418 t decompress_lz11
00114bc0 0000031c t decompress_huff.isra.0
00114edc 00000010 T decompressCallback_Stdio
00114eec 000000e4 T decompressHeader
00114fd0 0000021c T decompressV
001151ec 00000074 T rbtree_find
00115260 00000010 T rbtree_init
00115270 00000198 t do_insert
00115408 00000008 T rbtree_insert
00115410 00000310 T rbtree_remove
00115720 00000090 T rbtree_rotate
001157b0 00000140 T decode_utf8
001158f0 000000e8 T utf16_to_utf8
001159d8 000000c0 T utf8_to_utf16
00115a98 000001e8 W __system_allocateHeaps
00115c80 00000038 W __libctru_init
00115cb8 0000016c W __system_initArgv
00115e24 00000030 T __syscall_getreent
00115e54 00000064 T __syscall_gettod_r
00115eb8 00000004 T __syscall_lock_acquire
00115ebc 00000004 T __syscall_lock_release
00115ec0 00000004 T __syscall_lock_acquire_recursive
00115ec4 00000004 T __syscall_lock_release_recursive
00115ec8 00000004 T __syscall_exit
00115ecc 00000054 T initThreadVars
00115f20 00000080 T __system_initSyscalls
00115fa0 T svcControlMemory
00115fc0 T svcQueryMemory
00115ff0 T svcExitProcess
00115ff8 T svcCreateThread
00116018 T svcExitThread
00116020 T svcSleepThread
00116028 T svcGetThreadPriority
0011603c T svcReleaseMutex
00116044 T svcCreateEvent
00116058 T svcSignalEvent
00116060 T svcClearEvent
00116068 T svcCreateMemoryBlock
00116080 T svcMapMemoryBlock
00116088 T svcUnmapMemoryBlock
00116090 T svcCreateAddressArbiter
001160a4 T svcArbitrateAddressNoTimeout
001160ac T svcCloseHandle
001160b4 T svcWaitSynchronization
001160bc T svcWaitSynchronizationN
001160e4 T svcDuplicateHandle
001160f8 T svcGetSystemTick
00116100 T svcConnectToPort
00116114 T svcSendSyncRequest
0011611c T svcGetResourceLimit
00116130 T svcGetResourceLimitLimitValues
00116138 T svcGetResourceLimitCurrentValues
00116140 T svcBreak
00116148 T __aeabi_read_tp
00116154 W initSystem
001161a4 W __ctru_exit
001161b8 0000008c W envGetHandle
00116244 00000050 W envDestroyHandles
00116294 00000164 T srvInit
001163f8 00000064 T srvExit
0011645c 00000060 T srvEnableNotification
001164bc 000000a0 T srvGetServiceHandleDirect
0011655c 00000048 T srvGetServiceHandle
001165a4 00000034 T srvSubscribe
001165d8 00000060 T srvReceiveNotification
00116638 00000038 T srvPublishToSubscriber
00116670 00000090 t mappableFindAddressWithin
00116700 00000028 T mappableInit
00116728 0000007c T mappableAlloc
001167a4 00000004 T mappableFree
001167a8 0000000c T srvPmGetSessionHandle
001167b4 0000003c T _net_convert_error
001167f0 00000060 T rbtree_node_next
00116850 00000054 T decode_utf16
001168a4 00000054 T encode_utf16
001168f8 000000e0 T encode_utf8
001169d8 00000030 W __appExit
00116a08 00000030 W __appInit
00116a38 00000090 W __libctru_exit
00116ac8 00000014 t archive_link
00116adc 00000014 t archive_dirreset
00116af0 00000014 t archive_chmod
00116b04 00000024 t error_cmp
00116b28 00000050 t archive_translate_error
00116b78 000000c0 t archive_seek
00116c38 00000078 t _archiveInit.part.0
00116cb0 000000d4 t archiveFindDevice.part.0
00116d84 00000298 t archive_utf16path
0011701c 00000098 t _archiveUnmountDeviceStruct.part.0
001170b4 00000014 t archive_statvfs
001170c8 00000014 t archive_fchmod
001170dc 00000178 t _archiveMountDevice
00117254 000000f8 t archive_diropen
0011734c 000000ac t archive_fstat
001173f8 00000074 t archive_fsync
0011746c 00000074 t archive_close
001174e0 00000078 t archive_dirclose
00117558 000000ec t sdmc_statvfs
00117644 000000f8 t archive_chdir
0011773c 0000008c t archive_ftruncate
001177c8 000000bc t archive_read
00117884 000000a8 t archive_unlink
0011792c 000000c0 t archive_rmdir
001179ec 000000d8 t archive_mkdir
00117ac4 000001a0 t archive_stat
00117c64 00000164 t archive_dirnext
00117dc8 0000013c t archive_write
00117f08 00000254 t archive_open
0011815c 00000270 t archive_rename
001183cc 000001c8 T archiveMountSdmc
00118594 00000054 T archiveUnmountAll
001185e8 00000104 t op_granpos_add
001186ec 000000fc t op_stereo_filter
001187e8 00000178 t op_get_next_page
00118960 000002e4 t op_fetch_headers_impl
00118c44 000000a8 t op_fetch_headers
00118cec 00000038 t op_get_packet_duration
00118d24 00000098 t op_collect_audio_packets
00118dbc 000000d4 t op_clear
00118e90 0000006c t op_seek_helper
00118efc 00000438 t op_float2short_filter
00119334 000000a4 t op_decode
001193d8 000000e4 t op_rescale64.part.0
001194bc 000000e4 t op_granpos_diff
001195a0 00000394 t op_find_initial_pcm_offset
00119934 00000308 t op_find_final_pcm_offset
00119c3c 000000cc t op_update_gain.part.7
00119d08 00000140 t op_make_decode_ready.part.8
00119e48 000008fc t op_fetch_and_process_page
0011a744 000000b4 t op_float2short_stereo_filter
0011a7f8 00000408 t op_read_native.part.10
0011ac00 000000b8 t op_filter_read_native
0011acb8 00000ea4 t op_open_seekable2
0011bb5c 00000064 t op_open2
0011bbc0 00000244 T op_test_callbacks
0011be04 0000004c T op_open_callbacks
0011be50 00000064 t op_open_close_on_failure
0011beb4 00000034 T op_open_file
0011bee8 00000020 T op_free
0011bf08 00000024 T op_read_stereo
0011bf2c 00000004 t op_ftell
0011bf30 00000004 t op_fseek
0011bf34 00000044 t op_fread
0011bf78 00000034 T op_fopen
0011bfac 00000050 t op_strdup_with_len
0011bffc 0000009c t op_tags_ensure_capacity
0011c098 000001f4 t opus_tags_parse_impl
0011c28c 000000f4 t opus_tags_get_gain.isra.0.constprop.1
0011c380 00000204 T opus_head_parse
0011c584 00000060 T opus_tags_clear
0011c5e4 00000074 T opus_tags_parse
0011c658 0000001c T opus_tags_get_album_gain
0011c674 0000001c T opus_tags_get_track_gain
0011c690 00000058 T op_strncasecmp
0011c6e8 00000264 T sinf
0011c94c 00000050 T sqrtf
0011c99c 00000024 t with_errnof
0011c9c0 0000001c T __math_invalidf
0011c9dc 000000b8 T lrintf
0011ca94 000000c0 T ceilf
0011cb58 0000025c T cosf
0011cdb4 00000008 T __ieee754_sqrtf
0011cdbc 00000100 t _os_update_crc
0011cebc 0000012c t _packetout
0011cfe8 00000010 T ogg_page_bos
0011cff8 00000044 T ogg_page_granulepos
0011d03c 0000000c T ogg_page_serialno
0011d048 00000054 T ogg_stream_clear
0011d09c 00000098 T ogg_stream_init
0011d134 00000078 t _os_body_expand
0011d1ac 0000008c t _os_lacing_expand
0011d238 00000078 T ogg_page_checksum_set
0011d2b0 00000030 T ogg_sync_init
0011d2e0 00000044 T ogg_sync_clear
0011d324 000000c8 T ogg_sync_buffer
0011d3ec 00000034 T ogg_sync_wrote
0011d420 000001d8 T ogg_sync_pageseek
0011d5f8 00000380 T ogg_stream_pagein
0011d978 00000030 T ogg_sync_reset
0011d9a8 00000068 T ogg_stream_reset_serialno
0011da10 00000024 T ogg_stream_packetout
0011da34 00000380 T opus_pcm_soft_clip
0011ddb4 000000a4 T opus_packet_get_samples_per_frame
0011de58 00000480 T opus_packet_parse_impl
0011e2d8 000000b4 t smooth_fade
0011e390 00000e24 t opus_decode_frame
0011f1b4 0000004c t opus_decoder_get_size.part.2
0011f200 00000018 T opus_decoder_get_size
0011f218 00000140 T opus_decoder_init
0011f358 00000604 T opus_decode_native
0011f95c 000002e0 T opus_decoder_ctl
0011fc3c 00000050 T opus_packet_get_nb_frames
0011fc8c 00000074 T opus_packet_get_nb_samples
0011fd00 00000078 t opus_copy_channel_out_float
0011fd78 00000044 t opus_multistream_decoder_get_size.part.2
0011fdbc 00000128 T opus_multistream_decoder_init
0011fee4 000000e4 T opus_multistream_decoder_create
0011ffc8 000002bc T opus_multistream_decoder_ctl_va_list
00120284 00000030 T opus_multistream_decoder_ctl
001202b4 00000478 T opus_multistream_decode_native
0012072c 0000003c T opus_multistream_decode_float
00120768 00000004 T opus_multistream_decoder_destroy
0012076c 00000038 T celt_fatal
001207a4 00000088 T resampling_factor
0012082c 000002c0 T comb_filter
00120aec 0000006c T init_caps
00120b58 00000224 t deemphasis
00120d7c 00000498 t celt_synthesis
00121218 00000eb0 t celt_decode_lost
001220c8 000002d0 T validate_celt_decoder
00122398 00000040 T celt_decoder_get_size
001223d8 000011f0 T celt_decode_with_ec
001235c8 00000304 T opus_custom_decoder_ctl
001238cc 000000e8 T celt_decoder_init
001239b4 00000048 T ec_tell_frac
001239fc 0000007c t ec_dec_normalize
00123a78 00000060 T ec_dec_init
00123ad8 0000003c T ec_decode
00123b14 00000040 T ec_decode_bin
00123b54 0000003c T ec_dec_update
00123b90 00000034 T ec_dec_bit_logp
00123bc4 00000050 T ec_dec_icdf
00123c14 00000074 T ec_dec_bits
00123c88 00000114 T ec_dec_uint
00123d9c 00000214 T clt_mdct_backward_c
00123fb0 000000ac T opus_custom_mode_create
0012405c 00000120 t find_best_pitch
0012417c 00000254 T pitch_downsample
001243d0 00000298 T celt_pitch_xcorr_c
00124668 000002b0 T pitch_search
00124918 00000124 T _celt_lpc
00124a3c 000002d8 T celt_fir_c
00124d14 000003e4 T celt_iir
001250f8 00000168 T _celt_autocorr
00125260 00000200 T unquant_coarse_energy
00125460 000000dc T unquant_fine_energy
0012553c 00000160 T unquant_energy_finalise
0012569c 00000df0 T clt_compute_allocation
0012648c 0000009c t exp_rotation1
00126528 00000080 t normalise_residual
001265a8 0000018c t exp_rotation.part.0
00126734 0000030c T op_pvq_search_c
00126a40 000001e0 T alg_quant
00126c20 00000140 T alg_unquant
00126d60 000000b4 T renormalise_vector
00126e18 00000274 T stereo_itheta
0012708c 00000014 T silk_Get_Decoder_Size
001270a0 00000038 T silk_InitDecoder
001270d8 00000bc0 T silk_Decode
00127c98 00000294 T silk_stereo_MS_to_LR
00127f2c 000003c0 T silk_resampler_init
001282ec 00000184 T silk_resampler
00128470 000009b8 T silk_resampler_private_down_FIR
00128e28 000001e4 T silk_resampler_private_IIR_FIR
0012900c 00000218 T silk_resampler_private_up2_HQ
00129224 00000004 T silk_resampler_private_up2_HQ_wrapper
00129228 00000134 T silk_stereo_decode_pred
0012935c 00000020 T silk_stereo_decode_mid_only
0012937c 0000007c T validate_layout
001293f8 00000074 T get_left_channel
0012946c 00000078 T get_right_channel
001294e4 00000078 T get_mono_channel
0012955c 000000a8 t intensity_stereo.isra.0
00129604 0000011c t deinterleave_hadamard
00129720 00000078 t special_hybrid_folding.isra.1
00129798 00000104 t quant_band_n1.isra.3
0012989c 00000018 T celt_lcg_rand
001298b4 0000007c T bitexact_log2tan
00129930 000008e0 t compute_theta
0012a210 000005f8 t quant_partition
0012a808 000001fc T denormalise_bands
0012aa08 00000358 T anti_collapse
0012ad60 00000080 T haar1
0012ade0 000005b0 t quant_band
0012b390 000005dc t quant_band_stereo
0012b96c 00000fd8 T quant_all_bands
0012c944 0000012c T encode_pulses
0012ca70 000002d4 T decode_pulses
0012cd44 000000a8 t ec_enc_carry_out.part.0
0012cdec 000000cc T ec_encode
0012ceb8 0000008c T ec_enc_bit_logp
0012cf44 00000098 T ec_enc_bits
0012cfdc 00000080 T ec_enc_uint
0012d05c 00000960 T opus_fft_impl
0012d9bc 00000174 T ec_laplace_decode
0012db30 00000040 T isqrt32
0012db70 00000040 T silk_init_decoder
0012dbb0 00000224 T silk_decode_frame
0012ddd4 0000024c T silk_decode_parameters
0012e020 0000041c T silk_decode_indices
0012e43c 00000248 T silk_decode_pulses
0012e684 00000244 T silk_decoder_set_fs
0012e8c8 000000b4 T silk_gains_dequant
0012e97c 00000150 T silk_NLSF_decode
0012eacc 00000030 T silk_PLC_Reset
0012eafc 00000e28 T silk_PLC
0012f924 000001e0 T silk_PLC_glue_frames
0012fb04 000003fc T silk_shell_decoder
0012ff00 000000a0 T silk_NLSF_unpack
0012ffa0 00000070 T silk_bwexpander
00130010 00000104 T silk_decode_pitch
00130114 00000068 T silk_log2lin
0013017c 0000017c T silk_LPC_analysis_filter
001302f8 00000628 T silk_LPC_inverse_pred_gain_c
00130920 00000360 T silk_NLSF2A
00130c80 000002e4 T silk_NLSF_stabilize
00130f64 00000070 T silk_resampler_private_AR2
00130fd4 00000074 T silk_insertion_sort_increasing_all_values_int16
00131048 00000114 T silk_sum_sqr_shift
0013115c 000001cc T silk_LPC_fit
00131328 00000064 T silk_CNG_Reset
0013138c 000009b0 T silk_CNG
00131d3c 000000d4 T silk_decode_signs
00131e10 00000cb8 T silk_decode_core
00132ac8 0000009c T silk_bwexpander_32
00132b64 00000024 t with_errno
00132b88 00000028 t xflow
00132bb0 00000010 T __math_uflow
00132bc0 00000010 T __math_oflow
00132bd0 00000014 T __math_check_uflow
00132be8 00000028 T __math_check_oflow
00132c10 00000058 T sqrt
00132c68 000000a8 T cos
00132d10 00000008 T __ieee754_sqrt
00132d18 00000144 T floor
00132e60 00000214 T exp
00133078 00000150 T __kernel_cos
001331c8 00000310 T __ieee754_rem_pio2
001334d8 000008b0 T __kernel_rem_pio2
00133d88 00000140 T scalbn
00133ec8 000000c0 T __kernel_sin
00133f88 00000014 T fabs
00133f9c 00000008 T b2PolygonShape::GetChildCount() const
00133fa4 00000090 T b2PolygonShape::TestPoint(b2Transform const&, b2Vec2 const&) const
00134034 00000004 W b2PolygonShape::~b2PolygonShape()
00134034 00000004 W b2PolygonShape::~b2PolygonShape()
00134038 000000d0 T b2PolygonShape::Clone(b2BlockAllocator*) const
00134108 00000190 T b2PolygonShape::ComputeMass(b2MassData*, float) const
00134298 000001bc T b2PolygonShape::RayCast(b2RayCastOutput*, b2RayCastInput const&, b2Transform const&, int) const
00134454 00000014 W b2PolygonShape::~b2PolygonShape()
00134468 000000e0 T b2PolygonShape::ComputeAABB(b2AABB*, b2Transform const&, int) const
00134548 0000006c T b2PolygonShape::SetAsBox(float, float)
001345b4 00000048 T b2BlockAllocator::b2BlockAllocator()
001345b4 00000048 T b2BlockAllocator::b2BlockAllocator()
001345fc 00000048 T b2BlockAllocator::~b2BlockAllocator()
001345fc 00000048 T b2BlockAllocator::~b2BlockAllocator()
00134644 000001a0 T b2BlockAllocator::Allocate(int)
001347e4 00000088 T b2BlockAllocator::Free(void*, int)
0013486c 00000078 t _GLOBAL__sub_I__ZN16b2BlockAllocatorC2Ev
001348e4 00000004 T b2Alloc_Default(int)
001348e8 00000004 T b2Free_Default(void*)
001348ec 000002a8 T b2Body::b2Body(b2BodyDef const*, b2World*)
001348ec 000002a8 T b2Body::b2Body(b2BodyDef const*, b2World*)
00134b94 00000004 T b2Body::~b2Body()
00134b94 00000004 T b2Body::~b2Body()
00134b98 0000022c T b2Body::ResetMassData()
00134dc4 000000d8 T b2Body::CreateFixture(b2FixtureDef const*)
00134e9c 00000058 T b2Body::CreateFixture(b2Shape const*, float)
00134ef4 0000006c T b2Body::ShouldCollide(b2Body const*) const
00134f60 000000ec T b2Body::SynchronizeFixtures()
0013504c 00000004 W b2ContactListener::~b2ContactListener()
0013504c 00000004 W b2ContactListener::~b2ContactListener()
00135050 00000004 W b2ContactListener::BeginContact(b2Contact*)
00135054 00000004 W b2ContactListener::EndContact(b2Contact*)
00135058 00000004 W b2ContactListener::PreSolve(b2Contact*, b2Manifold const*)
0013505c 00000004 W b2ContactListener::PostSolve(b2Contact*, b2ContactImpulse const*)
00135060 00000014 W b2ContactListener::~b2ContactListener()
00135074 0000003c T b2ContactManager::b2ContactManager()
00135074 0000003c T b2ContactManager::b2ContactManager()
001350b0 000000ec T b2ContactManager::Destroy(b2Contact*)
0013519c 000001d0 T b2ContactManager::Collide()
0013536c 00000184 T b2ContactManager::AddPair(void*, void*)
001354f0 00000208 W void b2DynamicTree::Query<b2BroadPhase>(b2BroadPhase*, b2AABB const&) const
001356f8 000001ac W void b2BroadPhase::UpdatePairs<b2ContactManager>(b2ContactManager*)
001358a4 00000010 T b2ContactManager::FindNewContacts()
001358b4 00000038 T b2Fixture::b2Fixture()
001358b4 00000038 T b2Fixture::b2Fixture()
001358ec 000000d0 T b2Fixture::Create(b2BlockAllocator*, b2Body*, b2FixtureDef const*)
001359bc 00000138 T b2Fixture::Destroy(b2BlockAllocator*)
00135af4 000000b0 T b2Fixture::CreateProxies(b2BroadPhase*, b2Transform const&)
00135ba4 0000005c T b2Fixture::DestroyProxies(b2BroadPhase*)
00135c00 00000150 T b2Fixture::Synchronize(b2BroadPhase*, b2Transform const&, b2Transform const&)
00135d50 000000b0 T b2World::b2World(b2Vec2 const&)
00135d50 000000b0 T b2World::b2World(b2Vec2 const&)
00135e00 00000080 T b2World::CreateBody(b2BodyDef const*)
00135e80 0000018c T b2World::DestroyJoint(b2Joint*)
0013600c 000001b4 T b2World::DestroyBody(b2Body*)
001361c0 000004b0 T b2World::Solve(b2TimeStep const&)
00136670 00000c34 T b2World::SolveTOI(b2TimeStep const&)
001372a4 00000198 T b2World::Step(float, int, int)
0013743c 00000004 W b2ContactFilter::~b2ContactFilter()
0013743c 00000004 W b2ContactFilter::~b2ContactFilter()
00137440 0000005c T b2ContactFilter::ShouldCollide(b2Fixture*, b2Fixture*)
0013749c 00000014 W b2ContactFilter::~b2ContactFilter()
001374b0 00000058 T b2BroadPhase::b2BroadPhase()
001374b0 00000058 T b2BroadPhase::b2BroadPhase()
00137508 00000080 T b2BroadPhase::CreateProxy(b2AABB const&, void*)
00137588 00000050 T b2BroadPhase::DestroyProxy(int)
001375d8 0000006c T b2BroadPhase::BufferMove(int)
00137644 00000028 T b2BroadPhase::MoveProxy(int, b2AABB const&, b2Vec2 const&)
0013766c 000000f4 T b2BroadPhase::QueryCallback(int)
00137760 00000024 t b2DistanceProxy::GetVertex(int) const [clone .part.0]
00137784 0000010c T b2DistanceProxy::Set(b2Shape const*, int)
00137890 000002fc W b2Simplex::ReadCache(b2SimplexCache const*, b2DistanceProxy const*, b2Transform const&, b2DistanceProxy const*, b2Transform const&)
00137b8c 000000b8 T b2Simplex::Solve2()
00137c44 00000264 T b2Simplex::Solve3()
00137ea8 00000738 T b2Distance(b2DistanceOutput*, b2SimplexCache*, b2DistanceInput const*)
001385e0 000000a4 T b2DynamicTree::b2DynamicTree()
001385e0 000000a4 T b2DynamicTree::b2DynamicTree()
00138684 00000018 T b2DynamicTree::~b2DynamicTree()
00138684 00000018 T b2DynamicTree::~b2DynamicTree()
0013869c 0000012c T b2DynamicTree::AllocateNode()
001387c8 00000088 T b2DynamicTree::FreeNode(int)
00138850 00000658 T b2DynamicTree::Balance(int)
00138ea8 000004b4 T b2DynamicTree::InsertLeaf(int)
0013935c 00000084 T b2DynamicTree::CreateProxy(b2AABB const&, void*)
001393e0 00000150 T b2DynamicTree::RemoveLeaf(int)
00139530 000000e4 T b2DynamicTree::DestroyProxy(int)
00139614 000001ac T b2DynamicTree::MoveProxy(int, b2AABB const&, b2Vec2 const&)
001397c0 00000024 t b2DistanceProxy::GetVertex(int) const [clone .part.0]
001397e4 000004bc W b2SeparationFunction::FindMinSeparation(int*, int*, float) const
00139ca0 00000304 W b2SeparationFunction::Evaluate(int, int, float) const
00139fa4 00000af0 T b2TimeOfImpact(b2TOIOutput*, b2TOIInput const*)
0013aa94 00000018 t _GLOBAL__sub_I_b2Vec2_zero
0013aaac 0000001c T b2StackAllocator::b2StackAllocator()
0013aaac 0000001c T b2StackAllocator::b2StackAllocator()
0013aac8 00000058 T b2StackAllocator::~b2StackAllocator()
0013aac8 00000058 T b2StackAllocator::~b2StackAllocator()
0013ab20 000000b0 T b2StackAllocator::Allocate(int)
0013abd0 000000b0 T b2StackAllocator::Free(void*)
0013ac80 00000004 T b2Timer::b2Timer()
0013ac80 00000004 T b2Timer::b2Timer()
0013ac84 00000004 T b2Timer::Reset()
0013ac88 0000000c T b2Timer::GetMilliseconds() const
0013ac94 00000118 T b2Contact::InitializeRegisters()
0013adac 0000010c T b2Contact::Create(b2Fixture*, int, b2Fixture*, int, b2BlockAllocator*)
0013aeb8 00000120 T b2Contact::Destroy(b2Contact*, b2BlockAllocator*)
0013afd8 000000d8 T b2Contact::b2Contact(b2Fixture*, int, b2Fixture*, int)
0013afd8 000000d8 T b2Contact::b2Contact(b2Fixture*, int, b2Fixture*, int)
0013b0b0 00000280 T b2Contact::Update(b2ContactListener*)
0013b330 00000004 W b2EdgeAndCircleContact::~b2EdgeAndCircleContact()
0013b330 00000004 W b2EdgeAndCircleContact::~b2EdgeAndCircleContact()
0013b334 00000014 W b2EdgeAndCircleContact::~b2EdgeAndCircleContact()
0013b348 00000034 T b2EdgeAndCircleContact::Evaluate(b2Manifold*, b2Transform const&, b2Transform const&)
0013b37c 00000040 T b2EdgeAndCircleContact::Destroy(b2Contact*, b2BlockAllocator*)
0013b3bc 00000094 T b2EdgeAndCircleContact::b2EdgeAndCircleContact(b2Fixture*, b2Fixture*)
0013b3bc 00000094 T b2EdgeAndCircleContact::b2EdgeAndCircleContact(b2Fixture*, b2Fixture*)
0013b450 00000038 T b2EdgeAndCircleContact::Create(b2Fixture*, int, b2Fixture*, int, b2BlockAllocator*)
0013b488 00000004 W b2EdgeAndPolygonContact::~b2EdgeAndPolygonContact()
0013b488 00000004 W b2EdgeAndPolygonContact::~b2EdgeAndPolygonContact()
0013b48c 00000014 W b2EdgeAndPolygonContact::~b2EdgeAndPolygonContact()
0013b4a0 00000034 T b2EdgeAndPolygonContact::Evaluate(b2Manifold*, b2Transform const&, b2Transform const&)
0013b4d4 00000040 T b2EdgeAndPolygonContact::Destroy(b2Contact*, b2BlockAllocator*)
0013b514 00000094 T b2EdgeAndPolygonContact::b2EdgeAndPolygonContact(b2Fixture*, b2Fixture*)
0013b514 00000094 T b2EdgeAndPolygonContact::b2EdgeAndPolygonContact(b2Fixture*, b2Fixture*)
0013b5a8 00000038 T b2EdgeAndPolygonContact::Create(b2Fixture*, int, b2Fixture*, int, b2BlockAllocator*)
0013b5e0 000000a8 t b2Island::Report(b2ContactVelocityConstraint const*) [clone .part.0]
0013b688 000000b0 T b2Island::b2Island(int, int, int, b2StackAllocator*, b2ContactListener*)
0013b688 000000b0 T b2Island::b2Island(int, int, int, b2StackAllocator*, b2ContactListener*)
0013b738 0000004c T b2Island::~b2Island()
0013b738 0000004c T b2Island::~b2Island()
0013b784 00000634 T b2Island::Solve(b2Profile*, b2TimeStep const&, b2Vec2 const&, bool)
0013bdb8 00000360 T b2Island::SolveTOI(b2TimeStep const&, int, int)
0013c118 00000140 T b2Joint::Destroy(b2Joint*, b2BlockAllocator*)
0013c258 00000004 W b2PolygonAndCircleContact::~b2PolygonAndCircleContact()
0013c258 00000004 W b2PolygonAndCircleContact::~b2PolygonAndCircleContact()
0013c25c 00000014 W b2PolygonAndCircleContact::~b2PolygonAndCircleContact()
0013c270 00000034 T b2PolygonAndCircleContact::Evaluate(b2Manifold*, b2Transform const&, b2Transform const&)
0013c2a4 00000040 T b2PolygonAndCircleContact::Destroy(b2Contact*, b2BlockAllocator*)
0013c2e4 00000094 T b2PolygonAndCircleContact::b2PolygonAndCircleContact(b2Fixture*, b2Fixture*)
0013c2e4 00000094 T b2PolygonAndCircleContact::b2PolygonAndCircleContact(b2Fixture*, b2Fixture*)
0013c378 00000038 T b2PolygonAndCircleContact::Create(b2Fixture*, int, b2Fixture*, int, b2BlockAllocator*)
0013c3b0 00000004 W b2PolygonContact::~b2PolygonContact()
0013c3b0 00000004 W b2PolygonContact::~b2PolygonContact()
0013c3b4 00000014 W b2PolygonContact::~b2PolygonContact()
0013c3c8 00000034 T b2PolygonContact::Evaluate(b2Manifold*, b2Transform const&, b2Transform const&)
0013c3fc 00000040 T b2PolygonContact::Destroy(b2Contact*, b2BlockAllocator*)
0013c43c 00000094 T b2PolygonContact::b2PolygonContact(b2Fixture*, b2Fixture*)
0013c43c 00000094 T b2PolygonContact::b2PolygonContact(b2Fixture*, b2Fixture*)
0013c4d0 00000038 T b2PolygonContact::Create(b2Fixture*, int, b2Fixture*, int, b2BlockAllocator*)
0013c508 000000dc T b2CollideCircles(b2Manifold*, b2CircleShape const*, b2Transform const&, b2CircleShape const*, b2Transform const&)
0013c5e4 0000039c T b2CollidePolygonAndCircle(b2Manifold*, b2PolygonShape const*, b2Transform const&, b2CircleShape const*, b2Transform const&)
0013c980 00000310 T b2CollideEdgeAndCircle(b2Manifold*, b2EdgeShape const*, b2Transform const&, b2CircleShape const*, b2Transform const&)
0013cc90 00000840 T b2CollideEdgeAndPolygon(b2Manifold*, b2EdgeShape const*, b2Transform const&, b2PolygonShape const*, b2Transform const&)
0013d4d0 00000130 t b2FindMaxSeparation(int*, b2PolygonShape const*, b2Transform const&, b2PolygonShape const*, b2Transform const&) [clone .constprop.0]
0013d600 000004c8 T b2CollidePolygons(b2Manifold*, b2PolygonShape const*, b2Transform const&, b2PolygonShape const*, b2Transform const&)
0013dac8 000003e8 T b2WorldManifold::Initialize(b2Manifold const*, b2Transform const&, float, b2Transform const&, float)
0013deb0 00000108 T b2ClipSegmentToLine(b2ClipVertex*, b2ClipVertex const*, b2Vec2 const&, float, int)
0013dfb8 000000b8 T b2TestOverlap(b2Shape const*, int, b2Shape const*, int, b2Transform const&, b2Transform const&)
0013e070 00000004 W b2ChainAndCircleContact::~b2ChainAndCircleContact()
0013e070 00000004 W b2ChainAndCircleContact::~b2ChainAndCircleContact()
0013e074 00000014 W b2ChainAndCircleContact::~b2ChainAndCircleContact()
0013e088 0000008c T b2ChainAndCircleContact::Evaluate(b2Manifold*, b2Transform const&, b2Transform const&)
0013e114 000000b8 T b2ChainAndCircleContact::Create(b2Fixture*, int, b2Fixture*, int, b2BlockAllocator*)
0013e1cc 00000040 T b2ChainAndCircleContact::Destroy(b2Contact*, b2BlockAllocator*)
0013e20c 00000004 W b2ChainAndPolygonContact::~b2ChainAndPolygonContact()
0013e20c 00000004 W b2ChainAndPolygonContact::~b2ChainAndPolygonContact()
0013e210 00000014 W b2ChainAndPolygonContact::~b2ChainAndPolygonContact()
0013e224 0000008c T b2ChainAndPolygonContact::Evaluate(b2Manifold*, b2Transform const&, b2Transform const&)
0013e2b0 000000b8 T b2ChainAndPolygonContact::Create(b2Fixture*, int, b2Fixture*, int, b2BlockAllocator*)
0013e368 00000040 T b2ChainAndPolygonContact::Destroy(b2Contact*, b2BlockAllocator*)
0013e3a8 00000004 W b2CircleContact::~b2CircleContact()
0013e3a8 00000004 W b2CircleContact::~b2CircleContact()
0013e3ac 00000014 W b2CircleContact::~b2CircleContact()
0013e3c0 00000034 T b2CircleContact::Evaluate(b2Manifold*, b2Transform const&, b2Transform const&)
0013e3f4 00000040 T b2CircleContact::Destroy(b2Contact*, b2BlockAllocator*)
0013e434 00000094 T b2CircleContact::b2CircleContact(b2Fixture*, b2Fixture*)
0013e434 00000094 T b2CircleContact::b2CircleContact(b2Fixture*, b2Fixture*)
0013e4c8 00000038 T b2CircleContact::Create(b2Fixture*, int, b2Fixture*, int, b2BlockAllocator*)
0013e500 000002b0 T b2ContactSolver::b2ContactSolver(b2ContactSolverDef*)
0013e500 000002b0 T b2ContactSolver::b2ContactSolver(b2ContactSolverDef*)
0013e7b0 00000024 T b2ContactSolver::~b2ContactSolver()
0013e7b0 00000024 T b2ContactSolver::~b2ContactSolver()
0013e7d4 00000444 T b2ContactSolver::InitializeVelocityConstraints()
0013ec18 00000114 T b2ContactSolver::WarmStart()
0013ed2c 00000570 T b2ContactSolver::SolveVelocityConstraints()
0013f29c 00000068 T b2ContactSolver::StoreImpulses()
0013f304 00000304 W b2PositionSolverManifold::Initialize(b2ContactPositionConstraint*, b2Transform const&, b2Transform const&, int)
0013f608 000002a4 T b2ContactSolver::SolvePositionConstraints()
0013f8ac 000002d8 T b2ContactSolver::SolveTOIPositionConstraints(int, int)
0013fb84 000000b8 T b2ChainShape::GetChildEdge(b2EdgeShape*, int) const
0013fc3c 00000008 T b2EdgeShape::GetChildCount() const
0013fc44 00000008 T b2EdgeShape::TestPoint(b2Transform const&, b2Vec2 const&) const
0013fc4c 00000040 T b2EdgeShape::ComputeMass(b2MassData*, float) const
0013fc8c 00000004 W b2EdgeShape::~b2EdgeShape()
0013fc8c 00000004 W b2EdgeShape::~b2EdgeShape()
0013fc90 000000b8 T b2EdgeShape::Clone(b2BlockAllocator*) const
0013fd48 00000014 W b2EdgeShape::~b2EdgeShape()
0013fd5c 000001cc T b2EdgeShape::RayCast(b2RayCastOutput*, b2RayCastInput const&, b2Transform const&, int) const
0013ff28 000000b0 T b2EdgeShape::ComputeAABB(b2AABB*, b2Transform const&, int) const
0013ffd8 0000005c T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const
00140034 00000014 T __cxxabiv1::__class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
00140048 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
00140048 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
00140068 0000002c T __cxxabiv1::__class_type_info::~__class_type_info()
00140094 00000070 T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
00140104 00000090 T __cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const
00140194 000000f8 T __cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
0014028c 00000004 T operator delete(void*)
00140290 00000004 T operator delete(void*, unsigned int)
00140294 T __cxa_end_cleanup
001402a4 00000138 T __cxa_type_match
001403dc 000000b4 T __cxa_begin_cleanup
00140490 000000b4 T __gnu_end_cleanup
00140544 00000004 T std::exception::~exception()
00140544 00000004 T std::exception::~exception()
00140548 00000004 T std::bad_exception::~bad_exception()
00140548 00000004 T std::bad_exception::~bad_exception()
0014054c 0000000c T transaction clone for std::bad_exception::what() const
0014054c 0000000c T std::bad_exception::what() const
00140558 00000020 T std::bad_exception::~bad_exception()
00140578 00000038 t eh_globals_dtor(void*)
001405b0 00000038 T __cxa_get_globals_fast
001405e8 00000090 T __cxa_get_globals
00140678 00000040 t _GLOBAL__sub_I__ZN17__eh_globals_init7_S_initE
001406b8 00000034 t _GLOBAL__sub_D__ZN17__eh_globals_init7_S_initE
001406ec 00000150 t read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)
0014083c 0000005c t base_of_encoded_value(unsigned char, _Unwind_Context*)
00140898 000000f0 t parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)
00140988 000006c8 T __gxx_personality_v0
00141050 00000014 T __cxxabiv1::__terminate(void (*)())
00141064 00000018 T std::terminate()
0014107c 0000000c T __cxxabiv1::__unexpected(void (*)())
00141088 00000018 T std::unexpected()
001410a0 00000014 T std::get_terminate()
001410b4 00000014 T std::get_unexpected()
001410c8 0000005c T operator new(unsigned int)
00141124 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
00141124 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
00141144 0000002c T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
00141170 00000140 T __cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
001412b0 00000088 T __cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
00141338 00000044 T __cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
0014137c 00000004 T std::type_info::~type_info()
0014137c 00000004 T std::type_info::~type_info()
00141380 00000008 T std::type_info::__is_pointer_p() const
00141380 00000008 T std::type_info::__is_function_p() const
00141388 00000054 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int)
001413dc 00000014 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose()
001413f0 000000c8 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
001414b8 0000000c T std::bad_alloc::what() const
001414c4 00000020 T std::bad_alloc::~bad_alloc()
001414c4 00000020 T std::bad_alloc::~bad_alloc()
001414e4 0000002c T std::bad_alloc::~bad_alloc()
00141510 0000000c W __gnu_cxx::__concurrence_lock_error::what() const
0014151c 0000000c W __gnu_cxx::__concurrence_unlock_error::what() const
00141528 00000020 W __gnu_cxx::__concurrence_lock_error::~__concurrence_lock_error()
00141528 00000020 W __gnu_cxx::__concurrence_lock_error::~__concurrence_lock_error()
00141548 0000002c W __gnu_cxx::__concurrence_lock_error::~__concurrence_lock_error()
00141574 00000020 W __gnu_cxx::__concurrence_unlock_error::~__concurrence_unlock_error()
00141574 00000020 W __gnu_cxx::__concurrence_unlock_error::~__concurrence_unlock_error()
00141594 0000002c W __gnu_cxx::__concurrence_unlock_error::~__concurrence_unlock_error()
001415c0 0000002c W __gnu_cxx::__throw_concurrence_lock_error()
001415ec 0000002c W __gnu_cxx::__throw_concurrence_unlock_error()
00141618 0000012c t (anonymous namespace)::pool::free(void*) [clone .constprop.0]
00141744 000000f0 t (anonymous namespace)::pool::allocate(unsigned int) [clone .constprop.0]
00141834 00000044 T __cxa_allocate_exception
00141878 00000028 T __cxa_free_exception
001418a0 000001a4 t _GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv
00141a44 00000070 t __cxxabiv1::__is_gxx_exception_class(char*)
00141ab4 0000002c T __cxa_call_terminate
00141ae0 00000148 T __cxa_call_unexpected
00141c28 000000e0 T __cxa_begin_catch
00141d08 000000e0 T __cxa_end_catch
00141de8 00000070 t __gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Control_Block*)
00141e58 00000054 T __cxa_init_primary_exception
00141eac 00000054 T __cxa_throw
00141f00 000000b0 T __cxa_rethrow
00141fb0 00000014 T std::get_new_handler()
00141fc4 00000040 T std::__throw_logic_error(char const*)
00142004 00000040 T std::__throw_length_error(char const*)
00142044 00000008 T std::logic_error::what() const
00142044 00000008 T std::runtime_error::what() const
0014204c 00000098 T std::logic_error::~logic_error()
0014204c 00000098 T std::logic_error::~logic_error()
001420e4 00000098 T std::length_error::~length_error()
001420e4 00000098 T std::length_error::~length_error()
0014217c 000000a0 T std::logic_error::~logic_error()
0014221c 000000a0 T std::length_error::~length_error()
001422bc 000000d8 T std::logic_error::logic_error(char const*)
001422bc 000000d8 T std::logic_error::logic_error(char const*)
00142394 00000020 T std::length_error::length_error(char const*)
00142394 00000020 T std::length_error::length_error(char const*)
001423b4 00000088 W std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator<char> const&)
0014243c 00000004 W std::string::_Rep::_M_destroy(std::allocator<char> const&)
00142440 000000c0 T floorf
00142500 00000130 T __udivmoddi4
00142630 00000018 t selfrel_offset31
00142648 00000090 t search_EIT_table
001426d8 00000040 t __gnu_unwind_get_pr_addr
00142718 00000110 t get_eit_entry
00142828 00000088 t restore_non_core_regs
001428b0 00000014 t _Unwind_decode_typeinfo_ptr.constprop.0
001428c4 00000004 t _Unwind_DebugHook
001428c8 00000064 t unwind_phase2
0014292c 0000013c t unwind_phase2_forced
00142a68 000000a4 T __gnu_Unwind_RaiseException
00142b0c 00000020 T __gnu_Unwind_ForcedUnwind
00142b2c 00000074 T __gnu_Unwind_Resume
00142ba0 00000020 T __gnu_Unwind_Resume_or_Rethrow
00142bc0 00000004 T _Unwind_Complete
00142bc4 00000018 T _Unwind_DeleteException
00142bdc 00000064 T _Unwind_VRS_Get
00142c40 0000002c t _Unwind_GetGR
00142c6c 00000064 T _Unwind_VRS_Set
00142cd0 0000002c t _Unwind_SetGR
00142cfc 000000c0 T __gnu_Unwind_Backtrace
00142dbc 0000040c t __gnu_unwind_pr_common
001431c8 00000008 T __aeabi_unwind_cpp_pr0
001431d0 00000008 W __aeabi_unwind_cpp_pr1
001431d8 00000008 W __aeabi_unwind_cpp_pr2
001431e0 00000458 T _Unwind_VRS_Pop
00143638 00000064 t next_unwind_byte
0014369c 0000002c t _Unwind_GetGR.constprop.0
001436c8 00000004 t unwind_UCB_from_context
001436cc 00000464 T __gnu_unwind_execute
00143b30 00000048 T __gnu_unwind_frame
00143b78 00000010 T _Unwind_GetRegionStart
00143b88 0000001c T _Unwind_GetLanguageSpecificData
00143ba4 00000008 T _Unwind_GetDataRelBase
00143bac 00000008 T _Unwind_GetTextRelBase
00143bb4 000000d8 T strncmp
00143c8c 00000140 T strchr
00143dcc 00000024 T getenv
00143df0 0000016c T memmove
00143f5c 0000005c T __assert_func
00143fb8 00000144 T _fclose_r
001440fc 00000020 T fclose
0014411c 0000003c T fprintf
00144158 0000008c T strlen
001441e4 0000003c T fiprintf
00144220 000000d8 T memcmp
001442f8 0000001c t stdio_exit_handler
00144314 0000005c t cleanup_stdio
00144370 00000154 t global_stdio_init.part.0
001444c4 00000138 T __sfp
001445fc 0000005c T __sinit
00144658 0000000c T __sfp_lock_acquire
00144664 0000000c T __sfp_lock_release
00144670 000001ec t _strtoul_l.isra.0
0014485c 0000003c T strtoul
00144898 00000084 T __libc_init_array
0014491c 00000588 T _fseeko_r
00144ea4 00000030 T fseeko
00144ed4 0000009c T strncat
00144f70 00000070 T _fwalk_sglue
00144fe0 00000078 T bsearch
00145058 0000000c T __errno
00145064 00000028 T calloc
0014508c 000008e8 T qsort
00145974 00000014 T abort
00145988 000000e0 T _puts_r
00145a68 00000020 T puts
00145a88 000005e0 t get_arg
00146068 00003554 T _vfprintf_r
001495bc 000000b4 t __sbprintf
00149670 000000d8 T _calloc_r
00149748 00000028 T realloc
00149770 0000001c T _fseek_r
0014978c 00000028 T memalign
001497b4 0000082c T _malloc_r
00149fe0 000000e8 T memchr
0014a0c8 000001c0 t quorem
0014a288 000013f0 T _dtoa_r
0014b678 000000a0 T _wcrtomb_r
0014b718 00000114 T _malloc_trim_r
0014b82c 00000314 T _free_r
0014bb40 00000034 T printf
0014bb74 000000b8 T __sflags
0014bc2c 0000003c T __memcpy_chk
0014bc68 0000003c T strnlen
0014bca4 00000040 T malloc
0014bce4 00000020 T free
0014bd04 0000022c T __sflush_r
0014bf30 000000c4 T _fflush_r
0014bff4 00000044 T fflush
0014c038 00000048 T time
0014c080 00000038 t lflush
0014c0b8 000001a8 T __srefill_r
0014c260 00000164 T __smakebuf_r
0014c3c4 00000090 T __swhatbuf_r
0014c454 000000dc T _findenv_r
0014c530 000000e4 T memset
0014c614 000004f0 T _realloc_r
0014cb04 00000334 T _fread_r
0014ce38 00000038 T fread
0014ce70 0000000c T __malloc_lock
0014ce7c 0000000c T __malloc_unlock
0014ce88 000001c4 T _ftello_r
0014d04c 00000020 T ftello
0014d06c 00000004 W __call_exitprocs
0014d070 00000030 T exit
0014d0a0 00000294 T setvbuf
0014d334 00000134 T _fopen_r
0014d468 00000028 T fopen
0014d490 00000020 T close
0014d4b0 000000d4 T strncpy
0014d584 0000012c T memcpy
0014d6b0 00000028 T _wcsrtombs_r
0014d6d8 00000140 T __swsetup_r
0014d818 00000088 T frexp
0014d8a0 000004a4 T __sfvwrite_r
0014dd44 00000044 T __sread
0014dd88 00000068 T __swrite
0014ddf0 00000040 T __sseek
0014de30 00000008 T __sclose
0014de38 0000009c T _raise_r
0014ded4 00000020 T raise
0014def4 0000000c T __env_lock
0014df00 0000000c T __env_unlock
0014df0c 00000088 T _Balloc
0014df94 0000001c T _Bfree
0014dfb0 000000f4 T __multadd
0014e0a4 00000080 T __hi0bits
0014e124 000000f0 T __lo0bits
0014e214 000000a4 T __i2b
0014e2b8 00000230 T __multiply
0014e4e8 00000130 T __pow5mult
0014e618 00000138 T __lshift
0014e750 00000058 T __mcmp
0014e7a8 00000218 T __mdiff
0014e9c0 00000120 T __d2b
0014eae0 00000024 T __locale_mb_cur_max
0014eb04 00000058 T __chk_fail
0014eb5c 000005e0 t get_arg
0014f13c 000022f8 T _vfiprintf_r
00151434 000000b4 t __sbprintf
001514e8 0000016c T _memalign_r
00151654 0000015c T _wcsnrtombs_l
001517b0 00000064 T _wcsnrtombs_r
00151814 00000340 T __utf8_mbtowc
00151b54 00000030 T __sprint_r
00151b84 00000024 T _localeconv_r
00151ba8 0000003c T __libc_fini_array
00151be4 000000f8 T __utf8_wctomb
00151cdc 00000030 T write
00151d0c 00000020 T _exit
00151d2c 00000140 T chdir
00151e6c 000001c8 T _concatenate_path
00152034 0000009c T _fstat_r
001520d0 00000014 T _getpid_r
001520e4 0000002c T __getreent
00152110 00000030 T _gettimeofday_r
00152140 000000a0 T __release_handle
001521e0 000000b0 T __alloc_handle
00152290 00000058 T __get_handle
001522e8 0000016c T dup2
00152454 00000110 T _close_r
00152564 00000008 t null_write
0015256c 00000018 T setDefaultDevice
00152584 000000c4 T FindDevice
00152648 00000028 T RemoveDevice
00152670 00000098 T AddDevice
00152708 00000020 T GetDeviceOpTab
00152728 00000008 T _isatty_r
00152730 00000014 T _kill_r
00152744 00000094 T _lseek_r
001527d8 000000c0 T _open_r
00152898 00000094 T _read_r
0015292c 00000078 W _sbrk_r
001529a4 0000001c T __libc_lock_acquire
001529c0 0000001c T __libc_lock_release
001529dc 0000001c T __libc_lock_acquire_recursive
001529f8 0000001c T __libc_lock_release_recursive
00152a14 00000094 T _write_r
00152aa8 00000048 T strrchr
00152af0 T _fini
00153008 00000018 r CSWTCH.31
001531b8 r .LC6
001531c0 r .LC7
00153fd4 r .LC2
00157204 00000008 r s_defaultTint.0
0015720c R render2d_shbin
00157398 R render2d_shbin_end
00157398 R render2d_shbin_size
0015739c 00000004 r depthFmtSizes
001573a0 00000005 r colorFmtSizes
001573a8 00000010 r CSWTCH.11
001573b8 00000038 r CSWTCH.19
001573f0 00000080 r romFS_devoptab
0015747c 00000011 r dsp_filename.0
001574ac 00000008 r morton_y.2
001574b4 00000008 r morton_x.3
001574bc 00000008 r s_sleepWakeEvents.4
001574c4 0000000c r serviceNameTable.5
001574f4 0000004d r _net_error_code_map
00157544 00000030 r error_table
00157574 00000080 r archive_devoptab
001575f4 00000010 r OP_FCOEF_A
00157604 00000010 r OP_FCOEF_B
00157614 00000180 r OP_STEREO_DOWNMIX
00157794 00000010 r OP_FILE_CALLBACKS
001577a4 00000060 R __inv_pio4
00157808 000000e0 R __sincosf_table
001578e8 00000008 r TWO23
001578f0 00002000 r crc_lookup
001598f0 00000014 r CSWTCH.81
00159904 00000024 r gains.8759
00159928 00000020 R tf_select_table
00159948 00000004 r spread_icdf
0015994c 00000003 r tapset_icdf
00159950 0000000b r trim_icdf
0015995c 00000020 r correction.6326
0015997c 000000e7 r band_allocation
00159a64 00000188 r cache_bits50
00159bec 000000a8 r cache_caps50
00159c94 000000d2 r cache_index50
00159d68 0000002c r eband5ms
00159d94 000000f0 r fft_bitrev120
00159e84 000001e0 r fft_bitrev240
0015a064 000003c0 r fft_bitrev480
0015a424 00000078 r fft_bitrev60
0015a49c 00000038 r fft_state48000_960_0
0015a4d4 00000038 r fft_state48000_960_1
0015a50c 00000038 r fft_state48000_960_2
0015a544 00000038 r fft_state48000_960_3
0015a57c 00000f00 r fft_twiddles48000_960
0015b47c 0000002a r logN400
0015b4a8 00001c20 r mdct_twiddles960
0015d0c8 0000006c r mode48000_960_120
0015d134 000001e0 r window120
0015d314 00000010 r beta_coef
0015d324 00000064 R eMeans
0015d388 00000150 r e_prob_model
0015d4d8 00000010 r pred_coef
0015d4e8 00000003 r small_energy_icdf
0015d4ec 00000018 r LOG2_FRAC_TABLE
0015d504 0000000c r SPREAD_FACTOR.8617
0015d510 00000003 r silk_LBRR_flags_2_iCDF
0015d514 00000007 r silk_LBRR_flags_3_iCDF
0015d51c 00000008 R silk_LBRR_flags_iCDF_ptr
0015d524 00000006 R silk_LTPScales_table_Q14
0015d52c 00000003 R silk_LTPscale_iCDF
0015d530 00000007 R silk_NLSF_EXT_iCDF
0015d538 00000005 R silk_NLSF_interpolation_factor_iCDF
0015d540 00000008 R silk_Quantization_Offsets_Q10
0015d548 00000002 R silk_lsb_iCDF
0015d54c 00000002 R silk_stereo_only_code_mid_iCDF
0015d550 00000019 R silk_stereo_pred_joint_iCDF
0015d56c 00000020 R silk_stereo_pred_quant_Q13
0015d58c 00000004 R silk_type_offset_VAD_iCDF
0015d590 00000002 R silk_type_offset_no_VAD_iCDF
0015d594 00000003 R silk_uniform3_iCDF
0015d598 00000004 R silk_uniform4_iCDF
0015d59c 00000005 R silk_uniform5_iCDF
0015d5a4 00000006 R silk_uniform6_iCDF
0015d5ac 00000008 R silk_uniform8_iCDF
0015d5b4 0000000f r delay_matrix_dec
0015d5c4 0000000f r delay_matrix_enc
0015d5d4 0000001c R silk_Resampler_1_2_COEFS
0015d5f0 00000028 R silk_Resampler_1_3_COEFS
0015d618 00000028 R silk_Resampler_1_4_COEFS
0015d640 00000028 R silk_Resampler_1_6_COEFS
0015d668 00000028 R silk_Resampler_2_3_COEFS
0015d690 0000003a R silk_Resampler_3_4_COEFS
0015d6cc 00000060 R silk_resampler_frac_FIR_12
0015d72c 00000010 r bit_deinterleave_table.9138
0015d73c 00000010 r bit_interleave_table.9128
0015d74c 00000010 r exp2_table8.8969
0015d75c 00000078 r ordery_table
0015d7d4 000013e0 r CELT_PVQ_U_DATA
0015ebb4 0000003c r CELT_PVQ_U_ROW
0015ebf0 00000004 r HARM_ATT_Q15
0015ebf4 00000004 r PLC_RAND_ATTENUATE_UV_Q15
0015ebf8 00000004 r PLC_RAND_ATTENUATE_V_Q15
0015ebfc 00000029 R silk_delta_gain_iCDF
0015ec28 00000018 R silk_gain_iCDF
0015ec40 00000008 r silk_LTP_gain_iCDF_0
0015ec48 00000010 r silk_LTP_gain_iCDF_1
0015ec58 00000020 r silk_LTP_gain_iCDF_2
0015ec78 0000000c R silk_LTP_gain_iCDF_ptrs
0015ec84 00000028 r silk_LTP_gain_vq_0
0015ecac 00000050 r silk_LTP_gain_vq_1
0015ecfc 000000a0 r silk_LTP_gain_vq_2
0015ed9c 00000003 R silk_LTP_per_index_iCDF
0015eda0 0000000c R silk_LTP_vq_ptrs_Q7
0015edac 00000140 r silk_NLSF_CB1_NB_MB_Q8
0015eeec 00000280 r silk_NLSF_CB1_Wght_Q9
0015f16c 00000040 r silk_NLSF_CB1_iCDF_NB_MB
0015f1ac 00000048 r silk_NLSF_CB2_BITS_NB_MB_Q5
0015f1f4 000000a0 r silk_NLSF_CB2_SELECT_NB_MB
0015f294 00000048 r silk_NLSF_CB2_iCDF_NB_MB
0015f2dc 00000028 R silk_NLSF_CB_NB_MB
0015f304 00000016 r silk_NLSF_DELTA_MIN_NB_MB_Q15
0015f31c 00000012 r silk_NLSF_PRED_NB_MB_Q8
0015f330 00000200 r silk_NLSF_CB1_WB_Q8
0015f530 00000400 r silk_NLSF_CB1_WB_Wght_Q9
0015f930 00000040 r silk_NLSF_CB1_iCDF_WB
0015f970 00000048 r silk_NLSF_CB2_BITS_WB_Q5
0015f9b8 00000100 r silk_NLSF_CB2_SELECT_WB
0015fab8 00000048 r silk_NLSF_CB2_iCDF_WB
0015fb00 00000028 R silk_NLSF_CB_WB
0015fb28 00000022 r silk_NLSF_DELTA_MIN_WB_Q15
0015fb4c 0000001e r silk_NLSF_PRED_WB_Q8
0015fb6c 00000003 R silk_pitch_contour_10_ms_NB_iCDF
0015fb70 0000000c R silk_pitch_contour_10_ms_iCDF
0015fb7c 0000000b R silk_pitch_contour_NB_iCDF
0015fb88 00000022 R silk_pitch_contour_iCDF
0015fbac 00000015 R silk_pitch_delta_iCDF
0015fbc4 00000020 R silk_pitch_lag_iCDF
0015fbe4 000000b4 R silk_pulses_per_block_iCDF
0015fc98 00000012 R silk_rate_levels_iCDF
0015fcac 00000098 R silk_shell_code_table0
0015fd44 00000098 R silk_shell_code_table1
0015fddc 00000098 R silk_shell_code_table2
0015fe74 00000098 R silk_shell_code_table3
0015ff0c 00000011 R silk_shell_code_table_offsets
0015ff20 0000002a R silk_sign_iCDF
0015ff4c 0000000a r ordering10.8179
0015ff58 00000010 r ordering16.8178
0015ff68 0000002c R silk_CB_lags_stage2
0015ff94 00000006 R silk_CB_lags_stage2_10_ms
0015ff9c 00000088 R silk_CB_lags_stage3
00160024 00000018 R silk_CB_lags_stage3_10_ms
0016003c 00000102 R silk_LSFCosTab_FIX_Q12
00160140 00000080 r npio2_hw
001601c0 00000108 r two_over_pi
001602c8 00000040 r PIo2
00160308 00000010 r init_jk
00160318 00000870 R __exp_data
00160b88 00000009 V typeinfo name for b2Shape
00160b94 00000008 V typeinfo for b2Shape
00160b9c 0000000c R typeinfo for b2PolygonShape
00160ba8 00000011 R typeinfo name for b2PolygonShape
00160bbc 00000028 R vtable for b2PolygonShape
00160be4 00000038 r b2_blockSizes
00160c1c 00000014 V typeinfo name for b2ContactListener
00160c30 00000008 V typeinfo for b2ContactListener
00160c38 00000020 V vtable for b2ContactListener
00160c58 00000008 R typeinfo for b2ContactFilter
00160c60 00000012 R typeinfo name for b2ContactFilter
00160c74 00000014 R vtable for b2ContactFilter
00160c88 0000000b V typeinfo name for b2Contact
00160c94 00000008 V typeinfo for b2Contact
00160c9c 00000014 V vtable for b2Contact
00160cb0 0000000c R typeinfo for b2EdgeAndCircleContact
00160cbc 00000019 R typeinfo name for b2EdgeAndCircleContact
00160cd8 00000014 R vtable for b2EdgeAndCircleContact
00160cec 0000000c R typeinfo for b2EdgeAndPolygonContact
00160cf8 0000001a R typeinfo name for b2EdgeAndPolygonContact
00160d14 00000014 R vtable for b2EdgeAndPolygonContact
00160d28 0000000c R typeinfo for b2PolygonAndCircleContact
00160d34 0000001c R typeinfo name for b2PolygonAndCircleContact
00160d50 00000014 R vtable for b2PolygonAndCircleContact
00160d64 0000000c R typeinfo for b2PolygonContact
00160d70 00000013 R typeinfo name for b2PolygonContact
00160d84 00000014 R vtable for b2PolygonContact
00160d98 0000000c R typeinfo for b2ChainAndCircleContact
00160da4 0000001a R typeinfo name for b2ChainAndCircleContact
00160dc0 00000014 R vtable for b2ChainAndCircleContact
00160dd4 0000000c R typeinfo for b2ChainAndPolygonContact
00160de0 0000001b R typeinfo name for b2ChainAndPolygonContact
00160dfc 00000014 R vtable for b2ChainAndPolygonContact
00160e10 0000000c R typeinfo for b2CircleContact
00160e1c 00000012 R typeinfo name for b2CircleContact
00160e30 00000014 R vtable for b2CircleContact
00160e44 0000000c R typeinfo for b2EdgeShape
00160e50 0000000e R typeinfo name for b2EdgeShape
00160e60 00000028 R vtable for b2EdgeShape
00160e88 00000022 R typeinfo name for __cxxabiv1::__class_type_info
00160eac 0000000c R typeinfo for __cxxabiv1::__class_type_info
00160eb8 0000002c R vtable for __cxxabiv1::__class_type_info
00160ee4 0000000d R typeinfo name for std::exception
00160ef4 00000008 R typeinfo for std::exception
00160efc 00000012 R typeinfo name for std::bad_exception
00160f10 0000000c R typeinfo for std::bad_exception
00160f1c 00000020 R typeinfo name for __cxxabiv1::__forced_unwind
00160f3c 00000008 R typeinfo for __cxxabiv1::__forced_unwind
00160f44 00000024 R typeinfo name for __cxxabiv1::__foreign_exception
00160f68 00000008 R typeinfo for __cxxabiv1::__foreign_exception
00160f70 00000014 R vtable for std::bad_exception
00160f98 00000025 R typeinfo name for __cxxabiv1::__si_class_type_info
00160fc0 0000000c R typeinfo for __cxxabiv1::__si_class_type_info
00160fcc 0000002c R vtable for __cxxabiv1::__si_class_type_info
00160ff8 0000000d R typeinfo name for std::type_info
00161008 00000008 R typeinfo for std::type_info
00161010 0000000d R typeinfo name for std::bad_alloc
00161020 0000000c R typeinfo for std::bad_alloc
0016102c 00000014 R vtable for std::bad_alloc
00161040 00000027 V typeinfo name for __gnu_cxx::__concurrence_lock_error
00161068 0000000c V typeinfo for __gnu_cxx::__concurrence_lock_error
00161074 00000029 V typeinfo name for __gnu_cxx::__concurrence_unlock_error
001610a0 0000000c V typeinfo for __gnu_cxx::__concurrence_unlock_error
001610ac 00000014 V vtable for __gnu_cxx::__concurrence_lock_error
001610c0 00000014 V vtable for __gnu_cxx::__concurrence_unlock_error
001610d4 00000010 R typeinfo name for std::logic_error
001610e4 0000000c R typeinfo for std::logic_error
001610f0 00000011 R typeinfo name for std::length_error
00161104 0000000c R typeinfo for std::length_error
00161110 00000014 R vtable for std::logic_error
00161124 00000014 R vtable for std::length_error
00161278 00000010 r zeroes.0
00161288 00000010 r blanks.1
001612a0 00000101 R _ctype_
001613a4 0000006c R __action_table
00161410 0000006c R __state_table
0016147c 00000100 R __chclass
0016157c 0000000c r p05.0
00161588 00000028 R __mprec_bigtens
001615b0 000000c8 R __mprec_tens
00161764 00000010 r zeroes.0
00161774 00000010 r blanks.1
00161784 00000080 R dotab_stdnull
00161804 R __tdata_align
00161808 r __EH_FRAME_BEGIN__
00161ad4 R __exidx_start
00162094 R __exidx_end
00163000 00000001 D redrawTop
00163001 00000001 D redrawBottom
00163004 00000004 D bartphase
00163008 00000008 d framerateCounter
00163010 00000004 d framerate
00163014 00000004 d sock
00163018 00000004 d queueLock
0016301c 00000004 d aptChainloadDeliverArgSize
00163020 00000004 d kCount
00163024 00000004 d kInterval
00163028 00000004 d kDelay
0016302c 00000080 d soc_devoptab
001630ac W __stacksize__
001630b0 00000004 D b2_defaultFilter
001630b4 00000004 D b2_defaultListener
001630b8 00000001 D g_blockSolve
001630bc 00000004 D __cxxabiv1::__unexpected_handler
001630c0 00000004 D __cxxabiv1::__terminate_handler
001630c4 0000000c D __sglue
001630d0 00000004 D __malloc_sbrk_base
001630d4 00000004 D __malloc_trim_threshold
001630d8 00000408 D __malloc_av_
001634e0 00000004 D _impure_ptr
001634e8 00000140 D _impure_data
00163628 0000016c D __global_locale
00163794 00000004 D environ
00163798 00000400 d _current_working_directory
00163b98 00001000 d handles
00164b98 0000000c d __stderr_handle
00164ba4 0000000c d __stdout_handle
00164bb0 0000000c d __stdin_handle
00164bbc 0000008c D devoptab_list
00164c48 00000004 d defaultDevice
00164c54 d _GLOBAL_OFFSET_TABLE_
00164c60 d __frame_dummy_init_array_entry
00164c60 D __init_array_start
00164c60 B __preinit_array_end
00164c60 B __preinit_array_start
00164c60 D __tdata_lma
00164c60 D __tdata_lma_end
00164c78 d __do_global_dtors_aux_fini_array_entry
00164c78 D __fini_array_start
00164c78 D __init_array_end
00164c80 D __bss_start__
00164c80 D __fini_array_end
00164c80 00000004 b opusFile
00164c84 00000001 b quit
00164c88 00000008 b audioEvent
00164c90 00000048 b waveBufs
00164cd8 00000004 b audioThreadId
00164cdc 00000004 b audioBuf
00164ce0 00000008 b lastTime
00164ce8 00000004 b deltaTime
00164cf0 00000020 B scenemanager
00164d10 00000004 b SOC_buffer
00164d14 00000004 b font
00164d18 0000002c B startButton
00164d44 0000002c B howtoplayButton
00164d70 00000044 b spriteManager
00164db8 00000078 B mainmenuSprites
00164e30 00000004 B touch
00164e34 00000004 B gamestate
00164e38 00000004 b world
00164e3c 00000004 b playerBody
00164e40 b completed.1
00164e44 b object.0
00164e60 000005a8 B __C2Di_Context
00165408 00000040 b s_projBot
00165448 00000040 b s_projTop
00165488 00000004 b uLoc_mdlvMtx
0016548c 00000004 b uLoc_projMtx
00165490 00000004 b s_glyphSheets
00165494 00000004 b s_textScale
00165498 0000000c b hookCookie
001654a8 000002d0 B __C3D_Context
00165778 00000004 b frameEndCbData
0016577c 00000004 b frameEndCb
00165780 00000008 b frameCounter
00165788 00000001 b isTopStereo
00165789 00000001 b needSwapBot
0016578a 00000001 b needSwapTop
0016578b 00000001 b measureGpuTime
0016578c 00000001 b inSafeTransfer
0016578d 00000001 b inFrame
00165790 00000010 b cpuTime
001657a0 00000010 b gpuTime
001657b0 0000000c b linkedTarget
001657bc 00000004 b lastTarget
001657c0 00000004 b firstTarget
001657c4 00000008 b C3Di_IVUnifEverDirty
001657cc 000000c0 b C3Di_FVUnifEverDirty
0016588c 00000018 b C3Di_ShaderFVecData
001658a4 00000002 B C3D_BoolUnifsDirty
001658a8 00000008 B C3D_IVUnifDirty
001658b0 000000c0 B C3D_FVUnifDirty
00165970 00000004 B C3D_BoolUnifs
00165974 00000020 B C3D_IVUnif
00165994 00000c00 B C3D_FVUnif
00166598 00000008 b sLinearPool
001665a0 0000000c b sAddrMap
001665b0 00000008 b sVramPoolB
001665b8 00000008 b sVramPoolA
001665c0 0000000c b sAddrMap
001665cc 00000004 B __3dslink_host
001665d0 00000004 b sharedFontAddr
001665d4 00000004 B g_sharedFont
001665d8 00000004 b screenAlloc
001665dc 00000004 b screenFree
001665e0 00000002 b gfxIsDoubleBuf
001665e4 00000002 b gfxCurBuf
001665e6 00000001 b gfxIsVram
001665e7 00000001 b gfxTopMode
001665e8 00000002 b gfxFramebufferFormats
001665ec 00000004 b gfxBottomFramebufferMaxSize
001665f0 00000004 b gfxTopFramebufferMaxSize
001665f8 00000008 b gfxBottomFramebuffers
00166600 00000008 b gfxTopFramebuffers
00166608 00000001 V __ctru_speedup
0016660c 00000004 b romfs_mount_list
00166610 00000004 V __romfs_path
00166614 00000004 b arbiter
00166618 00000004 B gpuCmdBufOffset
0016661c 00000004 B gpuCmdBufSize
00166620 00000004 B gpuCmdBuf
00166624 00000004 b boundQueue
00166628 00000001 b shouldStop
00166629 00000001 b isRunning
0016662a 00000001 b isActive
0016662c 00000004 b curQueue
00166630 00000004 b ndspRefCount
00166634 00000048 b ndspMaster
0016667c 00000004 b ndspThread
00166680 00000001 b ndspThreadRun
00166684 00001080 b dspVar5Backup
00167704 00000004 b ndspMutex
00167708 00000008 b sleepEvent
00167710 00000004 b dspSem
00167714 00000004 b irqEvent
00167718 00000008 b ndspHookCookie
00167720 00000001 b componentFree
00167722 00000002 b componentDataMask
00167724 00000002 b componentProgMask
00167728 00000004 b componentSize
0016772c 00000004 b componentBin
00167730 00000004 b frameCount
00167734 00000004 b droppedFrames
00167738 00000001 b bCancelReceived
00167739 00000001 b bSleeping
0016773a 00000001 b bEnteringSleep
0016773b 00000001 b bDspReady
0016773c 00000080 B ndspVars
001677bc 00000002 B ndspBufferId
001677be 00000002 B ndspBufferCurId
001677c0 00000002 B ndspFrameId
001677c8 00000c60 b ndspChn
00168428 00000001 b flagValue.0
00168429 00000001 b flagInit.1
0016842c 00000004 b serviceName.6
00168430 00000001 b aptChainloadFlags
00168431 00000001 b aptChainloadMediatype
00168434 00000020 b aptChainloadHmac
00168454 00000300 b aptChainloadDeliverArg
00168758 00000008 b aptChainloadTid
00168760 00001000 b aptParameters
00169760 00000004 b aptFlags
00169764 00000001 b aptHomeButtonState
00169768 00000004 b aptMessageFuncData
0016976c 00000004 b aptMessageFunc
00169770 0000000c b aptFirstHook
0016977c 00000001 b aptEventHandlerThreadQuit
00169780 00000004 b aptEventHandlerThread
00169784 00000008 b aptSleepEvent
0016978c 00000008 b aptReceiveEvent
00169794 00000008 b aptEvents
0016979c 00000004 b aptLockHandle
001697a0 00000004 b aptRefCount
001697a4 00000004 b cfguRefCount
001697a8 00000004 b cfguHandle
001697ac 00000002 b dspSavedCompDataMask
001697ae 00000002 b dspSavedCompProgMask
001697b0 00000004 b dspSavedCompSize
001697b4 00000004 b dspSavedCompBin
001697b8 00000001 b dspSleeping
001697b9 00000001 b dspComponentLoaded
001697bc 00000008 b dspFirstHook
001697c4 00000004 b dspRefCount
001697c8 00000004 b dspHandle
001697d0 00000080 b fsExemptArchives
00169850 00000004 b fsuRefCount
00169854 00000004 b fsuHandle
00169858 00000007 b gspEventCbOneShot
00169860 0000001c b gspEventCbData
0016987c 0000001c b gspEventCb
00169898 00000038 b gspEvents
001698d0 00000004 b gspLastEvent
001698d4 00000001 b gspRunEvents
001698d8 00000004 b gspEventThread
001698dc 00000004 b gspEvent
001698e0 00000001 b gspGpuRight
001698e1 00000001 b gspThreadId
001698e4 00000004 b gspSharedMem
001698e8 00000004 b gspSharedMemHandle
001698ec 00000004 b gspRefCount
001698f0 00000004 b gspGpuHandle
001698f4 00000001 b usingIrrst
001698f8 00000004 b hidRefCount
001698fc 00000006 b gRate
00169904 00000006 b aVec
0016990c 00000004 b cPos
00169910 00000004 b tPos
00169914 00000004 b kRepeat
00169918 00000004 b kUp
0016991c 00000004 b kDown
00169920 00000004 b kHeld
00169924 00000004 b kOld
00169928 00000004 B hidSharedMem
0016992c 00000014 B hidEvents
00169940 00000004 B hidMemHandle
00169944 00000004 B hidHandle
00169948 00000004 b irrstRefCount
0016994c 00000004 b csPos
00169950 00000004 b kHeld
00169954 00000004 B irrstSharedMem
00169958 00000004 B irrstEvent
0016995c 00000004 B irrstMemHandle
00169960 00000004 B irrstHandle
00169964 00000004 b ptmSysmRefCount
00169968 00000004 b ptmSysmHandle
0016996c 00000004 V __ctru_linear_heap_size
00169970 00000004 V __ctru_heap_size
00169974 00000004 B __ctru_linear_heap
00169978 00000004 B __ctru_heap
0016997c 00000004 B __system_retAddr
00169980 00000004 B __system_argv
00169984 00000004 B __system_argc
00169988 b saved_stack
00169990 00000004 b srvRefCount
00169994 00000004 b srvHandle
00169998 00000004 b currentAddr
0016999c 00000004 b maxAddr
001699a0 00000004 b minAddr
001699a4 00000004 b srvPmHandle
001699a8 00000004 B socMemhandle
001699ac 00000004 B SOCU_handle
001699b0 000005c0 b archive_devices
00169f70 00000004 b archive_device_cwd
00169f74 00000001 b archive_initialized
00169f78 00000281 b b2_sizeMap
0016a1fc 00000004 B b2_gjkCalls
0016a200 00000004 B b2_gjkIters
0016a204 00000004 B b2_gjkMaxIters
0016a208 00000004 B b2_toiCalls
0016a20c 00000004 B b2_toiIters
0016a210 00000004 B b2_toiMaxIters
0016a214 00000004 B b2_toiMaxRootIters
0016a218 00000004 B b2_toiMaxTime
0016a21c 00000004 B b2_toiRootIters
0016a220 00000004 B b2_toiTime
0016a224 00000008 B b2Vec2_zero
0016a22c 000000c0 B b2Contact::s_registers
0016a2ec 00000001 B b2Contact::s_initialized
0016a2f0 00000004 b init
0016a2f4 00000001 B __eh_globals_init::_S_init
0016a2f8 0000000c b (anonymous namespace)::eh_globals
0016a308 0000001c b (anonymous namespace)::emergency_pool
0016a324 00000004 b (anonymous namespace)::__new_handler
0016a328 00000010 V std::string::_Rep::_S_empty_rep_storage
0016a338 0000000c b __sfp_recursive_mutex
0016a348 00000168 B __sf
0016a4b0 00000004 B __stdio_exit_handler
0016a4b4 00000028 B __malloc_current_mallinfo
0016a4dc 00000004 B __malloc_max_total_mem
0016a4e0 00000004 B __malloc_max_sbrked_mem
0016a4e4 00000004 B __malloc_top_pad
0016a4e8 0000000c b __malloc_recursive_mutex
0016a4f4 0000000c b __env_recursive_mutex
0016a500 00000004 b initial_env
0016a504 00000400 b temp_cwd
0016a904 00000004 b __hndl_lock
0016a908 00000004 B fake_heap_start
0016a90c 00000004 B fake_heap_end
0016a910 00000004 b heap_start.0
0016a914 B __tls_start
0016b51c B __bss_end__
0016b51c A __end__
0016b51c B __tls_end
