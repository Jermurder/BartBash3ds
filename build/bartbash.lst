         w __deregister_frame_info
         w __gnu_Unwind_Find_exidx
         w __register_frame_info
         w pthread_cancel
         w pthread_getspecific
         w pthread_key_create
         w pthread_key_delete
         w pthread_mutex_lock
         w pthread_mutex_unlock
         w pthread_setspecific
         w userAppExit
         w userAppInit
00000000 00000802 B __ctru_dev_utf16_buf
00000000 A __sync_synchronize
00000000 b _TLS_MODULE_BASE_
00000000 a shift
00000000 a shift
00000804 00000401 B __ctru_dev_path_buf
00100000 A __start__
00100000 T _start
00100008 T __service_ptr
0010000c T __apt_appid
00100010 T __heap_size
00100014 T __linear_heap_size
00100018 T __system_arglist
0010001c T __system_runflags
00100020 t startup
00100058 t ClearMem
0010006c t ClrLoop
00100094 T _init
001000ac t .udivsi3_skip_div0_test
001000ac T __aeabi_uidiv
001000ac 000001ec T __udivsi3
00100298 00000020 T __aeabi_uidivmod
001002b8 T __aeabi_idiv
001002b8 00000220 T __divsi3
001002c0 t .divsi3_skip_div0_test
001004d8 00000020 T __aeabi_idivmod
001004f8 00000004 W __aeabi_idiv0
001004f8 00000004 W __aeabi_ldiv0
001004fc T __aeabi_drsub
00100504 000002b0 T __aeabi_dsub
00100504 000002b0 T __subdf3
00100508 000002ac T __adddf3
00100508 000002ac T __aeabi_dadd
001007b4 00000024 T __aeabi_ui2d
001007b4 00000024 T __floatunsidf
001007d8 00000028 T __aeabi_i2d
001007d8 00000028 T __floatsidf
00100800 00000048 T __aeabi_f2d
00100800 00000048 T __extendsfdf2
00100848 00000074 T __aeabi_ul2d
00100848 00000074 T __floatundidf
0010085c 00000060 T __aeabi_l2d
0010085c 00000060 T __floatdidf
001008bc 0000019c T __aeabi_frsub
001008c4 00000194 T __aeabi_fsub
001008c4 00000194 T __subsf3
001008c8 00000190 T __addsf3
001008c8 00000190 T __aeabi_fadd
00100a58 00000028 T __aeabi_ui2f
00100a58 00000028 T __floatunsisf
00100a60 00000020 T __aeabi_i2f
00100a60 00000020 T __floatsisf
00100a80 0000008c T __aeabi_ul2f
00100a80 0000008c T __floatundisf
00100a90 0000007c T __aeabi_l2f
00100a90 0000007c T __floatdisf
00100b0c T __aeabi_ldivmod
00100be0 00000014 T __restore_core_regs
00100be0 00000014 T restore_core_regs
00100bf4 T __gnu_Unwind_Restore_VFP
00100bfc T __gnu_Unwind_Save_VFP
00100c04 T __gnu_Unwind_Restore_VFP_D
00100c0c T __gnu_Unwind_Save_VFP_D
00100c14 T __gnu_Unwind_Restore_VFP_D_16_to_31
00100c1c T __gnu_Unwind_Save_VFP_D_16_to_31
00100c24 T __gnu_Unwind_Restore_WMMXD
00100c68 T __gnu_Unwind_Save_WMMXD
00100cac T __gnu_Unwind_Restore_WMMXC
00100cc0 T __gnu_Unwind_Save_WMMXC
00100cd4 00000024 T ___Unwind_RaiseException
00100cd4 00000024 T _Unwind_RaiseException
00100cf8 00000024 T ___Unwind_Resume
00100cf8 00000024 T _Unwind_Resume
00100d1c 00000024 T ___Unwind_Resume_or_Rethrow
00100d1c 00000024 T _Unwind_Resume_or_Rethrow
00100d40 00000024 T ___Unwind_ForcedUnwind
00100d40 00000024 T _Unwind_ForcedUnwind
00100d64 00000024 T ___Unwind_Backtrace
00100d64 00000024 T _Unwind_Backtrace
00100da8 00000390 T strcmp
00101130 t __do_global_dtors_aux
00101180 t frame_dummy
001011ac 00000010 T DeltaTime_Get()
001011bc 00000044 T DeltaTime_Update()
00101200 0000002c T onStartButtonClick()
0010122c 00000094 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
001012c0 0000011c t drawTransition() [clone .part.0]
001013dc 00000150 T texts()
0010152c 000000cc T loadUI()
001015f8 00000194 T loadSprites()
0010178c 000000fc T drawTop(C3D_RenderTarget_tag*)
00101888 00000088 T drawBottom(C3D_RenderTarget_tag*)
00101910 000001e8 T main
00101af8 00000048 t _GLOBAL__sub_I_gamestate
00101b40 00000030 T changeScene(SceneManager*, int)
00101b70 0000000c T SpriteManager_Init(SpriteManager*)
00101b7c 00000060 T SpriteManager_Load(SpriteManager*, char const*, char const*)
00101bdc 00000054 T SpriteManager_GetSheet(SpriteManager*, char const*)
00101c30 00000040 T SpriteManager_Free(SpriteManager*)
00101c70 00000040 T UIButton_Init(UIButton*, C2D_SpriteSheet_s*, int, float, float, float, float)
00101cb0 00000010 T UIButton_SetHoverSprite(UIButton*, int)
00101cc0 00000010 T UIButton_SetPressedSprite(UIButton*, int)
00101cd0 000000c4 T UIButton_Update(UIButton*, touchPosition)
00101d94 000000f0 T UIButton_Draw(UIButton*)
00101e84 0000009c T UIText::Init(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, C2D_Font_s*, float, float, float, unsigned long)
00101f20 00000040 T UIText::Draw() const
00101f60 00000034 T UIText::Free()
00101f94 00000044 t C2Di_FrameEndHook
00101fd8 0000036c T C2D_Init
00102344 0000004c T C2D_Fini
00102390 000000b8 T C2D_Prepare
00102448 00000048 T C2D_Flush
00102490 00000104 T C2D_SceneSize
00102594 00000058 T C2D_CreateScreenTarget
001025ec 00000064 T C2D_TargetClear
00102650 0000013c T C2Di_CalcQuad
0010278c 00000058 T C2Di_AppendQuad
001027e4 00000040 T C2Di_AppendVtx
00102824 00000550 T C2Di_Update
00102d74 000002b0 T C2D_DrawImage
00103024 00000158 T C2D_DrawRectangle
0010317c 00000018 t C2Di_GlyphComp
00103194 00000140 t C2Di_CalcLineWidths
001032d4 000001dc T C2D_TextBufNew
001034b0 00000004 T C2D_TextBufDelete
001034b4 000001c8 T C2D_TextFontParseLine
0010367c 000000a8 T C2D_TextFontParse
00103724 00000014 T C2D_TextParse
00103738 00000030 T C2D_TextOptimize
00103768 00000f6c T C2D_DrawText
001046d4 0000006c T C2D_SpriteSheetLoadFromHandle
00104740 00000048 T C2D_SpriteSheetLoad
00104788 00000028 T C2D_SpriteSheetFree
001047b0 0000002c T C2D_SpriteSheetGetImage
001047dc 00000028 T C2D_FontFree
00104804 000000e8 t C2Di_PostLoadFont
001048ec 000000b4 T C2D_FontLoadFromHandle
001049a0 00000034 T C2D_FontLoad
001049d4 00000044 T C2D_FontGlyphIndexFromCodePoint
00104a18 00000078 T C2D_FontCalcGlyphPos
00104a90 00000028 T AttrInfo_Init
00104ab8 00000094 T AttrInfo_AddLoader
00104b4c 00000054 T C3D_SetAttrInfo
00104ba0 00000080 T C3Di_AttrInfoBind
00104c20 00000004 W C3Di_LightEnvUpdate
00104c24 00000004 W C3Di_LightEnvDirty
00104c28 000000b4 t C3Di_AptEventHook
00104cdc 00000004 W C3Di_GasUpdate
00104ce0 000001d0 T C3D_Init
00104eb0 00000098 T C3D_SetViewport
00104f48 000004e8 T C3Di_UpdateContext
00105430 000000e0 T C3Di_SplitFrame
00105510 00000044 T C3D_Fini
00105554 00000194 T C3D_BindProgram
001056e8 00000024 T BufInfo_Init
0010570c 00000080 T BufInfo_Add
0010578c 0000003c T C3D_SetBufInfo
001057c8 00000048 T C3Di_BufInfoBind
00105810 0000021c T C3D_DrawElements
00105a2c 00000040 T C3D_DepthMap
00105a6c 0000001c T C3D_CullFace
00105a88 00000040 T C3D_StencilTest
00105ac8 00000024 T C3D_StencilOp
00105aec 0000001c T C3D_BlendingColor
00105b08 00000024 T C3D_EarlyDepthTest
00105b2c 0000002c T C3D_DepthTest
00105b58 0000002c T C3D_AlphaTest
00105b84 00000050 T C3D_AlphaBlend
00105bd4 00000030 T C3D_FragOpMode
00105c04 00000044 T C3D_FragOpShadow
00105c48 000001ac T C3Di_EffectBind
00105df4 0000001c T C3D_CalcColorBufSize
00105e10 0000001c T C3D_CalcDepthBufSize
00105e2c 00000044 T C3D_SetFrameBuf
00105e70 0000016c T C3Di_FrameBufBind
00105fdc 000000c8 T C3D_FrameBufClear
001060a4 00000044 T C3D_FrameBufTransfer
001060e8 000000a8 T C3D_ImmSendAttrib
00106190 00000070 T C3D_ProcTexInit
00106200 00000054 T C3D_ProcTexBind
00106254 0000005c T C3D_ProcTexLutBind
001062b0 000000a4 T ProcTexLut_FromArray
00106354 00000178 T C3Di_ProcTexUpdate
001064cc 00000068 T C3Di_ProcTexDirty
00106534 0000004c t onVBlank0
00106580 0000004c t onVBlank1
001065cc 00000080 t C3Di_RenderTargetDestroy
0010664c 000000f4 t onQueueFinish
00106740 00000038 T C3Di_RenderQueueEnableVBlank
00106778 00000030 T C3Di_RenderQueueDisableVBlank
001067a8 00000060 T C3Di_RenderQueueInit
00106808 000000b4 T C3Di_RenderQueueExit
001068bc 00000034 T C3Di_RenderQueueWaitDone
001068f0 000000e8 T C3D_FrameBegin
001069d8 00000048 T C3D_FrameDrawOn
00106a20 00000058 T C3D_FrameSplit
00106a78 000001d0 T C3D_FrameEnd
00106c48 0000001c T C3D_FrameEndHook
00106c64 00000170 T C3D_RenderTargetCreate
00106dd4 000000a8 T C3D_RenderTargetSetOutput
00106e7c 000000fc T C3D_SyncTextureCopy
00106f78 000003d8 t Tex3DSi_ImportCommon
00107350 00000038 T Tex3DS_TextureImportStdio
00107388 0000001c T Tex3DS_GetSubTexture
001073a4 00000004 T Tex3DS_TextureFree
001073a8 00000034 T C3D_GetTexEnv
001073dc 00000024 T C3Di_TexEnvBind
00107400 00000290 T C3D_TexInitWithParams
00107690 000000c8 T C3D_TexLoadImage
00107758 00000044 T C3D_TexBind
0010779c 00000074 T C3D_TexDelete
00107810 0000014c T C3Di_SetTex
0010795c 00000290 T C3D_UpdateUniforms
00107bec 000000c0 T C3Di_DirtyUniforms
00107cac 000000d8 T C3Di_LoadShaderUniforms
00107d84 00000028 T C3Di_ClearShaderUniforms
00107dac 000000cc T Mtx_Ortho
00107e78 000000cc T Mtx_OrthoTilt
00107f44 00000024 t addrMapNodeComparator(rbtree_node const*, rbtree_node const*)
00107f68 00000004 t addrMapNodeDestructor(rbtree_node*)
00107f6c 0000012c T linearMemAlign
00108098 00000008 T linearAlloc
001080a0 0000005c T linearFree
001080fc 00000088 T MemPool::CoalesceRight(MemBlock*)
00108184 00000178 T MemPool::Allocate(MemChunk&, unsigned long, int)
001082fc 00000118 T MemPool::Deallocate(MemChunk const&)
00108414 00000030 T MemPool::GetFreeSpace()
00108444 00000024 t addrMapNodeComparator(rbtree_node const*, rbtree_node const*)
00108468 00000004 t addrMapNodeDestructor(rbtree_node*)
0010846c 00000248 T vramMemAlignAt
001086b4 0000000c T vramAlloc
001086c0 0000000c T vramAllocAt
001086cc 00000094 T vramFree
00108760 0000009c T fontEnsureMapped
001087fc 0000007c T fontFixPointers
00108878 00000100 T fontGlyphIndexFromCodePoint
00108978 00000214 T fontCalcGlyphPos
00108b8c 000000cc t gfxPresentFramebuffer
00108c58 0000001c T gfxIsWide
00108c74 000000f8 T gfxSetScreenFormat
00108d6c 000000d8 T gfxInit
00108e44 00000010 T gfxInitDefault
00108e54 000000b8 T gfxExit
00108f0c 000000a0 T gfxGetFramebuffer
00108fac 00000028 T gfxScreenSwapBuffers
00108fd4 00000074 T osConvertVirtToPhys
00109048 00000054 T osGetTimeRef
0010909c 000000ec T osGetTime
00109188 00000034 T __ctru_speedup_config
001091bc 00000008 t romfs_close
001091c4 000000ac t romfs_seek
00109270 00000024 t romfs_dirreset
00109294 000000c0 t fill_dir
00109354 000002ac t romfs_dirnext
00109600 00000074 t romfs_free
00109674 000000d0 t searchForFile.constprop.0
00109744 000000d4 t searchForDir.constprop.0
00109818 000001c0 t navigateToDir.constprop.0
001099d8 00000114 t romfs_open
00109aec 0000004c t romfs_chdir
00109b38 00000068 t romfs_diropen
00109ba0 00000178 t romfs_stat
00109d18 00000008 t romfs_dirclose
00109d20 0000007c t romfs_fstat
00109d9c 000000d0 t romfs_read
00109e6c 0000028c T romfsMountFromFile
0010a0f8 00000098 T romfsMountFromCurrentProcess
0010a190 00000258 T romfsMountSelf
0010a3e8 000000a0 T romfsUnmount
0010a488 0000013c T GPUCMD_Add
0010a5c4 000000b0 T GPUCMD_Split
0010a674 00000034 T f32tof16
0010a6a8 00000034 T f32tof24
0010a6dc 00000038 T f32tof31
0010a714 00000010 T GX_BindQueue
0010a724 0000007c T GX_ProcessCommandList
0010a7a0 00000074 T GX_MemoryFill
0010a814 00000074 T GX_DisplayTransfer
0010a888 00000078 T GX_TextureCopy
0010a900 00000064 t gxCmdQueueDoCommands.part.0
0010a964 000000e4 T gxCmdQueueInterrupt
0010aa48 00000068 T gxCmdQueueClear
0010aab0 00000108 T gxCmdQueueAdd
0010abb8 00000080 T gxCmdQueueRun
0010ac38 00000064 T gxCmdQueueStop
0010ac9c 0000008c T gxCmdQueueWait
0010ad28 000001e0 T shaderInstanceInit
0010af08 00000018 T shaderInstanceGetUniformLocation
0010af20 0000001c T shaderProgramInit
0010af3c 00000074 T shaderProgramFree
0010afb0 00000094 T shaderProgramSetVsh
0010b044 000008d0 T shaderProgramConfigure
0010b914 000001dc t DVLE_GenerateOutmap.part.0
0010baf0 000001ac T DVLB_ParseFile
0010bc9c 00000050 T DVLB_Free
0010bcec 00000074 T DVLE_GetUniformRegister
0010bd60 00000180 t aptConvertScreenForCapture
0010bee0 00000138 T aptSendCommand
0010c018 00000044 t aptExitProcess
0010c05c 00000394 T aptExit
0010c3f0 000000d8 T aptHandleSleep
0010c4c8 00000034 T aptHook
0010c4fc 00000030 T aptUnhook
0010c52c 00000084 T APT_SleepIfShellClosed
0010c5b0 00000078 T aptSetSleepAllowed
0010c628 00000084 T APT_UnlockTransition
0010c6b0 00000470 t aptEventHandler
0010cb20 000000bc T APT_ReceiveParameter
0010cbdc 000000b0 t aptReceiveParameter.constprop.0
0010cc90 00000294 t aptScreenTransfer
0010cf24 000002d0 t aptWaitForWakeUp.isra.0
0010d1f4 000000f4 T aptJumpToHomeMenu
0010d2e8 00000058 T aptMainLoop
0010d340 00000240 T aptInit
0010d580 00000090 T APT_CheckNew3DS
0010d610 00000048 T APT_GetSharedFont
0010d658 000000a4 t DSP_LoadComponent.part.0
0010d6fc 000000b4 T aptDspSleep
0010d7b0 000000b4 T aptDspWakeup
0010d864 00000044 T aptDspCancel
0010d8a8 00000104 T fsInit
0010d9ac 0000003c T fsExit
0010d9e8 00000068 T fsExemptFromSession
0010da50 00000050 T fsUnexemptFromSession
0010daa0 000000cc T FSUSER_OpenFile
0010db6c 000000cc T FSUSER_OpenFileDirectly
0010dc38 000000b8 T FSUSER_DeleteFile
0010dcf0 000000f4 T FSUSER_RenameFile
0010dde4 000000b8 T FSUSER_DeleteDirectory
0010de9c 000000d0 T FSUSER_CreateFile
0010df6c 000000c0 T FSUSER_CreateDirectory
0010e02c 000000f4 T FSUSER_RenameDirectory
0010e120 000000b4 T FSUSER_OpenDirectory
0010e1d4 00000090 T FSUSER_OpenArchive
0010e264 0000008c T FSUSER_CloseArchive
0010e2f0 00000074 T FSUSER_GetSdmcArchiveResource
0010e364 00000064 T FSUSER_IsSdmcWritable
0010e3c8 00000064 T FSFILE_Read
0010e42c 0000006c T FSFILE_Write
0010e498 00000044 T FSFILE_GetSize
0010e4dc 00000028 T FSFILE_SetSize
0010e504 0000003c T FSFILE_Close
0010e540 00000024 T FSFILE_Flush
0010e564 00000060 T FSDIR_Read
0010e5c4 0000003c T FSDIR_Close
0010e600 00000c70 t gspHardwareInit
0010f270 00000280 T gspInit
0010f4f0 00000110 T gspExit
0010f600 00000010 T gspHasGpuRight
0010f610 000000a4 T gspPresentBuffer
0010f6b4 00000030 T gspSetEventCallback
0010f6e4 00000050 T gspWaitForEvent
0010f734 0000004c T gspWaitForAnyEvent
0010f780 00000154 t gspEventThreadMain
0010f8d4 0000012c T gspSubmitGxCommand
0010fa00 00000050 T GSPGPU_FlushDataCache
0010fa50 00000034 T GSPGPU_SetLcdForceBlack
0010fa84 00000080 T GSPGPU_AcquireRight
0010fb04 0000005c T GSPGPU_ReleaseRight
0010fb60 0000007c T GSPGPU_ImportDisplayCaptureInfo
0010fbdc 0000002c T GSPGPU_SaveVramSysArea
0010fc08 0000002c T GSPGPU_RestoreVramSysArea
0010fc34 00000024 W hidShouldUseIrrst
0010fc58 000001cc T hidInit
0010fe24 000000e8 T hidExit
0010ff0c 000002a0 T hidScanInput
001101ac 00000010 T hidKeysDown
001101bc 00000010 T hidKeysUp
001101cc 00000018 T hidTouchRead
001101e4 000001a4 T irrstInit
00110388 000000dc T irrstExit
00110464 000000b4 T irrstScanInput
00110518 00000024 T irrstKeysHeld
0011053c 00000078 T ptmSysmInit
001105b4 0000003c T ptmSysmExit
001105f0 00000034 T PTMSYSM_ConfigureNew3DSCPU
00110624 000000e0 t buffer_read
00110704 000000cc t iov_read
001107d0 00000164 t iov_memmove
00110934 000001e0 t decompress_rle
00110b14 00000264 t decompress_lzss
00110d78 00000418 t decompress_lz11
00111190 0000031c t decompress_huff.isra.0
001114ac 00000010 T decompressCallback_Stdio
001114bc 000000e4 T decompressHeader
001115a0 0000021c T decompressV
001117bc 00000074 T rbtree_find
00111830 00000010 T rbtree_init
00111840 00000198 t do_insert
001119d8 00000008 T rbtree_insert
001119e0 00000310 T rbtree_remove
00111cf0 00000090 T rbtree_rotate
00111d80 00000140 T decode_utf8
00111ec0 000000e8 T utf16_to_utf8
00111fa8 000000c0 T utf8_to_utf16
00112068 000001e8 W __system_allocateHeaps
00112250 00000038 W __libctru_init
00112288 0000016c W __system_initArgv
001123f4 00000030 T __syscall_getreent
00112424 00000064 T __syscall_gettod_r
00112488 00000004 T __syscall_lock_acquire
0011248c 00000004 T __syscall_lock_release
00112490 00000004 T __syscall_lock_acquire_recursive
00112494 00000004 T __syscall_lock_release_recursive
00112498 00000004 T __syscall_exit
0011249c 00000054 T initThreadVars
001124f0 00000080 T __system_initSyscalls
00112570 T svcControlMemory
00112590 T svcQueryMemory
001125c0 T svcExitProcess
001125c8 T svcCreateThread
001125e8 T svcExitThread
001125f0 T svcSleepThread
001125f8 T svcReleaseMutex
00112600 T svcCreateEvent
00112614 T svcSignalEvent
0011261c T svcClearEvent
00112624 T svcMapMemoryBlock
0011262c T svcUnmapMemoryBlock
00112634 T svcCreateAddressArbiter
00112648 T svcArbitrateAddressNoTimeout
00112650 T svcCloseHandle
00112658 T svcWaitSynchronization
00112660 T svcWaitSynchronizationN
00112688 T svcDuplicateHandle
0011269c T svcGetSystemTick
001126a4 T svcConnectToPort
001126b8 T svcSendSyncRequest
001126c0 T svcGetResourceLimit
001126d4 T svcGetResourceLimitLimitValues
001126dc T svcGetResourceLimitCurrentValues
001126e4 T svcBreak
001126ec T __aeabi_read_tp
001126f8 W initSystem
00112748 W __ctru_exit
0011275c 0000008c W envGetHandle
001127e8 00000050 W envDestroyHandles
00112838 00000164 T srvInit
0011299c 00000064 T srvExit
00112a00 00000060 T srvEnableNotification
00112a60 000000a0 T srvGetServiceHandleDirect
00112b00 00000048 T srvGetServiceHandle
00112b48 00000034 T srvSubscribe
00112b7c 00000060 T srvReceiveNotification
00112bdc 00000038 T srvPublishToSubscriber
00112c14 0000000c T __sync_init
00112c20 00000018 T __sync_fini
00112c38 00000028 T syncArbitrateAddress
00112c60 000000ac T LightLock_Lock
00112d0c 00000040 T LightLock_Unlock
00112d4c 00000054 T RecursiveLock_Lock
00112da0 00000054 T RecursiveLock_Unlock
00112df4 00000044 T LightEvent_Init
00112e38 000000b8 T LightEvent_Clear
00112ef0 000000dc T LightEvent_Signal
00112fcc 00000050 T LightEvent_TryWait
0011301c 000000ac T LightEvent_Wait
001130c8 000001fc T threadCreate
001132c4 00000038 T threadFree
001132fc 00000024 T threadJoin
00113320 00000030 T threadGetCurrent
00113350 00000040 T threadExit
00113390 00000020 t _thread_begin
001133b0 00000090 t mappableFindAddressWithin
00113440 00000028 T mappableInit
00113468 0000007c T mappableAlloc
001134e4 00000004 T mappableFree
001134e8 0000000c T srvPmGetSessionHandle
001134f4 00000060 T rbtree_node_next
00113554 00000054 T decode_utf16
001135a8 00000054 T encode_utf16
001135fc 000000e0 T encode_utf8
001136dc 00000030 W __appExit
0011370c 00000030 W __appInit
0011373c 00000090 W __libctru_exit
001137cc 00000014 t archive_link
001137e0 00000014 t archive_dirreset
001137f4 00000014 t archive_chmod
00113808 00000024 t error_cmp
0011382c 00000050 t archive_translate_error
0011387c 000000c0 t archive_seek
0011393c 00000078 t _archiveInit.part.0
001139b4 000000d4 t archiveFindDevice.part.0
00113a88 00000298 t archive_utf16path
00113d20 00000098 t _archiveUnmountDeviceStruct.part.0
00113db8 00000014 t archive_statvfs
00113dcc 00000014 t archive_fchmod
00113de0 00000178 t _archiveMountDevice
00113f58 000000f8 t archive_diropen
00114050 000000ac t archive_fstat
001140fc 00000074 t archive_fsync
00114170 00000074 t archive_close
001141e4 00000078 t archive_dirclose
0011425c 000000ec t sdmc_statvfs
00114348 000000f8 t archive_chdir
00114440 0000008c t archive_ftruncate
001144cc 000000bc t archive_read
00114588 000000a8 t archive_unlink
00114630 000000c0 t archive_rmdir
001146f0 000000d8 t archive_mkdir
001147c8 000001a0 t archive_stat
00114968 00000164 t archive_dirnext
00114acc 0000013c t archive_write
00114c08 00000254 t archive_open
00114e5c 00000270 t archive_rename
001150cc 000001c8 T archiveMountSdmc
00115294 00000054 T archiveUnmountAll
001152e8 00000004 T operator delete(void*, unsigned int)
001152ec 0000005c T operator new(unsigned int)
00115348 00000054 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int)
0011539c 00000014 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose()
001153b0 000000c8 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00115478 0000000c T std::bad_alloc::what() const
00115484 00000020 T std::bad_alloc::~bad_alloc()
00115484 00000020 T std::bad_alloc::~bad_alloc()
001154a4 0000002c T std::bad_alloc::~bad_alloc()
001154d0 00000004 T operator delete(void*)
001154d4 0000000c W __gnu_cxx::__concurrence_lock_error::what() const
001154e0 0000000c W __gnu_cxx::__concurrence_unlock_error::what() const
001154ec 00000020 W __gnu_cxx::__concurrence_lock_error::~__concurrence_lock_error()
001154ec 00000020 W __gnu_cxx::__concurrence_lock_error::~__concurrence_lock_error()
0011550c 0000002c W __gnu_cxx::__concurrence_lock_error::~__concurrence_lock_error()
00115538 00000020 W __gnu_cxx::__concurrence_unlock_error::~__concurrence_unlock_error()
00115538 00000020 W __gnu_cxx::__concurrence_unlock_error::~__concurrence_unlock_error()
00115558 0000002c W __gnu_cxx::__concurrence_unlock_error::~__concurrence_unlock_error()
00115584 0000002c W __gnu_cxx::__throw_concurrence_lock_error()
001155b0 0000002c W __gnu_cxx::__throw_concurrence_unlock_error()
001155dc 0000012c t (anonymous namespace)::pool::free(void*) [clone .constprop.0]
00115708 000000f0 t (anonymous namespace)::pool::allocate(unsigned int) [clone .constprop.0]
001157f8 00000044 T __cxa_allocate_exception
0011583c 00000028 T __cxa_free_exception
00115864 000001a4 t _GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv
00115a08 T __cxa_end_cleanup
00115a18 00000138 T __cxa_type_match
00115b50 000000b4 T __cxa_begin_cleanup
00115c04 000000b4 T __gnu_end_cleanup
00115cb8 000000e0 T __cxa_begin_catch
00115d98 000000e0 T __cxa_end_catch
00115e78 00000004 T std::exception::~exception()
00115e78 00000004 T std::exception::~exception()
00115e7c 00000004 T std::bad_exception::~bad_exception()
00115e7c 00000004 T std::bad_exception::~bad_exception()
00115e80 0000000c T transaction clone for std::bad_exception::what() const
00115e80 0000000c T std::bad_exception::what() const
00115e8c 00000020 T std::bad_exception::~bad_exception()
00115eac 00000038 t eh_globals_dtor(void*)
00115ee4 00000038 T __cxa_get_globals_fast
00115f1c 00000090 T __cxa_get_globals
00115fac 00000040 t _GLOBAL__sub_I__ZN17__eh_globals_init7_S_initE
00115fec 00000034 t _GLOBAL__sub_D__ZN17__eh_globals_init7_S_initE
00116020 00000150 t read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)
00116170 0000005c t base_of_encoded_value(unsigned char, _Unwind_Context*)
001161cc 000000f0 t parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)
001162bc 000006c8 T __gxx_personality_v0
00116984 00000014 T __cxxabiv1::__terminate(void (*)())
00116998 00000018 T std::terminate()
001169b0 0000000c T __cxxabiv1::__unexpected(void (*)())
001169bc 00000018 T std::unexpected()
001169d4 00000014 T std::get_terminate()
001169e8 00000014 T std::get_unexpected()
001169fc 00000070 t __gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Control_Block*)
00116a6c 00000054 T __cxa_init_primary_exception
00116ac0 00000054 T __cxa_throw
00116b14 000000b0 T __cxa_rethrow
00116bc4 00000014 T std::get_new_handler()
00116bd8 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
00116bd8 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
00116bf8 0000002c T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
00116c24 00000140 T __cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
00116d64 00000088 T __cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
00116dec 00000044 T __cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
00116e30 00000004 T std::type_info::~type_info()
00116e30 00000004 T std::type_info::~type_info()
00116e34 00000008 T std::type_info::__is_pointer_p() const
00116e34 00000008 T std::type_info::__is_function_p() const
00116e3c 00000040 T std::__throw_logic_error(char const*)
00116e7c 00000040 T std::__throw_length_error(char const*)
00116ebc 0000005c T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const
00116f18 00000014 T __cxxabiv1::__class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
00116f2c 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
00116f2c 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
00116f4c 0000002c T __cxxabiv1::__class_type_info::~__class_type_info()
00116f78 00000070 T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
00116fe8 00000090 T __cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const
00117078 000000f8 T __cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
00117170 00000070 t __cxxabiv1::__is_gxx_exception_class(char*)
001171e0 0000002c T __cxa_call_terminate
0011720c 00000148 T __cxa_call_unexpected
00117354 00000008 T std::logic_error::what() const
00117354 00000008 T std::runtime_error::what() const
0011735c 00000098 T std::logic_error::~logic_error()
0011735c 00000098 T std::logic_error::~logic_error()
001173f4 00000098 T std::length_error::~length_error()
001173f4 00000098 T std::length_error::~length_error()
0011748c 000000a0 T std::logic_error::~logic_error()
0011752c 000000a0 T std::length_error::~length_error()
001175cc 000000d8 T std::logic_error::logic_error(char const*)
001175cc 000000d8 T std::logic_error::logic_error(char const*)
001176a4 00000020 T std::length_error::length_error(char const*)
001176a4 00000020 T std::length_error::length_error(char const*)
001176c4 00000088 W std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator<char> const&)
0011774c 00000004 W std::string::_Rep::_M_destroy(std::allocator<char> const&)
00117750 00000264 T sinf
001179b4 00000024 t with_errnof
001179d8 0000001c T __math_invalidf
001179f4 000000c0 T ceilf
00117ab8 0000025c T cosf
00117d14 00000130 T __udivmoddi4
00117e44 00000018 t selfrel_offset31
00117e5c 00000090 t search_EIT_table
00117eec 00000040 t __gnu_unwind_get_pr_addr
00117f2c 00000110 t get_eit_entry
0011803c 00000088 t restore_non_core_regs
001180c4 00000014 t _Unwind_decode_typeinfo_ptr.constprop.0
001180d8 00000004 t _Unwind_DebugHook
001180dc 00000064 t unwind_phase2
00118140 0000013c t unwind_phase2_forced
0011827c 000000a4 T __gnu_Unwind_RaiseException
00118320 00000020 T __gnu_Unwind_ForcedUnwind
00118340 00000074 T __gnu_Unwind_Resume
001183b4 00000020 T __gnu_Unwind_Resume_or_Rethrow
001183d4 00000004 T _Unwind_Complete
001183d8 00000018 T _Unwind_DeleteException
001183f0 00000064 T _Unwind_VRS_Get
00118454 0000002c t _Unwind_GetGR
00118480 00000064 T _Unwind_VRS_Set
001184e4 0000002c t _Unwind_SetGR
00118510 000000c0 T __gnu_Unwind_Backtrace
001185d0 0000040c t __gnu_unwind_pr_common
001189dc 00000008 T __aeabi_unwind_cpp_pr0
001189e4 00000008 W __aeabi_unwind_cpp_pr1
001189ec 00000008 W __aeabi_unwind_cpp_pr2
001189f4 00000458 T _Unwind_VRS_Pop
00118e4c 00000064 t next_unwind_byte
00118eb0 0000002c t _Unwind_GetGR.constprop.0
00118edc 00000004 t unwind_UCB_from_context
00118ee0 00000464 T __gnu_unwind_execute
00119344 00000048 T __gnu_unwind_frame
0011938c 00000010 T _Unwind_GetRegionStart
0011939c 0000001c T _Unwind_GetLanguageSpecificData
001193b8 00000008 T _Unwind_GetDataRelBase
001193c0 00000008 T _Unwind_GetTextRelBase
001193c8 000000d8 T strncmp
001194a0 00000140 T strchr
001195e0 00000024 T getenv
00119604 00000144 T _fclose_r
00119748 00000020 T fclose
00119768 0000008c T strlen
001197f4 000000d8 T memcmp
001198cc 0000001c t stdio_exit_handler
001198e8 0000005c t cleanup_stdio
00119944 00000154 t global_stdio_init.part.0
00119a98 00000138 T __sfp
00119bd0 0000005c T __sinit
00119c2c 0000000c T __sfp_lock_acquire
00119c38 0000000c T __sfp_lock_release
00119c44 000001ec t _strtoul_l.isra.0
00119e30 0000003c T strtoul
00119e6c 00000084 T __libc_init_array
00119ef0 0000009c T strncat
00119f8c 00000070 T _fwalk_sglue
00119ffc 00000078 T bsearch
0011a074 0000000c T __errno
0011a080 00000028 T calloc
0011a0a8 000008e8 T qsort
0011a990 00000014 T abort
0011a9a4 000000d8 T _calloc_r
0011aa7c 0000001c T _fseek_r
0011aa98 00000028 T memalign
0011aac0 0000082c T _malloc_r
0011b2ec 00000114 T _malloc_trim_r
0011b400 00000314 T _free_r
0011b714 0000003c T strnlen
0011b750 00000040 T malloc
0011b790 00000020 T free
0011b7b0 0000022c T __sflush_r
0011b9dc 000000c4 T _fflush_r
0011baa0 00000048 T time
0011bae8 000000dc T _findenv_r
0011bbc4 000000e4 T memset
0011bca8 00000334 T _fread_r
0011bfdc 00000038 T fread
0011c014 0000000c T __malloc_lock
0011c020 0000000c T __malloc_unlock
0011c02c 00000004 W __call_exitprocs
0011c030 00000030 T exit
0011c060 00000294 T setvbuf
0011c2f4 00000134 T _fopen_r
0011c428 00000028 T fopen
0011c450 000000d4 T strncpy
0011c524 0000012c T memcpy
0011c650 00000044 T __sread
0011c694 00000068 T __swrite
0011c6fc 00000040 T __sseek
0011c73c 00000008 T __sclose
0011c744 0000009c T _raise_r
0011c7e0 00000020 T raise
0011c800 0000000c T __env_lock
0011c80c 0000000c T __env_unlock
0011c818 0000016c T _memalign_r
0011c984 00000588 T _fseeko_r
0011cf0c 000000b8 T __sflags
0011cfc4 0000003c T __libc_fini_array
0011d000 00000038 t lflush
0011d038 000001a8 T __srefill_r
0011d1e0 00000164 T __smakebuf_r
0011d344 00000090 T __swhatbuf_r
0011d3d4 00000020 T _exit
0011d3f4 00000140 T chdir
0011d534 000001c8 T _concatenate_path
0011d6fc 0000009c T _fstat_r
0011d798 00000014 T _getpid_r
0011d7ac 0000002c T __getreent
0011d7d8 00000030 T _gettimeofday_r
0011d808 000000a0 T __release_handle
0011d8a8 000000b0 T __alloc_handle
0011d958 00000058 T __get_handle
0011d9b0 00000110 T _close_r
0011dac0 00000008 t null_write
0011dac8 00000018 T setDefaultDevice
0011dae0 000000c4 T FindDevice
0011dba4 00000028 T RemoveDevice
0011dbcc 00000098 T AddDevice
0011dc64 00000020 T GetDeviceOpTab
0011dc84 00000008 T _isatty_r
0011dc8c 00000014 T _kill_r
0011dca0 00000094 T _lseek_r
0011dd34 000000c0 T _open_r
0011ddf4 00000094 T _read_r
0011de88 00000078 W _sbrk_r
0011df00 0000001c T __libc_lock_acquire
0011df1c 0000001c T __libc_lock_release
0011df38 0000001c T __libc_lock_acquire_recursive
0011df54 0000001c T __libc_lock_release_recursive
0011df70 00000094 T _write_r
0011e004 00000048 T strrchr
0011e04c T _fini
0011f048 r .LC5
0011f050 r .LC6
0011f2f4 00000008 r s_defaultTint.0
0011f2fc R render2d_shbin
0011f488 R render2d_shbin_end
0011f488 R render2d_shbin_size
0011f48c 00000004 r depthFmtSizes
0011f490 00000005 r colorFmtSizes
0011f498 00000010 r CSWTCH.11
0011f4a8 00000038 r CSWTCH.19
0011f4e0 00000080 r romFS_devoptab
0011f588 00000008 r morton_y.2
0011f590 00000008 r morton_x.3
0011f598 00000008 r s_sleepWakeEvents.4
0011f5a0 0000000c r serviceNameTable.5
0011f5d0 00000030 r error_table
0011f600 00000080 r archive_devoptab
0011f680 0000000d R typeinfo name for std::bad_alloc
0011f690 0000000c R typeinfo for std::bad_alloc
0011f69c 00000014 R vtable for std::bad_alloc
0011f6b0 00000027 V typeinfo name for __gnu_cxx::__concurrence_lock_error
0011f6d8 0000000c V typeinfo for __gnu_cxx::__concurrence_lock_error
0011f6e4 00000029 V typeinfo name for __gnu_cxx::__concurrence_unlock_error
0011f710 0000000c V typeinfo for __gnu_cxx::__concurrence_unlock_error
0011f71c 00000014 V vtable for __gnu_cxx::__concurrence_lock_error
0011f730 00000014 V vtable for __gnu_cxx::__concurrence_unlock_error
0011f744 0000000d R typeinfo name for std::exception
0011f754 00000008 R typeinfo for std::exception
0011f75c 00000012 R typeinfo name for std::bad_exception
0011f770 0000000c R typeinfo for std::bad_exception
0011f77c 00000020 R typeinfo name for __cxxabiv1::__forced_unwind
0011f79c 00000008 R typeinfo for __cxxabiv1::__forced_unwind
0011f7a4 00000024 R typeinfo name for __cxxabiv1::__foreign_exception
0011f7c8 00000008 R typeinfo for __cxxabiv1::__foreign_exception
0011f7d0 00000014 R vtable for std::bad_exception
0011f7f8 00000025 R typeinfo name for __cxxabiv1::__si_class_type_info
0011f820 0000000c R typeinfo for __cxxabiv1::__si_class_type_info
0011f82c 0000002c R vtable for __cxxabiv1::__si_class_type_info
0011f858 0000000d R typeinfo name for std::type_info
0011f868 00000008 R typeinfo for std::type_info
0011f870 00000022 R typeinfo name for __cxxabiv1::__class_type_info
0011f894 0000000c R typeinfo for __cxxabiv1::__class_type_info
0011f8a0 0000002c R vtable for __cxxabiv1::__class_type_info
0011f8cc 00000010 R typeinfo name for std::logic_error
0011f8dc 0000000c R typeinfo for std::logic_error
0011f8e8 00000011 R typeinfo name for std::length_error
0011f8fc 0000000c R typeinfo for std::length_error
0011f908 00000014 R vtable for std::logic_error
0011f91c 00000014 R vtable for std::length_error
0011f930 00000060 R __inv_pio4
0011f990 000000e0 R __sincosf_table
0011fa88 00000101 R _ctype_
0011fb8c 00000080 R dotab_stdnull
0011fc0c R __tdata_align
0011fc10 r __EH_FRAME_BEGIN__
0011fcfc R __exidx_start
0011fef4 R __exidx_end
00120000 00000001 D redrawTop
00120001 00000001 D redrawBottom
00120004 00000008 d framerateCounter
0012000c 00000004 d framerate
00120010 00000004 d queueLock
00120014 00000004 d aptChainloadDeliverArgSize
00120018 00000004 d kCount
0012001c 00000004 d kInterval
00120020 00000004 d kDelay
00120024 W __stacksize__
00120028 00000004 D __cxxabiv1::__unexpected_handler
0012002c 00000004 D __cxxabiv1::__terminate_handler
00120030 0000000c D __sglue
0012003c 00000004 D __malloc_sbrk_base
00120040 00000004 D __malloc_trim_threshold
00120048 00000408 D __malloc_av_
00120450 00000004 D _impure_ptr
00120458 00000140 D _impure_data
00120598 00000004 D environ
0012059c 00000400 d _current_working_directory
001209a0 00001000 d handles
001219a0 0000000c d __stderr_handle
001219ac 0000000c d __stdout_handle
001219b8 0000000c d __stdin_handle
001219c4 0000008c D devoptab_list
00121a50 00000004 d defaultDevice
00121a5c d _GLOBAL_OFFSET_TABLE_
00121a68 d __frame_dummy_init_array_entry
00121a68 D __init_array_start
00121a68 B __preinit_array_end
00121a68 B __preinit_array_start
00121a68 D __tdata_lma
00121a68 D __tdata_lma_end
00121a78 d __do_global_dtors_aux_fini_array_entry
00121a78 D __fini_array_start
00121a78 D __init_array_end
00121a80 D __bss_start__
00121a80 D __fini_array_end
00121a80 00000008 b lastTime
00121a88 00000004 b deltaTime
00121a90 00000020 B scenemanager
00121ab0 00000004 b font
00121ab4 0000002c B startButton
00121ae0 0000002c B howtoplayButton
00121b0c 00000044 b spriteManager
00121b50 00000078 B mainmenuSprites
00121bc8 00000004 B touch
00121bcc 00000004 B gamestate
00121bd0 b completed.1
00121bd4 b object.0
00121bf0 000005a8 B __C2Di_Context
00122198 00000040 b s_projBot
001221d8 00000040 b s_projTop
00122218 00000004 b uLoc_mdlvMtx
0012221c 00000004 b uLoc_projMtx
00122220 00000004 b s_glyphSheets
00122224 00000004 b s_textScale
00122228 0000000c b hookCookie
00122238 000002d0 B __C3D_Context
00122508 00000004 b frameEndCbData
0012250c 00000004 b frameEndCb
00122510 00000008 b frameCounter
00122518 00000001 b isTopStereo
00122519 00000001 b needSwapBot
0012251a 00000001 b needSwapTop
0012251b 00000001 b measureGpuTime
0012251c 00000001 b inSafeTransfer
0012251d 00000001 b inFrame
00122520 00000010 b cpuTime
00122530 00000010 b gpuTime
00122540 0000000c b linkedTarget
0012254c 00000004 b lastTarget
00122550 00000004 b firstTarget
00122554 00000008 b C3Di_IVUnifEverDirty
0012255c 000000c0 b C3Di_FVUnifEverDirty
0012261c 00000018 b C3Di_ShaderFVecData
00122634 00000002 B C3D_BoolUnifsDirty
00122638 00000008 B C3D_IVUnifDirty
00122640 000000c0 B C3D_FVUnifDirty
00122700 00000004 B C3D_BoolUnifs
00122704 00000020 B C3D_IVUnif
00122724 00000c00 B C3D_FVUnif
00123328 00000008 b sLinearPool
00123330 0000000c b sAddrMap
00123340 00000008 b sVramPoolB
00123348 00000008 b sVramPoolA
00123350 0000000c b sAddrMap
0012335c 00000004 b sharedFontAddr
00123360 00000004 B g_sharedFont
00123364 00000004 b screenAlloc
00123368 00000004 b screenFree
0012336c 00000002 b gfxIsDoubleBuf
00123370 00000002 b gfxCurBuf
00123372 00000001 b gfxIsVram
00123373 00000001 b gfxTopMode
00123374 00000002 b gfxFramebufferFormats
00123378 00000004 b gfxBottomFramebufferMaxSize
0012337c 00000004 b gfxTopFramebufferMaxSize
00123380 00000008 b gfxBottomFramebuffers
00123388 00000008 b gfxTopFramebuffers
00123390 00000001 V __ctru_speedup
00123394 00000004 b romfs_mount_list
00123398 00000004 V __romfs_path
0012339c 00000004 B gpuCmdBufOffset
001233a0 00000004 B gpuCmdBufSize
001233a4 00000004 B gpuCmdBuf
001233a8 00000004 b boundQueue
001233ac 00000001 b shouldStop
001233ad 00000001 b isRunning
001233ae 00000001 b isActive
001233b0 00000004 b curQueue
001233b4 00000001 b flagValue.0
001233b5 00000001 b flagInit.1
001233b8 00000004 b serviceName.6
001233bc 00000001 b aptChainloadFlags
001233bd 00000001 b aptChainloadMediatype
001233c0 00000020 b aptChainloadHmac
001233e0 00000300 b aptChainloadDeliverArg
001236e0 00000008 b aptChainloadTid
001236e8 00001000 b aptParameters
001246e8 00000004 b aptFlags
001246ec 00000001 b aptHomeButtonState
001246f0 00000004 b aptMessageFuncData
001246f4 00000004 b aptMessageFunc
001246f8 0000000c b aptFirstHook
00124704 00000001 b aptEventHandlerThreadQuit
00124708 00000004 b aptEventHandlerThread
0012470c 00000008 b aptSleepEvent
00124714 00000008 b aptReceiveEvent
0012471c 00000008 b aptEvents
00124724 00000004 b aptLockHandle
00124728 00000004 b aptRefCount
0012472c 00000002 b dspSavedCompDataMask
0012472e 00000002 b dspSavedCompProgMask
00124730 00000004 b dspSavedCompSize
00124734 00000004 b dspSavedCompBin
00124738 00000001 b dspSleeping
00124739 00000001 b dspComponentLoaded
0012473c 00000008 b dspFirstHook
00124744 00000004 b dspHandle
00124748 00000080 b fsExemptArchives
001247c8 00000004 b fsuRefCount
001247cc 00000004 b fsuHandle
001247d0 00000007 b gspEventCbOneShot
001247d8 0000001c b gspEventCbData
001247f4 0000001c b gspEventCb
00124810 00000038 b gspEvents
00124848 00000004 b gspLastEvent
0012484c 00000001 b gspRunEvents
00124850 00000004 b gspEventThread
00124854 00000004 b gspEvent
00124858 00000001 b gspGpuRight
00124859 00000001 b gspThreadId
0012485c 00000004 b gspSharedMem
00124860 00000004 b gspSharedMemHandle
00124864 00000004 b gspRefCount
00124868 00000004 b gspGpuHandle
0012486c 00000001 b usingIrrst
00124870 00000004 b hidRefCount
00124874 00000006 b gRate
0012487c 00000006 b aVec
00124884 00000004 b cPos
00124888 00000004 b tPos
0012488c 00000004 b kRepeat
00124890 00000004 b kUp
00124894 00000004 b kDown
00124898 00000004 b kHeld
0012489c 00000004 b kOld
001248a0 00000004 B hidSharedMem
001248a4 00000014 B hidEvents
001248b8 00000004 B hidMemHandle
001248bc 00000004 B hidHandle
001248c0 00000004 b irrstRefCount
001248c4 00000004 b csPos
001248c8 00000004 b kHeld
001248cc 00000004 B irrstSharedMem
001248d0 00000004 B irrstEvent
001248d4 00000004 B irrstMemHandle
001248d8 00000004 B irrstHandle
001248dc 00000004 b ptmSysmRefCount
001248e0 00000004 b ptmSysmHandle
001248e4 00000004 V __ctru_linear_heap_size
001248e8 00000004 V __ctru_heap_size
001248ec 00000004 B __ctru_linear_heap
001248f0 00000004 B __ctru_heap
001248f4 00000004 B __system_retAddr
001248f8 00000004 B __system_argv
001248fc 00000004 B __system_argc
00124900 b saved_stack
00124908 00000004 B __3dslink_host
0012490c 00000004 b srvRefCount
00124910 00000004 b srvHandle
00124914 00000004 b arbiter
00124918 00000004 b currentAddr
0012491c 00000004 b maxAddr
00124920 00000004 b minAddr
00124924 00000004 b srvPmHandle
00124928 000005c0 b archive_devices
00124ee8 00000004 b archive_device_cwd
00124eec 00000001 b archive_initialized
00124ef0 0000001c b (anonymous namespace)::emergency_pool
00124f0c 00000004 b init
00124f10 00000001 B __eh_globals_init::_S_init
00124f14 0000000c b (anonymous namespace)::eh_globals
00124f20 00000004 b (anonymous namespace)::__new_handler
00124f24 00000010 V std::string::_Rep::_S_empty_rep_storage
00124f34 0000000c b __sfp_recursive_mutex
00124f40 00000168 B __sf
001250a8 00000004 B __stdio_exit_handler
001250ac 00000028 B __malloc_current_mallinfo
001250d4 00000004 B __malloc_max_total_mem
001250d8 00000004 B __malloc_max_sbrked_mem
001250dc 00000004 B __malloc_top_pad
001250e0 0000000c b __malloc_recursive_mutex
001250ec 0000000c b __env_recursive_mutex
001250f8 00000004 b initial_env
001250fc 00000400 b temp_cwd
001254fc 00000004 b __hndl_lock
00125500 00000004 B fake_heap_start
00125504 00000004 B fake_heap_end
00125508 00000004 b heap_start.0
0012550c B __tls_start
00126114 B __bss_end__
00126114 A __end__
00126114 B __tls_end
